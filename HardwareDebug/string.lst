   1                             		.file	"string.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.global	_knl_memset
   6                             	_knl_memset:
   7                             	.LFB19:
   8                             		.file 1 "../kernel/tstdlib/string.c"
   1:../kernel/tstdlib/string.c **** /*
   2:../kernel/tstdlib/string.c ****  *----------------------------------------------------------------------
   3:../kernel/tstdlib/string.c ****  *    micro T-Kernel 3.00.00
   4:../kernel/tstdlib/string.c ****  *
   5:../kernel/tstdlib/string.c ****  *    Copyright (C) 2006-2019 by Ken Sakamura.
   6:../kernel/tstdlib/string.c ****  *    This software is distributed under the T-License 2.1.
   7:../kernel/tstdlib/string.c ****  *----------------------------------------------------------------------
   8:../kernel/tstdlib/string.c ****  *
   9:../kernel/tstdlib/string.c ****  *    Released by TRON Forum(http://www.tron.org) at 2019/12/11.
  10:../kernel/tstdlib/string.c ****  *
  11:../kernel/tstdlib/string.c ****  *----------------------------------------------------------------------
  12:../kernel/tstdlib/string.c ****  */
  13:../kernel/tstdlib/string.c **** 
  14:../kernel/tstdlib/string.c **** /*
  15:../kernel/tstdlib/string.c ****  *	string.c
  16:../kernel/tstdlib/string.c ****  *	T-Kernel standard library 
  17:../kernel/tstdlib/string.c ****  */
  18:../kernel/tstdlib/string.c **** 
  19:../kernel/tstdlib/string.c **** #include <tk/tkernel.h>
  20:../kernel/tstdlib/string.c **** #include "kernel.h"
  21:../kernel/tstdlib/string.c **** 
  22:../kernel/tstdlib/string.c **** /*** binary operation ***/
  23:../kernel/tstdlib/string.c **** /* memset : fill memory area */
  24:../kernel/tstdlib/string.c **** void* knl_memset( void *s, int c, SZ n )
  25:../kernel/tstdlib/string.c **** {
   9                             		.loc 1 25 1
  10 0000 6E 6C                   		pushm	r6-r12
  11                             	.LCFI0:
  12 0002 71 0A F4                		add	#-12, r0, r10
  13                             	.LCFI1:
  14 0005 EF A0                   		mov.L	r10, r0
  15 0007 E3 A1                   		mov.L	r1, [r10]
  16 0009 E7 A2 01                		mov.L	r2, 4[r10]
  17 000c E7 A3 02                		mov.L	r3, 8[r10]
  26:../kernel/tstdlib/string.c **** 	register unsigned char *cp, cval;
  27:../kernel/tstdlib/string.c **** 	register unsigned long *lp, lval;
  28:../kernel/tstdlib/string.c **** 
  29:../kernel/tstdlib/string.c **** 	cp = (unsigned char *)s;
  18                             		.loc 1 29 5
  19 000f EC A6                   		mov.L	[r10], r6
  30:../kernel/tstdlib/string.c **** 	cval = (unsigned char)c;
  20                             		.loc 1 30 7
  21 0011 ED A5 01                		mov.L	4[r10], r5
  22 0014 CF 5B                   		mov.B	r5, r11
  31:../kernel/tstdlib/string.c **** 	
  32:../kernel/tstdlib/string.c **** 	if (n < 8) {
  23                             		.loc 1 32 5
  24 0016 ED A5 02                		mov.L	8[r10], r5
  25 0019 61 75                   		cmp	#7, r5
  26 001b 2A 2A                   		bgt	.L6
  33:../kernel/tstdlib/string.c **** 		while (n-- > 0) {
  27                             		.loc 1 33 9
  28 001d 08                      		bra	.L3
  29                             	.L4:
  34:../kernel/tstdlib/string.c **** 			*cp++ = cval;
  30                             		.loc 1 34 7
  31 001e EF 65                   		mov.L	r6, r5
  32 0020 71 56 01                		add	#1, r5, r6
  33                             		.loc 1 34 10
  34 0023 C3 5B                   		mov.B	r11, [r5]
  35                             	.L3:
  33:../kernel/tstdlib/string.c **** 		while (n-- > 0) {
  36                             		.loc 1 33 11
  37 0025 ED A5 02                		mov.L	8[r10], r5
  38 0028 71 54 FF                		add	#-1, r5, r4
  39 002b E7 A4 02                		mov.L	r4, 8[r10]
  33:../kernel/tstdlib/string.c **** 		while (n-- > 0) {
  40                             		.loc 1 33 9
  41 002e 61 05                   		cmp	#0, r5
  42 0030 2A EE                   		bgt	.L4
  35:../kernel/tstdlib/string.c **** 		}
  36:../kernel/tstdlib/string.c **** 		return s;
  43                             		.loc 1 36 10
  44 0032 EC A5                   		mov.L	[r10], r5
  45 0034 2E 60                   		bra	.L5
  46                             	.L7:
  37:../kernel/tstdlib/string.c **** 	}
  38:../kernel/tstdlib/string.c **** 
  39:../kernel/tstdlib/string.c **** 	while ((long)cp % 4) {
  40:../kernel/tstdlib/string.c **** 		--n;
  47                             		.loc 1 40 3
  48 0036 ED A5 02                		mov.L	8[r10], r5
  49 0039 60 15                   		sub	#1, r5
  50 003b E7 A5 02                		mov.L	r5, 8[r10]
  41:../kernel/tstdlib/string.c **** 		*cp++ = cval;
  51                             		.loc 1 41 6
  52 003e EF 65                   		mov.L	r6, r5
  53 0040 71 56 01                		add	#1, r5, r6
  54                             		.loc 1 41 9
  55 0043 C3 5B                   		mov.B	r11, [r5]
  56                             	.L6:
  39:../kernel/tstdlib/string.c **** 		--n;
  57                             		.loc 1 39 9
  58 0045 EF 65                   		mov.L	r6, r5
  59 0047 64 35                   		and	#3, r5
  39:../kernel/tstdlib/string.c **** 		--n;
  60                             		.loc 1 39 8
  61 0049 61 05                   		cmp	#0, r5
  62 004b 21 EB                   		bne	.L7
  42:../kernel/tstdlib/string.c **** 	}
  43:../kernel/tstdlib/string.c **** 
  44:../kernel/tstdlib/string.c **** 	lp = (unsigned long *)cp;
  45:../kernel/tstdlib/string.c **** 	lval = (unsigned long)cval |
  63                             		.loc 1 45 9
  64 004d 5B B4                   		movu.B	r11, r4
  46:../kernel/tstdlib/string.c **** 		(unsigned long)cval << 8 |
  65                             		.loc 1 46 3
  66 004f 5B B5                   		movu.B	r11, r5
  67                             		.loc 1 46 23
  68 0051 6C 85                   		shll	#8, r5
  45:../kernel/tstdlib/string.c **** 		(unsigned long)cval << 8 |
  69                             		.loc 1 45 29
  70 0053 57 54                   		or	r5, r4
  47:../kernel/tstdlib/string.c **** 		(unsigned long)cval << 16 |
  71                             		.loc 1 47 3
  72 0055 5B B5                   		movu.B	r11, r5
  73                             		.loc 1 47 23
  74 0057 6D 05                   		shll	#16, r5
  46:../kernel/tstdlib/string.c **** 		(unsigned long)cval << 8 |
  75                             		.loc 1 46 28
  76 0059 57 54                   		or	r5, r4
  48:../kernel/tstdlib/string.c **** 		(unsigned long)cval << 24;
  77                             		.loc 1 48 3
  78 005b 5B B5                   		movu.B	r11, r5
  79                             		.loc 1 48 23
  80 005d 6D 85                   		shll	#24, r5
  45:../kernel/tstdlib/string.c **** 		(unsigned long)cval << 8 |
  81                             		.loc 1 45 7
  82 005f FF 5C 54                		or	r5, r4, r12
  49:../kernel/tstdlib/string.c **** 
  50:../kernel/tstdlib/string.c **** 	while (n >= 4) {
  83                             		.loc 1 50 8
  84 0062 2E 11                   		bra	.L8
  85                             	.L9:
  51:../kernel/tstdlib/string.c **** 		*lp++ = lval;
  86                             		.loc 1 51 6
  87 0064 EF 65                   		mov.L	r6, r5
  88 0066 71 56 04                		add	#4, r5, r6
  89                             		.loc 1 51 9
  90 0069 E3 5C                   		mov.L	r12, [r5]
  52:../kernel/tstdlib/string.c **** 		n -= 4;
  91                             		.loc 1 52 5
  92 006b ED A5 02                		mov.L	8[r10], r5
  93 006e 60 45                   		sub	#4, r5
  94 0070 E7 A5 02                		mov.L	r5, 8[r10]
  95                             	.L8:
  50:../kernel/tstdlib/string.c **** 		*lp++ = lval;
  96                             		.loc 1 50 8
  97 0073 ED A5 02                		mov.L	8[r10], r5
  98 0076 61 35                   		cmp	#3, r5
  99 0078 2A EC                   		bgt	.L9
  53:../kernel/tstdlib/string.c **** 	}
  54:../kernel/tstdlib/string.c **** 
  55:../kernel/tstdlib/string.c **** 	cp = (unsigned char *)lp;
  56:../kernel/tstdlib/string.c **** 	while (n) {
 100                             		.loc 1 56 8
 101 007a 2E 11                   		bra	.L10
 102                             	.L11:
  57:../kernel/tstdlib/string.c **** 		*cp++ = cval;
 103                             		.loc 1 57 6
 104 007c EF 65                   		mov.L	r6, r5
 105 007e 71 56 01                		add	#1, r5, r6
 106                             		.loc 1 57 9
 107 0081 C3 5B                   		mov.B	r11, [r5]
  58:../kernel/tstdlib/string.c **** 		--n;
 108                             		.loc 1 58 3
 109 0083 ED A5 02                		mov.L	8[r10], r5
 110 0086 60 15                   		sub	#1, r5
 111 0088 E7 A5 02                		mov.L	r5, 8[r10]
 112                             	.L10:
  56:../kernel/tstdlib/string.c **** 		*cp++ = cval;
 113                             		.loc 1 56 8
 114 008b ED A5 02                		mov.L	8[r10], r5
 115 008e 61 05                   		cmp	#0, r5
 116 0090 21 EC                   		bne	.L11
  59:../kernel/tstdlib/string.c **** 	}
  60:../kernel/tstdlib/string.c **** 
  61:../kernel/tstdlib/string.c **** 	return s;
 117                             		.loc 1 61 9
 118 0092 EC A5                   		mov.L	[r10], r5
 119                             	.L5:
  62:../kernel/tstdlib/string.c **** }
 120                             		.loc 1 62 1
 121 0094 EF 51                   		mov.L	r5, r1
 122 0096 3F 6C 0A                		rtsd	#40, r6-r12
 123                             	.LFE19:
 125                             		.global	_knl_memcpy
 127                             	_knl_memcpy:
 128                             	.LFB20:
  63:../kernel/tstdlib/string.c **** 
  64:../kernel/tstdlib/string.c **** /* memcpy : copy memory */
  65:../kernel/tstdlib/string.c **** void* knl_memcpy( void *dst, const void *src, SZ n )
  66:../kernel/tstdlib/string.c **** {
 129                             		.loc 1 66 1
 130 0099 6E 6B                   		pushm	r6-r11
 131                             	.LCFI2:
 132 009b 71 0A F4                		add	#-12, r0, r10
 133                             	.LCFI3:
 134 009e EF A0                   		mov.L	r10, r0
 135 00a0 E3 A1                   		mov.L	r1, [r10]
 136 00a2 E7 A2 01                		mov.L	r2, 4[r10]
 137 00a5 E7 A3 02                		mov.L	r3, 8[r10]
  67:../kernel/tstdlib/string.c **** 	register unsigned char *cdst, *csrc;
  68:../kernel/tstdlib/string.c **** 
  69:../kernel/tstdlib/string.c **** 	cdst = (unsigned char *)dst;
 138                             		.loc 1 69 7
 139 00a8 EC A6                   		mov.L	[r10], r6
  70:../kernel/tstdlib/string.c **** 	csrc = (unsigned char *)src;
 140                             		.loc 1 70 7
 141 00aa ED AB 01                		mov.L	4[r10], r11
  71:../kernel/tstdlib/string.c **** 	while (n-- > 0) {
 142                             		.loc 1 71 8
 143 00ad 2E 10                   		bra	.L13
 144                             	.L14:
  72:../kernel/tstdlib/string.c **** 		*cdst++ = *csrc++;
 145                             		.loc 1 72 18
 146 00af EF B4                   		mov.L	r11, r4
 147 00b1 71 4B 01                		add	#1, r4, r11
 148                             		.loc 1 72 8
 149 00b4 EF 65                   		mov.L	r6, r5
 150 00b6 71 56 01                		add	#1, r5, r6
 151                             		.loc 1 72 13
 152 00b9 CC 44                   		mov.B	[r4], r4
 153                             		.loc 1 72 11
 154 00bb C3 54                   		mov.B	r4, [r5]
 155                             	.L13:
  71:../kernel/tstdlib/string.c **** 	while (n-- > 0) {
 156                             		.loc 1 71 10
 157 00bd ED A5 02                		mov.L	8[r10], r5
 158 00c0 71 54 FF                		add	#-1, r5, r4
 159 00c3 E7 A4 02                		mov.L	r4, 8[r10]
  71:../kernel/tstdlib/string.c **** 	while (n-- > 0) {
 160                             		.loc 1 71 8
 161 00c6 61 05                   		cmp	#0, r5
 162 00c8 2A E7                   		bgt	.L14
  73:../kernel/tstdlib/string.c **** 	}
  74:../kernel/tstdlib/string.c **** 
  75:../kernel/tstdlib/string.c **** 	return dst;
 163                             		.loc 1 75 9
 164 00ca EC A5                   		mov.L	[r10], r5
  76:../kernel/tstdlib/string.c **** }
 165                             		.loc 1 76 1
 166 00cc EF 51                   		mov.L	r5, r1
 167 00ce 3F 6B 09                		rtsd	#36, r6-r11
 168                             	.LFE20:
 170                             		.global	_knl_strlen
 172                             	_knl_strlen:
 173                             	.LFB21:
  77:../kernel/tstdlib/string.c **** 
  78:../kernel/tstdlib/string.c **** /* strlen : get text string length */
  79:../kernel/tstdlib/string.c **** SZ knl_strlen( const char *s )
  80:../kernel/tstdlib/string.c **** {
 174                             		.loc 1 80 1
 175 00d1 7E AA                   		push.l	r10
 176                             	.LCFI4:
 177 00d3 7E A6                   		push.l	r6
 178                             	.LCFI5:
 179 00d5 71 0A FC                		add	#-4, r0, r10
 180                             	.LCFI6:
 181 00d8 EF A0                   		mov.L	r10, r0
 182 00da E3 A1                   		mov.L	r1, [r10]
  81:../kernel/tstdlib/string.c **** 	register char *cp;
  82:../kernel/tstdlib/string.c **** 
  83:../kernel/tstdlib/string.c **** 	cp = (char *)s;
 183                             		.loc 1 83 5
 184 00dc EC A6                   		mov.L	[r10], r6
  84:../kernel/tstdlib/string.c **** 	while (*cp) {
 185                             		.loc 1 84 8
 186 00de 0B                      		bra	.L17
 187                             	.L18:
  85:../kernel/tstdlib/string.c **** 		++cp;
 188                             		.loc 1 85 3
 189 00df 62 16                   		add	#1, r6
 190                             	.L17:
  84:../kernel/tstdlib/string.c **** 	while (*cp) {
 191                             		.loc 1 84 9
 192 00e1 CC 65                   		mov.B	[r6], r5
  84:../kernel/tstdlib/string.c **** 	while (*cp) {
 193                             		.loc 1 84 8
 194 00e3 5B 55                   		movu.B	r5, r5
 195 00e5 61 05                   		cmp	#0, r5
 196 00e7 21 F8                   		bne	.L18
  86:../kernel/tstdlib/string.c **** 	}
  87:../kernel/tstdlib/string.c **** 	return (SZ)(cp - s);
 197                             		.loc 1 87 9
 198 00e9 EC A5                   		mov.L	[r10], r5
 199 00eb FF 05 56                		sub	r5, r6, r5
  88:../kernel/tstdlib/string.c **** }
 200                             		.loc 1 88 1
 201 00ee EF 51                   		mov.L	r5, r1
 202 00f0 62 40                   		add	#4, r0
 203 00f2 7E B6                   		pop	r6
 204 00f4 7E BA                   		pop	r10
 205 00f6 02                      		rts
 206                             	.LFE21:
 208                             		.global	_knl_strcpy
 210                             	_knl_strcpy:
 211                             	.LFB22:
  89:../kernel/tstdlib/string.c **** 
  90:../kernel/tstdlib/string.c **** /* strcpy : copy text string */
  91:../kernel/tstdlib/string.c **** char* knl_strcpy( char *dst, const char *src )
  92:../kernel/tstdlib/string.c **** {
 212                             		.loc 1 92 1
 213 00f7 7E AA                   		push.l	r10
 214                             	.LCFI7:
 215 00f9 7E A6                   		push.l	r6
 216                             	.LCFI8:
 217 00fb 71 0A F8                		add	#-8, r0, r10
 218                             	.LCFI9:
 219 00fe EF A0                   		mov.L	r10, r0
 220 0100 E3 A1                   		mov.L	r1, [r10]
 221 0102 E7 A2 01                		mov.L	r2, 4[r10]
  93:../kernel/tstdlib/string.c **** 	register char *cp;
  94:../kernel/tstdlib/string.c **** 
  95:../kernel/tstdlib/string.c **** 	cp = dst;
 222                             		.loc 1 95 5
 223 0105 EC A6                   		mov.L	[r10], r6
 224                             	.L21:
  96:../kernel/tstdlib/string.c **** 	do {
  97:../kernel/tstdlib/string.c **** 		*cp++ = *src;
 225                             		.loc 1 97 6 discriminator 1
 226 0107 EF 65                   		mov.L	r6, r5
 227 0109 71 56 01                		add	#1, r5, r6
 228                             		.loc 1 97 11 discriminator 1
 229 010c ED A4 01                		mov.L	4[r10], r4
 230 010f CC 44                   		mov.B	[r4], r4
 231                             		.loc 1 97 9 discriminator 1
 232 0111 C3 54                   		mov.B	r4, [r5]
  98:../kernel/tstdlib/string.c **** 	} while (*src++);
 233                             		.loc 1 98 15 discriminator 1
 234 0113 ED A5 01                		mov.L	4[r10], r5
 235 0116 71 54 01                		add	#1, r5, r4
 236 0119 E7 A4 01                		mov.L	r4, 4[r10]
 237                             		.loc 1 98 11 discriminator 1
 238 011c CC 55                   		mov.B	[r5], r5
 239                             		.loc 1 98 2 discriminator 1
 240 011e 5B 55                   		movu.B	r5, r5
 241 0120 61 05                   		cmp	#0, r5
 242 0122 21 E5                   		bne	.L21
  99:../kernel/tstdlib/string.c **** 
 100:../kernel/tstdlib/string.c **** 	return dst;
 243                             		.loc 1 100 9
 244 0124 EC A5                   		mov.L	[r10], r5
 101:../kernel/tstdlib/string.c **** }
 245                             		.loc 1 101 1
 246 0126 EF 51                   		mov.L	r5, r1
 247 0128 62 80                   		add	#8, r0
 248 012a 7E B6                   		pop	r6
 249 012c 7E BA                   		pop	r10
 250 012e 02                      		rts
 251                             	.LFE22:
 253                             		.global	_knl_strncpy
 255                             	_knl_strncpy:
 256                             	.LFB23:
 102:../kernel/tstdlib/string.c **** 
 103:../kernel/tstdlib/string.c **** char* knl_strncpy( char *dst, const char *src, SZ n )
 104:../kernel/tstdlib/string.c **** {
 257                             		.loc 1 104 1
 258 012f 7E AA                   		push.l	r10
 259                             	.LCFI10:
 260 0131 7E A6                   		push.l	r6
 261                             	.LCFI11:
 262 0133 71 0A F4                		add	#-12, r0, r10
 263                             	.LCFI12:
 264 0136 EF A0                   		mov.L	r10, r0
 265 0138 E3 A1                   		mov.L	r1, [r10]
 266 013a E7 A2 01                		mov.L	r2, 4[r10]
 267 013d E7 A3 02                		mov.L	r3, 8[r10]
 105:../kernel/tstdlib/string.c **** 	register char *cp;
 106:../kernel/tstdlib/string.c **** 
 107:../kernel/tstdlib/string.c **** 	cp = dst;
 268                             		.loc 1 107 5
 269 0140 EC A6                   		mov.L	[r10], r6
 270                             	.L26:
 108:../kernel/tstdlib/string.c **** 	do {
 109:../kernel/tstdlib/string.c **** 		if (n-- <= 0) {
 271                             		.loc 1 109 8
 272 0142 ED A5 02                		mov.L	8[r10], r5
 273 0145 71 54 FF                		add	#-1, r5, r4
 274 0148 E7 A4 02                		mov.L	r4, 8[r10]
 275                             		.loc 1 109 6
 276 014b 61 05                   		cmp	#0, r5
 277 014d 2A 06                   		bgt	.L24
 110:../kernel/tstdlib/string.c **** 			return dst;
 278                             		.loc 1 110 11
 279 014f EC A5                   		mov.L	[r10], r5
 280 0151 2E 37                   		bra	.L25
 281                             	.L24:
 111:../kernel/tstdlib/string.c **** 		}
 112:../kernel/tstdlib/string.c **** 		*cp++ = *src;
 282                             		.loc 1 112 6
 283 0153 EF 65                   		mov.L	r6, r5
 284 0155 71 56 01                		add	#1, r5, r6
 285                             		.loc 1 112 11
 286 0158 ED A4 01                		mov.L	4[r10], r4
 287 015b CC 44                   		mov.B	[r4], r4
 288                             		.loc 1 112 9
 289 015d C3 54                   		mov.B	r4, [r5]
 113:../kernel/tstdlib/string.c **** 	} while (*src++);
 290                             		.loc 1 113 15
 291 015f ED A5 01                		mov.L	4[r10], r5
 292 0162 71 54 01                		add	#1, r5, r4
 293 0165 E7 A4 01                		mov.L	r4, 4[r10]
 294                             		.loc 1 113 11
 295 0168 CC 55                   		mov.B	[r5], r5
 296                             		.loc 1 113 2
 297 016a 5B 55                   		movu.B	r5, r5
 298 016c 61 05                   		cmp	#0, r5
 299 016e 21 D4                   		bne	.L26
 114:../kernel/tstdlib/string.c **** 
 115:../kernel/tstdlib/string.c **** 	while (n-- > 0) {
 300                             		.loc 1 115 8
 301 0170 09                      		bra	.L27
 302                             	.L28:
 116:../kernel/tstdlib/string.c **** 		*cp++ = 0;
 303                             		.loc 1 116 6
 304 0171 EF 65                   		mov.L	r6, r5
 305 0173 71 56 01                		add	#1, r5, r6
 306                             		.loc 1 116 9
 307 0176 F8 54 00                		mov.B	#0, [r5]
 308                             	.L27:
 115:../kernel/tstdlib/string.c **** 		*cp++ = 0;
 309                             		.loc 1 115 10
 310 0179 ED A5 02                		mov.L	8[r10], r5
 311 017c 71 54 FF                		add	#-1, r5, r4
 312 017f E7 A4 02                		mov.L	r4, 8[r10]
 115:../kernel/tstdlib/string.c **** 		*cp++ = 0;
 313                             		.loc 1 115 8
 314 0182 61 05                   		cmp	#0, r5
 315 0184 2A ED                   		bgt	.L28
 117:../kernel/tstdlib/string.c **** 	}
 118:../kernel/tstdlib/string.c **** 
 119:../kernel/tstdlib/string.c **** 	return dst;
 316                             		.loc 1 119 9
 317 0186 EC A5                   		mov.L	[r10], r5
 318                             	.L25:
 120:../kernel/tstdlib/string.c **** }
 319                             		.loc 1 120 1
 320 0188 EF 51                   		mov.L	r5, r1
 321 018a 62 C0                   		add	#12, r0
 322 018c 7E B6                   		pop	r6
 323 018e 7E BA                   		pop	r10
 324 0190 02                      		rts
 325                             	.LFE23:
 327                             		.global	_knl_strcmp
 329                             	_knl_strcmp:
 330                             	.LFB24:
 121:../kernel/tstdlib/string.c **** 
 122:../kernel/tstdlib/string.c **** /* strcmp : perform text string comparison */
 123:../kernel/tstdlib/string.c **** int knl_strcmp( const char *s1, const char *s2 )
 124:../kernel/tstdlib/string.c **** {
 331                             		.loc 1 124 1
 332 0191 7E AA                   		push.l	r10
 333                             	.LCFI13:
 334 0193 7E A6                   		push.l	r6
 335                             	.LCFI14:
 336 0195 71 0A F8                		add	#-8, r0, r10
 337                             	.LCFI15:
 338 0198 EF A0                   		mov.L	r10, r0
 339 019a E3 A1                   		mov.L	r1, [r10]
 340 019c E7 A2 01                		mov.L	r2, 4[r10]
 125:../kernel/tstdlib/string.c **** 	register int result;
 126:../kernel/tstdlib/string.c **** 
 127:../kernel/tstdlib/string.c **** 	while (*s1) {
 341                             		.loc 1 127 8
 342 019f 2E 24                   		bra	.L30
 343                             	.L32:
 128:../kernel/tstdlib/string.c **** 		result = (unsigned char)*s1++ - (unsigned char)*s2++;
 344                             		.loc 1 128 30
 345 01a1 EC A5                   		mov.L	[r10], r5
 346 01a3 71 54 01                		add	#1, r5, r4
 347 01a6 E3 A4                   		mov.L	r4, [r10]
 348                             		.loc 1 128 27
 349 01a8 CC 55                   		mov.B	[r5], r5
 350                             		.loc 1 128 12
 351 01aa 5B 54                   		movu.B	r5, r4
 352                             		.loc 1 128 53
 353 01ac ED A5 01                		mov.L	4[r10], r5
 354 01af 71 53 01                		add	#1, r5, r3
 355 01b2 E7 A3 01                		mov.L	r3, 4[r10]
 356                             		.loc 1 128 50
 357 01b5 CC 55                   		mov.B	[r5], r5
 358                             		.loc 1 128 35
 359 01b7 5B 55                   		movu.B	r5, r5
 360                             		.loc 1 128 10
 361 01b9 FF 06 54                		sub	r5, r4, r6
 129:../kernel/tstdlib/string.c **** 		if (result) {
 362                             		.loc 1 129 6
 363 01bc 61 06                   		cmp	#0, r6
 364 01be 15                      		beq	.L30
 130:../kernel/tstdlib/string.c **** 			return result;
 365                             		.loc 1 130 11
 366 01bf EF 65                   		mov.L	r6, r5
 367 01c1 2E 1C                   		bra	.L31
 368                             	.L30:
 127:../kernel/tstdlib/string.c **** 		result = (unsigned char)*s1++ - (unsigned char)*s2++;
 369                             		.loc 1 127 9
 370 01c3 EC A5                   		mov.L	[r10], r5
 371 01c5 CC 55                   		mov.B	[r5], r5
 127:../kernel/tstdlib/string.c **** 		result = (unsigned char)*s1++ - (unsigned char)*s2++;
 372                             		.loc 1 127 8
 373 01c7 5B 55                   		movu.B	r5, r5
 374 01c9 61 05                   		cmp	#0, r5
 375 01cb 21 D6                   		bne	.L32
 131:../kernel/tstdlib/string.c **** 		}
 132:../kernel/tstdlib/string.c **** 	}
 133:../kernel/tstdlib/string.c **** 
 134:../kernel/tstdlib/string.c **** 	return (unsigned char)*s1 - (unsigned char)*s2;
 376                             		.loc 1 134 24
 377 01cd EC A5                   		mov.L	[r10], r5
 378 01cf CC 55                   		mov.B	[r5], r5
 379                             		.loc 1 134 9
 380 01d1 5B 54                   		movu.B	r5, r4
 381                             		.loc 1 134 45
 382 01d3 ED A5 01                		mov.L	4[r10], r5
 383 01d6 CC 55                   		mov.B	[r5], r5
 384                             		.loc 1 134 30
 385 01d8 5B 55                   		movu.B	r5, r5
 386                             		.loc 1 134 28
 387 01da FF 05 54                		sub	r5, r4, r5
 388                             	.L31:
 135:../kernel/tstdlib/string.c **** }
 389                             		.loc 1 135 1
 390 01dd EF 51                   		mov.L	r5, r1
 391 01df 62 80                   		add	#8, r0
 392 01e1 7E B6                   		pop	r6
 393 01e3 7E BA                   		pop	r10
 394 01e5 02                      		rts
 395                             	.LFE24:
 397                             		.global	_knl_strcat
 399                             	_knl_strcat:
 400                             	.LFB25:
 136:../kernel/tstdlib/string.c **** 
 137:../kernel/tstdlib/string.c **** /* strcat : perform text string concatenation */
 138:../kernel/tstdlib/string.c **** char* knl_strcat( char *dst, const char *src )
 139:../kernel/tstdlib/string.c **** {
 401                             		.loc 1 139 1
 402 01e6 7E AA                   		push.l	r10
 403                             	.LCFI16:
 404 01e8 7E A6                   		push.l	r6
 405                             	.LCFI17:
 406 01ea 71 0A F8                		add	#-8, r0, r10
 407                             	.LCFI18:
 408 01ed EF A0                   		mov.L	r10, r0
 409 01ef E3 A1                   		mov.L	r1, [r10]
 410 01f1 E7 A2 01                		mov.L	r2, 4[r10]
 140:../kernel/tstdlib/string.c **** 	register char *cp;
 141:../kernel/tstdlib/string.c **** 
 142:../kernel/tstdlib/string.c **** 	cp = dst;
 411                             		.loc 1 142 5
 412 01f4 EC A6                   		mov.L	[r10], r6
 143:../kernel/tstdlib/string.c **** 	while (*cp) {
 413                             		.loc 1 143 8
 414 01f6 0B                      		bra	.L34
 415                             	.L35:
 144:../kernel/tstdlib/string.c **** 		++cp;
 416                             		.loc 1 144 3
 417 01f7 62 16                   		add	#1, r6
 418                             	.L34:
 143:../kernel/tstdlib/string.c **** 	while (*cp) {
 419                             		.loc 1 143 9
 420 01f9 CC 65                   		mov.B	[r6], r5
 143:../kernel/tstdlib/string.c **** 	while (*cp) {
 421                             		.loc 1 143 8
 422 01fb 5B 55                   		movu.B	r5, r5
 423 01fd 61 05                   		cmp	#0, r5
 424 01ff 21 F8                   		bne	.L35
 145:../kernel/tstdlib/string.c **** 	}
 146:../kernel/tstdlib/string.c **** 
 147:../kernel/tstdlib/string.c **** 	while (*src) {
 425                             		.loc 1 147 8
 426 0201 2E 14                   		bra	.L36
 427                             	.L37:
 148:../kernel/tstdlib/string.c **** 		*cp++ = *src++;
 428                             		.loc 1 148 15
 429 0203 ED A4 01                		mov.L	4[r10], r4
 430 0206 71 45 01                		add	#1, r4, r5
 431 0209 E7 A5 01                		mov.L	r5, 4[r10]
 432                             		.loc 1 148 6
 433 020c EF 65                   		mov.L	r6, r5
 434 020e 71 56 01                		add	#1, r5, r6
 435                             		.loc 1 148 11
 436 0211 CC 44                   		mov.B	[r4], r4
 437                             		.loc 1 148 9
 438 0213 C3 54                   		mov.B	r4, [r5]
 439                             	.L36:
 147:../kernel/tstdlib/string.c **** 		*cp++ = *src++;
 440                             		.loc 1 147 9
 441 0215 ED A5 01                		mov.L	4[r10], r5
 442 0218 CC 55                   		mov.B	[r5], r5
 147:../kernel/tstdlib/string.c **** 		*cp++ = *src++;
 443                             		.loc 1 147 8
 444 021a 5B 55                   		movu.B	r5, r5
 445 021c 61 05                   		cmp	#0, r5
 446 021e 21 E5                   		bne	.L37
 149:../kernel/tstdlib/string.c **** 	}
 150:../kernel/tstdlib/string.c **** 	*cp = '\0';
 447                             		.loc 1 150 6
 448 0220 F8 64 00                		mov.B	#0, [r6]
 151:../kernel/tstdlib/string.c **** 
 152:../kernel/tstdlib/string.c **** 	return dst;
 449                             		.loc 1 152 9
 450 0223 EC A5                   		mov.L	[r10], r5
 153:../kernel/tstdlib/string.c **** }
 451                             		.loc 1 153 1
 452 0225 EF 51                   		mov.L	r5, r1
 453 0227 62 80                   		add	#8, r0
 454 0229 7E B6                   		pop	r6
 455 022b 7E BA                   		pop	r10
 456 022d 02                      		rts
 457                             	.LFE25:
 662                             	.Letext0:
 663                             		.file 2 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/tk/typedef.h"
 664                             		.file 3 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/tk/syscall.h"
 665                             		.file 4 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/sys/queue.h"
 666                             		.file 5 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\knlinc/kernel.h"
 667                             		.file 6 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\tkernel\\timer.h"
 668                             		.file 7 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\tkernel\\winfo.h"
 669                             		.file 8 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\tkernel\\mutex.h"
 670                             		.file 9 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\sysdepend\\cpu\\core\\rxv2\\sysdep
 671                             		.file 10 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\sysdepend\\cpu\\core\\rxv2\\cpu_s
