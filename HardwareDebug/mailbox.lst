   1                             		.file	"mailbox.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   5                             	_QueInit:
   6                             	.LFB6:
   7                             		.file 1 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\include/sys/queue.h"
   1:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** /*
   2:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  *----------------------------------------------------------------------
   3:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  *    micro T-Kernel 3.00.00
   4:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  *
   5:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  *    Copyright (C) 2006-2019 by Ken Sakamura.
   6:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  *    This software is distributed under the T-License 2.1.
   7:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  *----------------------------------------------------------------------
   8:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  *
   9:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  *    Released by TRON Forum(http://www.tron.org) at 2019/12/11.
  10:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  *
  11:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  *----------------------------------------------------------------------
  12:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  */
  13:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 
  14:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** /*
  15:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  *	queue.h
  16:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  *
  17:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  *	Queuing operation
  18:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  */
  19:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 
  20:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** #ifndef	__SYS_QUEUE_H__
  21:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** #define __SYS_QUEUE_H__
  22:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 
  23:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** #include <tk/tkernel.h>
  24:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 
  25:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** #ifdef __cplusplus
  26:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** extern "C" {
  27:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** #endif
  28:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 
  29:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** /*
  30:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  * Double-link queue (ring)
  31:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  */
  32:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** typedef struct queue {
  33:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 	struct queue	*next;
  34:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 	struct queue	*prev;
  35:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** } QUEUE;
  36:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 
  37:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** /*
  38:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  * Queue initialization 
  39:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  */
  40:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** Inline void QueInit( QUEUE *que )
  41:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** {
   8                             		.loc 1 41 1
   9 0000 7E AA                   		push.l	r10
  10                             	.LCFI0:
  11 0002 71 0A FC                		add	#-4, r0, r10
  12                             	.LCFI1:
  13 0005 EF A0                   		mov.L	r10, r0
  14 0007 E3 A1                   		mov.L	r1, [r10]
  42:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 	que->next = (struct queue *)que;
  15                             		.loc 1 42 12
  16 0009 EC A5                   		mov.L	[r10], r5
  17 000b EC A4                   		mov.L	[r10], r4
  18 000d E3 54                   		mov.L	r4, [r5]
  43:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 	que->prev = (struct queue *)que;
  19                             		.loc 1 43 12
  20 000f EC A5                   		mov.L	[r10], r5
  21 0011 EC A4                   		mov.L	[r10], r4
  22 0013 A0 5C                   		mov.L	r4, 4[r5]
  44:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** }
  23                             		.loc 1 44 1
  24 0015 03                      		nop
  25 0016 3F AA 02                		rtsd	#8, r10-r10
  26                             	.LFE6:
  29                             	_isQueEmpty:
  30                             	.LFB7:
  45:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 
  46:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** /*
  47:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  * TRUE if the queue is empty 
  48:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  */
  49:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** Inline BOOL isQueEmpty( QUEUE *que )
  50:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** {
  31                             		.loc 1 50 1
  32 0019 7E AA                   		push.l	r10
  33                             	.LCFI2:
  34 001b 71 0A FC                		add	#-4, r0, r10
  35                             	.LCFI3:
  36 001e EF A0                   		mov.L	r10, r0
  37 0020 E3 A1                   		mov.L	r1, [r10]
  51:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 	return ( que->next == que )? TRUE: FALSE;
  38                             		.loc 1 51 14
  39 0022 EC A5                   		mov.L	[r10], r5
  40 0024 EC 55                   		mov.L	[r5], r5
  41                             		.loc 1 51 35
  42 0026 EC A4                   		mov.L	[r10], r4
  43 0028 47 54                   		cmp	r5, r4
  44 002a FC DB 50                		sceq.L	r5
  45 002d 5B 55                   		movu.B	r5, r5
  52:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** }
  46                             		.loc 1 52 1
  47 002f EF 51                   		mov.L	r5, r1
  48 0031 3F AA 02                		rtsd	#8, r10-r10
  49                             	.LFE7:
  52                             	_QueInsert:
  53                             	.LFB8:
  53:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 
  54:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** /*
  55:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  * Insert in queue 
  56:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  *	Inserts entry directly prior to que 
  57:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  */
  58:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** Inline void QueInsert( QUEUE *entry, QUEUE *que )
  59:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** {
  54                             		.loc 1 59 1
  55 0034 7E AA                   		push.l	r10
  56                             	.LCFI4:
  57 0036 71 0A F8                		add	#-8, r0, r10
  58                             	.LCFI5:
  59 0039 EF A0                   		mov.L	r10, r0
  60 003b E3 A1                   		mov.L	r1, [r10]
  61 003d E7 A2 01                		mov.L	r2, 4[r10]
  60:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 	entry->prev = (struct queue*) que->prev;
  62                             		.loc 1 60 16
  63 0040 ED A5 01                		mov.L	4[r10], r5
  64 0043 A8 5C                   		mov.L	4[r5], r4
  65                             		.loc 1 60 14
  66 0045 EC A5                   		mov.L	[r10], r5
  67 0047 A0 5C                   		mov.L	r4, 4[r5]
  61:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 	entry->next = que;
  68                             		.loc 1 61 14
  69 0049 EC A5                   		mov.L	[r10], r5
  70 004b ED A4 01                		mov.L	4[r10], r4
  71 004e E3 54                   		mov.L	r4, [r5]
  62:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 	que->prev->next = entry;
  72                             		.loc 1 62 5
  73 0050 ED A5 01                		mov.L	4[r10], r5
  74 0053 A8 5D                   		mov.L	4[r5], r5
  75                             		.loc 1 62 18
  76 0055 EC A4                   		mov.L	[r10], r4
  77 0057 E3 54                   		mov.L	r4, [r5]
  63:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 	que->prev = entry;
  78                             		.loc 1 63 12
  79 0059 ED A5 01                		mov.L	4[r10], r5
  80 005c EC A4                   		mov.L	[r10], r4
  81 005e A0 5C                   		mov.L	r4, 4[r5]
  64:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** }
  82                             		.loc 1 64 1
  83 0060 03                      		nop
  84 0061 3F AA 03                		rtsd	#12, r10-r10
  85                             	.LFE8:
  88                             	_QueRemoveNext:
  89                             	.LFB10:
  65:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 
  66:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** /*
  67:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  * Delete from queue 
  68:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  *	Deletes entry from queue 
  69:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  *	No action is performed if entry is empty. 
  70:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  */
  71:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** Inline void QueRemove( QUEUE *entry )
  72:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** {
  73:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 	if ( entry->next != entry ) {
  74:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 		entry->prev->next = (struct queue*) entry->next;
  75:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 		entry->next->prev = (struct queue*) entry->prev;
  76:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 	}
  77:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** }
  78:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 
  79:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** /*
  80:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  * Remove top entry 
  81:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  *	Deletes the entry directly after que from the queue,
  82:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  *	and returns the deleted entry.
  83:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  *	Returns NULL if que is empty.
  84:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h ****  */
  85:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** Inline QUEUE* QueRemoveNext( QUEUE *que )
  86:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** {
  90                             		.loc 1 86 1
  91 0064 7E AA                   		push.l	r10
  92                             	.LCFI6:
  93 0066 71 0A F8                		add	#-8, r0, r10
  94                             	.LCFI7:
  95 0069 EF A0                   		mov.L	r10, r0
  96 006b E7 A1 01                		mov.L	r1, 4[r10]
  87:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 	QUEUE	*entry;
  88:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 
  89:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 	if ( que->next == que ) {
  97                             		.loc 1 89 10
  98 006e ED A5 01                		mov.L	4[r10], r5
  99 0071 EC 55                   		mov.L	[r5], r5
 100                             		.loc 1 89 5
 101 0073 ED A4 01                		mov.L	4[r10], r4
 102 0076 47 54                   		cmp	r5, r4
 103 0078 1D                      		bne	.L6
  90:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 		return NULL;
 104                             		.loc 1 90 10
 105 0079 66 05                   		mov.L	#0, r5
 106 007b 2E 1D                   		bra	.L7
 107                             	.L6:
  91:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 	}
  92:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 
  93:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 	entry = que->next;
 108                             		.loc 1 93 8
 109 007d ED A5 01                		mov.L	4[r10], r5
 110 0080 EC 55                   		mov.L	[r5], r5
 111 0082 E3 A5                   		mov.L	r5, [r10]
  94:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 	que->next = (struct queue*)entry->next;
 112                             		.loc 1 94 14
 113 0084 EC A5                   		mov.L	[r10], r5
 114 0086 EC 54                   		mov.L	[r5], r4
 115                             		.loc 1 94 12
 116 0088 ED A5 01                		mov.L	4[r10], r5
 117 008b E3 54                   		mov.L	r4, [r5]
  95:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 	entry->next->prev = que;
 118                             		.loc 1 95 7
 119 008d EC A5                   		mov.L	[r10], r5
 120 008f EC 55                   		mov.L	[r5], r5
 121                             		.loc 1 95 20
 122 0091 ED A4 01                		mov.L	4[r10], r4
 123 0094 A0 5C                   		mov.L	r4, 4[r5]
  96:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 
  97:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** 	return entry;
 124                             		.loc 1 97 9
 125 0096 EC A5                   		mov.L	[r10], r5
 126                             	.L7:
  98:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include/sys\queue.h **** }
 127                             		.loc 1 98 1
 128 0098 EF 51                   		mov.L	r5, r1
 129 009a 3F AA 03                		rtsd	#12, r10-r10
 130                             	.LFE10:
 133                             	_knl_isTaskIndependent:
 134                             	.LFB16:
 135                             		.file 2 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\kernel\\sysdepend\\cpu\\core\\rxv2\\cpu_s
   1:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
   2:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *----------------------------------------------------------------------
   3:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *    micro T-Kernel 3.00.03
   4:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *
   5:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *    Copyright (C) 2006-2021 by Ken Sakamura.
   6:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *    This software is distributed under the T-License 2.2.
   7:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *----------------------------------------------------------------------
   8:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *
   9:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *    Released by TRON Forum(http://www.tron.org) at 2021/03/31.
  10:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *
  11:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *----------------------------------------------------------------------
  12:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  13:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  14:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  15:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *	cpu_status.h (RXv2)
  16:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *	CPU-Dependent Status Definition
  17:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  18:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  19:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #ifndef _SYSDEPEND_CPU_CORE_STATUS_
  20:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define _SYSDEPEND_CPU_CORE_STATUS_
  21:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  22:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #include <tk/syslib.h>
  23:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #include <sys/sysdef.h>
  24:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  25:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #include "sysdepend.h"
  26:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  27:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  * Start/End critical section
  28:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  29:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define BEGIN_CRITICAL_SECTION	{ UINT _sr_ = disint();
  30:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define END_CRITICAL_SECTION	if ( !isDI(_sr_)			\
  31:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 				  && knl_ctxtsk != knl_schedtsk		\
  32:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 				  && !knl_isTaskIndependent()		\
  33:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 				  && !knl_dispatch_disabled ) {		\
  34:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 					knl_dispatch();			\
  35:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 				}					\
  36:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 				setint(_sr_); }
  37:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  38:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  * Start/End interrupt disable section
  39:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  40:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define BEGIN_DISABLE_INTERRUPT	{ UINT _sr_ = disint();
  41:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define END_DISABLE_INTERRUPT	setint(_sr_); }
  42:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  43:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  44:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  * Interrupt enable/disable
  45:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  46:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define ENABLE_INTERRUPT	{ setint(0); }
  47:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define DISABLE_INTERRUPT	{ disint(); }
  48:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  49:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  50:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  * Enable interrupt nesting
  51:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *	Enable the interrupt that has a higher priority than 'level.'
  52:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  53:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define ENABLE_INTERRUPT_UPTO(level)	{ setint(level); }
  54:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  55:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  56:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *  Task-independent control
  57:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  58:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** IMPORT	W	knl_taskindp;		/* Task independent status */
  59:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  60:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  61:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  * If it is the task-independent part, TRUE
  62:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  63:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** Inline BOOL knl_isTaskIndependent( void )
  64:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** {
 136                             		.loc 2 64 1
 137 009d 7E AA                   		push.l	r10
 138                             	.LCFI8:
 139 009f EF 0A                   		mov.L	r0, r10
 140                             	.LCFI9:
  65:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 	return ( knl_taskindp > 0 )? TRUE: FALSE;
 141                             		.loc 2 65 35
 142 00a1 FB 52 00 00 00 00       		mov.L	#_knl_taskindp, r5
 143 00a7 EC 55                   		mov.L	[r5], r5
 144 00a9 61 05                   		cmp	#0, r5
 145 00ab FC DB 5A                		scgt.L	r5
 146 00ae 5B 55                   		movu.B	r5, r5
  66:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** }
 147                             		.loc 2 66 1
 148 00b0 EF 51                   		mov.L	r5, r1
 149 00b2 3F AA 01                		rtsd	#4, r10-r10
 150                             	.LFE16:
 153                             	_knl_queue_insert_mpri:
 154                             	.LFB34:
 155                             		.file 3 "../kernel/tkernel/mailbox.h"
   1:../kernel/tkernel/mailbox.h **** /*
   2:../kernel/tkernel/mailbox.h ****  *----------------------------------------------------------------------
   3:../kernel/tkernel/mailbox.h ****  *    micro T-Kernel 3.00.00
   4:../kernel/tkernel/mailbox.h ****  *
   5:../kernel/tkernel/mailbox.h ****  *    Copyright (C) 2006-2019 by Ken Sakamura.
   6:../kernel/tkernel/mailbox.h ****  *    This software is distributed under the T-License 2.1.
   7:../kernel/tkernel/mailbox.h ****  *----------------------------------------------------------------------
   8:../kernel/tkernel/mailbox.h ****  *
   9:../kernel/tkernel/mailbox.h ****  *    Released by TRON Forum(http://www.tron.org) at 2019/12/11.
  10:../kernel/tkernel/mailbox.h ****  *
  11:../kernel/tkernel/mailbox.h ****  *----------------------------------------------------------------------
  12:../kernel/tkernel/mailbox.h ****  */
  13:../kernel/tkernel/mailbox.h **** 
  14:../kernel/tkernel/mailbox.h **** /*
  15:../kernel/tkernel/mailbox.h ****  *	mailbox.h
  16:../kernel/tkernel/mailbox.h ****  *	Mailbox
  17:../kernel/tkernel/mailbox.h ****  */
  18:../kernel/tkernel/mailbox.h **** 
  19:../kernel/tkernel/mailbox.h **** #ifndef _MAILBOX_H_
  20:../kernel/tkernel/mailbox.h **** #define _MAILBOX_H_
  21:../kernel/tkernel/mailbox.h **** /*
  22:../kernel/tkernel/mailbox.h ****  * Mailbox control block
  23:../kernel/tkernel/mailbox.h ****  *
  24:../kernel/tkernel/mailbox.h ****  *	'mq_head' is the first message queue pointer that
  25:../kernel/tkernel/mailbox.h ****  *	points a message.
  26:../kernel/tkernel/mailbox.h ****  *	It is NULL if the message queue is empty.
  27:../kernel/tkernel/mailbox.h ****  *	'mq_tail' is a pointer that points end of message
  28:../kernel/tkernel/mailbox.h ****  *	queue that is not empty.
  29:../kernel/tkernel/mailbox.h ****  *	The message queue value is not guaranteed if the
  30:../kernel/tkernel/mailbox.h ****  *	message queue is empty.
  31:../kernel/tkernel/mailbox.h ****  *	It is used only if the message queue is FIFO (TA_MFIFO).
  32:../kernel/tkernel/mailbox.h ****  */
  33:../kernel/tkernel/mailbox.h **** typedef struct mailbox_control_block {
  34:../kernel/tkernel/mailbox.h **** 	QUEUE	wait_queue;	/* Mailbox wait queue */
  35:../kernel/tkernel/mailbox.h **** 	ID	mbxid;		/* Mailbox ID */
  36:../kernel/tkernel/mailbox.h **** 	void	*exinf;		/* Extended information */
  37:../kernel/tkernel/mailbox.h **** 	ATR	mbxatr;		/* Mailbox attribute */
  38:../kernel/tkernel/mailbox.h **** 	T_MSG	mq_head;	/* Head of message queue */
  39:../kernel/tkernel/mailbox.h **** 	T_MSG	*mq_tail;	/* End of message queue */
  40:../kernel/tkernel/mailbox.h **** #if USE_OBJECT_NAME
  41:../kernel/tkernel/mailbox.h **** 	UB	name[OBJECT_NAME_LENGTH];	/* name */
  42:../kernel/tkernel/mailbox.h **** #endif
  43:../kernel/tkernel/mailbox.h **** } MBXCB;
  44:../kernel/tkernel/mailbox.h **** 
  45:../kernel/tkernel/mailbox.h **** IMPORT MBXCB knl_mbxcb_table[];	/* Mailbox control block */
  46:../kernel/tkernel/mailbox.h **** IMPORT QUEUE knl_free_mbxcb;	/* FreeQue */
  47:../kernel/tkernel/mailbox.h **** 
  48:../kernel/tkernel/mailbox.h **** #define get_mbxcb(id)	( &knl_mbxcb_table[INDEX_MBX(id)] )
  49:../kernel/tkernel/mailbox.h **** 
  50:../kernel/tkernel/mailbox.h **** /*
  51:../kernel/tkernel/mailbox.h ****  * Head message
  52:../kernel/tkernel/mailbox.h ****  */
  53:../kernel/tkernel/mailbox.h **** #define headmsg(mbxcb)	( (mbxcb)->mq_head.msgque[0] )
  54:../kernel/tkernel/mailbox.h **** 
  55:../kernel/tkernel/mailbox.h **** /*
  56:../kernel/tkernel/mailbox.h ****  * Next message
  57:../kernel/tkernel/mailbox.h ****  */
  58:../kernel/tkernel/mailbox.h **** #define nextmsg(msg)	( ((T_MSG*)(msg))->msgque[0] )
  59:../kernel/tkernel/mailbox.h **** 
  60:../kernel/tkernel/mailbox.h **** /*
  61:../kernel/tkernel/mailbox.h ****  * Insert a message queue following priority
  62:../kernel/tkernel/mailbox.h ****  */
  63:../kernel/tkernel/mailbox.h **** Inline void knl_queue_insert_mpri( T_MSG_PRI *pk_msg, T_MSG *head )
  64:../kernel/tkernel/mailbox.h **** {
 156                             		.loc 3 64 1
 157 00b5 7E AA                   		push.l	r10
 158                             	.LCFI10:
 159 00b7 71 0A F0                		add	#-16, r0, r10
 160                             	.LCFI11:
 161 00ba EF A0                   		mov.L	r10, r0
 162 00bc E7 A1 02                		mov.L	r1, 8[r10]
 163 00bf E7 A2 03                		mov.L	r2, 12[r10]
  65:../kernel/tkernel/mailbox.h **** 	T_MSG_PRI	*msg;
  66:../kernel/tkernel/mailbox.h **** 	T_MSG		*prevmsg = head;
 164                             		.loc 3 66 10
 165 00c2 ED A5 03                		mov.L	12[r10], r5
 166 00c5 E3 A5                   		mov.L	r5, [r10]
  67:../kernel/tkernel/mailbox.h **** 
  68:../kernel/tkernel/mailbox.h **** 	while ( (msg = (T_MSG_PRI*)nextmsg(prevmsg)) != NULL ) {
 167                             		.loc 3 68 8
 168 00c7 2E 15                   		bra	.L11
 169                             	.L14:
  69:../kernel/tkernel/mailbox.h **** 		if ( msg->msgpri > pk_msg->msgpri ) {
 170                             		.loc 3 69 11
 171 00c9 ED A5 01                		mov.L	4[r10], r5
 172 00cc A8 5C                   		mov.L	4[r5], r4
 173                             		.loc 3 69 28
 174 00ce ED A5 02                		mov.L	8[r10], r5
 175 00d1 A8 5D                   		mov.L	4[r5], r5
 176                             		.loc 3 69 6
 177 00d3 47 54                   		cmp	r5, r4
 178 00d5 2A 17                   		bgt	.L15
  70:../kernel/tkernel/mailbox.h **** 			break;
  71:../kernel/tkernel/mailbox.h **** 		}
  72:../kernel/tkernel/mailbox.h **** 		prevmsg = (T_MSG*)msg;
 179                             		.loc 3 72 11
 180 00d7 ED A5 01                		mov.L	4[r10], r5
 181 00da E3 A5                   		mov.L	r5, [r10]
 182                             	.L11:
  68:../kernel/tkernel/mailbox.h **** 		if ( msg->msgpri > pk_msg->msgpri ) {
 183                             		.loc 3 68 15
 184 00dc EC A5                   		mov.L	[r10], r5
 185 00de EC 55                   		mov.L	[r5], r5
 186 00e0 E7 A5 01                		mov.L	r5, 4[r10]
  68:../kernel/tkernel/mailbox.h **** 		if ( msg->msgpri > pk_msg->msgpri ) {
 187                             		.loc 3 68 8
 188 00e3 ED A5 01                		mov.L	4[r10], r5
 189 00e6 61 05                   		cmp	#0, r5
 190 00e8 21 E1                   		bne	.L14
 191 00ea 2E 03                   		bra	.L13
 192                             	.L15:
  70:../kernel/tkernel/mailbox.h **** 			break;
 193                             		.loc 3 70 4
 194 00ec 03                      		nop
 195                             	.L13:
  73:../kernel/tkernel/mailbox.h **** 	}
  74:../kernel/tkernel/mailbox.h **** 	nextmsg(pk_msg) = msg;
 196                             		.loc 3 74 18
 197 00ed ED A5 02                		mov.L	8[r10], r5
 198 00f0 ED A4 01                		mov.L	4[r10], r4
 199 00f3 E3 54                   		mov.L	r4, [r5]
  75:../kernel/tkernel/mailbox.h **** 	nextmsg(prevmsg) = pk_msg;
 200                             		.loc 3 75 19
 201 00f5 EC A5                   		mov.L	[r10], r5
 202 00f7 ED A4 02                		mov.L	8[r10], r4
 203 00fa E3 54                   		mov.L	r4, [r5]
  76:../kernel/tkernel/mailbox.h **** }
 204                             		.loc 3 76 1
 205 00fc 03                      		nop
 206 00fd 3F AA 05                		rtsd	#20, r10-r10
 207                             	.LFE34:
 209                             		.global	_knl_mbxcb_table
 210                             		.section	.noinit,"aw"
 211                             		.balign 4
 214                             	_knl_mbxcb_table:
 215 0000 00 00 00 00 00 00 00 00 		.zero	224
 215      00 00 00 00 00 00 00 00 
 215      00 00 00 00 00 00 00 00 
 215      00 00 00 00 00 00 00 00 
 215      00 00 00 00 00 00 00 00 
 216                             		.global	_knl_free_mbxcb
 217                             		.balign 4
 220                             	_knl_free_mbxcb:
 221 00e0 00 00 00 00 00 00 00 00 		.zero	8
 222                             		.section P,"ax"
 223                             		.global	_knl_mailbox_initialize
 225                             	_knl_mailbox_initialize:
 226                             	.LFB35:
 227                             		.file 4 "../kernel/tkernel/mailbox.c"
   1:../kernel/tkernel/mailbox.c **** /*
   2:../kernel/tkernel/mailbox.c ****  *----------------------------------------------------------------------
   3:../kernel/tkernel/mailbox.c ****  *    micro T-Kernel 3.00.00
   4:../kernel/tkernel/mailbox.c ****  *
   5:../kernel/tkernel/mailbox.c ****  *    Copyright (C) 2006-2019 by Ken Sakamura.
   6:../kernel/tkernel/mailbox.c ****  *    This software is distributed under the T-License 2.1.
   7:../kernel/tkernel/mailbox.c ****  *----------------------------------------------------------------------
   8:../kernel/tkernel/mailbox.c ****  *
   9:../kernel/tkernel/mailbox.c ****  *    Released by TRON Forum(http://www.tron.org) at 2019/12/11.
  10:../kernel/tkernel/mailbox.c ****  *
  11:../kernel/tkernel/mailbox.c ****  *----------------------------------------------------------------------
  12:../kernel/tkernel/mailbox.c ****  */
  13:../kernel/tkernel/mailbox.c **** 
  14:../kernel/tkernel/mailbox.c **** /*
  15:../kernel/tkernel/mailbox.c ****  *	mailbox.c
  16:../kernel/tkernel/mailbox.c ****  *	Mailbox
  17:../kernel/tkernel/mailbox.c ****  */
  18:../kernel/tkernel/mailbox.c **** 
  19:../kernel/tkernel/mailbox.c **** #include "kernel.h"
  20:../kernel/tkernel/mailbox.c **** #include "wait.h"
  21:../kernel/tkernel/mailbox.c **** #include "check.h"
  22:../kernel/tkernel/mailbox.c **** #include "mailbox.h"
  23:../kernel/tkernel/mailbox.c **** 
  24:../kernel/tkernel/mailbox.c **** #if USE_MAILBOX == 1
  25:../kernel/tkernel/mailbox.c **** 
  26:../kernel/tkernel/mailbox.c **** Noinit(EXPORT MBXCB	knl_mbxcb_table[NUM_MBXID]);	/* Mailbox control block */
  27:../kernel/tkernel/mailbox.c **** Noinit(EXPORT QUEUE	knl_free_mbxcb);	/* FreeQue */
  28:../kernel/tkernel/mailbox.c **** 
  29:../kernel/tkernel/mailbox.c **** 
  30:../kernel/tkernel/mailbox.c **** /*
  31:../kernel/tkernel/mailbox.c ****  * Initialization of mailbox control block 
  32:../kernel/tkernel/mailbox.c ****  */
  33:../kernel/tkernel/mailbox.c **** EXPORT ER knl_mailbox_initialize( void )
  34:../kernel/tkernel/mailbox.c **** {
 228                             		.loc 4 34 1
 229 0100 7E AA                   		push.l	r10
 230                             	.LCFI12:
 231 0102 71 0A F8                		add	#-8, r0, r10
 232                             	.LCFI13:
 233 0105 EF A0                   		mov.L	r10, r0
  35:../kernel/tkernel/mailbox.c **** 	MBXCB	*mbxcb, *end;
  36:../kernel/tkernel/mailbox.c **** 
  37:../kernel/tkernel/mailbox.c **** 	/* Get system information */
  38:../kernel/tkernel/mailbox.c **** 	if ( NUM_MBXID < 1 ) {
  39:../kernel/tkernel/mailbox.c **** 		return E_SYS;
  40:../kernel/tkernel/mailbox.c **** 	}
  41:../kernel/tkernel/mailbox.c **** 
  42:../kernel/tkernel/mailbox.c **** 	/* Register all control blocks onto FreeQue */
  43:../kernel/tkernel/mailbox.c **** 	QueInit(&knl_free_mbxcb);
 234                             		.loc 4 43 2
 235 0107 FB 12 00 00 00 00       		mov.L	#_knl_free_mbxcb, r1
 236 010d 39 F3 FE                		bsr	_QueInit
  44:../kernel/tkernel/mailbox.c **** 	end = knl_mbxcb_table + NUM_MBXID;
 237                             		.loc 4 44 6
 238 0110 F9 A2 01 00 00 00 00    		mov.L	#_knl_mbxcb_table+224, 4[r10]
  45:../kernel/tkernel/mailbox.c **** 	for ( mbxcb = knl_mbxcb_table; mbxcb < end; mbxcb++ ) {
 239                             		.loc 4 45 14
 240 0117 F8 A2 00 00 00 00       		mov.L	#_knl_mbxcb_table, [r10]
 241                             		.loc 4 45 2
 242 011d 2E 1B                   		bra	.L17
 243                             	.L18:
  46:../kernel/tkernel/mailbox.c **** 		mbxcb->mbxid = 0;
 244                             		.loc 4 46 16 discriminator 3
 245 011f EC A5                   		mov.L	[r10], r5
 246 0121 3E 52 00                		mov.L	#0, 8[r5]
  47:../kernel/tkernel/mailbox.c **** 		QueInsert(&mbxcb->wait_queue, &knl_free_mbxcb);
 247                             		.loc 4 47 3 discriminator 3
 248 0124 EC A5                   		mov.L	[r10], r5
 249 0126 FB 22 00 00 00 00       		mov.L	#_knl_free_mbxcb, r2
 250 012c EF 51                   		mov.L	r5, r1
 251 012e 39 06 FF                		bsr	_QueInsert
  45:../kernel/tkernel/mailbox.c **** 	for ( mbxcb = knl_mbxcb_table; mbxcb < end; mbxcb++ ) {
 252                             		.loc 4 45 51 discriminator 3
 253 0131 EC A5                   		mov.L	[r10], r5
 254 0133 71 55 1C                		add	#28, r5
 255 0136 E3 A5                   		mov.L	r5, [r10]
 256                             	.L17:
  45:../kernel/tkernel/mailbox.c **** 	for ( mbxcb = knl_mbxcb_table; mbxcb < end; mbxcb++ ) {
 257                             		.loc 4 45 2 discriminator 1
 258 0138 EC A4                   		mov.L	[r10], r4
 259 013a ED A5 01                		mov.L	4[r10], r5
 260 013d 47 54                   		cmp	r5, r4
 261 013f 23 E0                   		bltu	.L18
  48:../kernel/tkernel/mailbox.c **** 	}
  49:../kernel/tkernel/mailbox.c **** 
  50:../kernel/tkernel/mailbox.c **** 	return E_OK;
 262                             		.loc 4 50 9
 263 0141 66 05                   		mov.L	#0, r5
  51:../kernel/tkernel/mailbox.c **** }
 264                             		.loc 4 51 1
 265 0143 EF 51                   		mov.L	r5, r1
 266 0145 3F AA 03                		rtsd	#12, r10-r10
 267                             	.LFE35:
 269                             		.global	_tk_cre_mbx
 271                             	_tk_cre_mbx:
 272                             	.LFB36:
  52:../kernel/tkernel/mailbox.c **** 
  53:../kernel/tkernel/mailbox.c **** 
  54:../kernel/tkernel/mailbox.c **** /*
  55:../kernel/tkernel/mailbox.c ****  * Create mailbox
  56:../kernel/tkernel/mailbox.c ****  */
  57:../kernel/tkernel/mailbox.c **** SYSCALL ID tk_cre_mbx( CONST T_CMBX *pk_cmbx )
  58:../kernel/tkernel/mailbox.c **** {
 273                             		.loc 4 58 1
 274 0148 6E 7A                   		pushm	r7-r10
 275                             	.LCFI14:
 276 014a 71 0A E8                		add	#-24, r0, r10
 277                             	.LCFI15:
 278 014d EF A0                   		mov.L	r10, r0
 279 014f E7 A1 05                		mov.L	r1, 20[r10]
  59:../kernel/tkernel/mailbox.c **** #if CHK_RSATR
  60:../kernel/tkernel/mailbox.c **** 	const ATR VALID_MBXATR = {
 280                             		.loc 4 60 12
 281 0152 F9 A6 01 03             		mov.L	#3, 4[r10]
  61:../kernel/tkernel/mailbox.c **** 		 TA_MPRI
  62:../kernel/tkernel/mailbox.c **** 		|TA_TPRI
  63:../kernel/tkernel/mailbox.c **** #if USE_OBJECT_NAME
  64:../kernel/tkernel/mailbox.c **** 		|TA_DSNAME
  65:../kernel/tkernel/mailbox.c **** #endif
  66:../kernel/tkernel/mailbox.c **** 	};
  67:../kernel/tkernel/mailbox.c **** #endif
  68:../kernel/tkernel/mailbox.c **** 	MBXCB	*mbxcb;
  69:../kernel/tkernel/mailbox.c **** 	ID	mbxid;
  70:../kernel/tkernel/mailbox.c **** 	ER	ercd;
  71:../kernel/tkernel/mailbox.c **** 
  72:../kernel/tkernel/mailbox.c **** 	CHECK_RSATR(pk_cmbx->mbxatr, VALID_MBXATR);
 282                             		.loc 4 72 2
 283 0156 ED A5 05                		mov.L	20[r10], r5
 284 0159 A8 5C                   		mov.L	4[r5], r4
 285 015b ED A5 01                		mov.L	4[r10], r5
 286 015e 7E 05                   		not	r5
 287 0160 53 45                   		and	r4, r5
 288 0162 61 05                   		cmp	#0, r5
 289 0164 17                      		beq	.L21
 290                             		.loc 4 72 2 is_stmt 0 discriminator 1
 291 0165 FB 56 F5                		mov.L	#-11, r5
 292 0168 38 A4 00                		bra	.L22
 293                             	.L21:
 294                             	.LBB2:
  73:../kernel/tkernel/mailbox.c **** 
  74:../kernel/tkernel/mailbox.c **** 	BEGIN_CRITICAL_SECTION;
 295                             		.loc 4 74 2 is_stmt 1
 296 016b 05 00 00 00             		bsr	_disint
 297 016f E7 A1 02                		mov.L	r1, 8[r10]
  75:../kernel/tkernel/mailbox.c **** 	/* Get control block from FreeQue */
  76:../kernel/tkernel/mailbox.c **** 	mbxcb = (MBXCB*)QueRemoveNext(&knl_free_mbxcb);
 298                             		.loc 4 76 18
 299 0172 FB 12 00 00 00 00       		mov.L	#_knl_free_mbxcb, r1
 300 0178 39 EC FE                		bsr	_QueRemoveNext
 301 017b E7 A1 03                		mov.L	r1, 12[r10]
  77:../kernel/tkernel/mailbox.c **** 	if ( mbxcb == NULL ) {
 302                             		.loc 4 77 5
 303 017e ED A5 03                		mov.L	12[r10], r5
 304 0181 61 05                   		cmp	#0, r5
 305 0183 1E                      		bne	.L23
  78:../kernel/tkernel/mailbox.c **** 		ercd = E_LIMIT;
 306                             		.loc 4 78 8
 307 0184 F8 A6 DE                		mov.L	#-34, [r10]
 308 0187 2E 49                   		bra	.L24
 309                             	.L23:
  79:../kernel/tkernel/mailbox.c **** 	} else {
  80:../kernel/tkernel/mailbox.c **** 		mbxid = ID_MBX(mbxcb - knl_mbxcb_table);
 310                             		.loc 4 80 11
 311 0189 ED A5 03                		mov.L	12[r10], r5
 312 018c FB 72 00 00 00 00       		mov.L	#_knl_mbxcb_table, r7
 313 0192 43 75                   		sub	r7, r5
 314 0194 6A 25                   		shar	#2, r5
 315 0196 74 15 B7 6D DB B6       		mul	#-1227133513, r5
 316                             		.loc 4 80 9
 317 019c 62 15                   		add	#1, r5
 318 019e E7 A5 04                		mov.L	r5, 16[r10]
  81:../kernel/tkernel/mailbox.c **** 
  82:../kernel/tkernel/mailbox.c **** 		/* Initialize control block */
  83:../kernel/tkernel/mailbox.c **** 		QueInit(&mbxcb->wait_queue);
 319                             		.loc 4 83 3
 320 01a1 ED A5 03                		mov.L	12[r10], r5
 321 01a4 EF 51                   		mov.L	r5, r1
 322 01a6 39 5A FE                		bsr	_QueInit
  84:../kernel/tkernel/mailbox.c **** 		mbxcb->mbxid  = mbxid;
 323                             		.loc 4 84 17
 324 01a9 ED A5 03                		mov.L	12[r10], r5
 325 01ac ED A4 04                		mov.L	16[r10], r4
 326 01af A0 D4                   		mov.L	r4, 8[r5]
  85:../kernel/tkernel/mailbox.c **** 		mbxcb->exinf  = pk_cmbx->exinf;
 327                             		.loc 4 85 26
 328 01b1 ED A5 05                		mov.L	20[r10], r5
 329 01b4 EC 54                   		mov.L	[r5], r4
 330                             		.loc 4 85 17
 331 01b6 ED A5 03                		mov.L	12[r10], r5
 332 01b9 A0 DC                   		mov.L	r4, 12[r5]
  86:../kernel/tkernel/mailbox.c **** 		mbxcb->mbxatr = pk_cmbx->mbxatr;
 333                             		.loc 4 86 26
 334 01bb ED A5 05                		mov.L	20[r10], r5
 335 01be A8 5C                   		mov.L	4[r5], r4
 336                             		.loc 4 86 17
 337 01c0 ED A5 03                		mov.L	12[r10], r5
 338 01c3 A1 54                   		mov.L	r4, 16[r5]
  87:../kernel/tkernel/mailbox.c **** 		mbxcb->mq_head.msgque[0] = NULL;
 339                             		.loc 4 87 28
 340 01c5 ED A5 03                		mov.L	12[r10], r5
 341 01c8 3E 55 00                		mov.L	#0, 20[r5]
  88:../kernel/tkernel/mailbox.c **** #if USE_OBJECT_NAME
  89:../kernel/tkernel/mailbox.c **** 		if ( (pk_cmbx->mbxatr & TA_DSNAME) != 0 ) {
  90:../kernel/tkernel/mailbox.c **** 			knl_strncpy((char*)mbxcb->name, (char*)pk_cmbx->dsname,
  91:../kernel/tkernel/mailbox.c **** 				OBJECT_NAME_LENGTH);
  92:../kernel/tkernel/mailbox.c **** 		}
  93:../kernel/tkernel/mailbox.c **** #endif
  94:../kernel/tkernel/mailbox.c **** 		ercd = mbxid;
 342                             		.loc 4 94 8
 343 01cb ED A5 04                		mov.L	16[r10], r5
 344 01ce E3 A5                   		mov.L	r5, [r10]
 345                             	.L24:
  95:../kernel/tkernel/mailbox.c **** 	}
  96:../kernel/tkernel/mailbox.c **** 	END_CRITICAL_SECTION;
 346                             		.loc 4 96 2
 347 01d0 ED A5 02                		mov.L	8[r10], r5
 348 01d3 61 F5                   		cmp	#15, r5
 349 01d5 20 2E                   		beq	.L25
 350                             		.loc 4 96 2 is_stmt 0 discriminator 1
 351 01d7 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 352 01dd EC 54                   		mov.L	[r5], r4
 353 01df FB 52 00 00 00 00       		mov.L	#_knl_schedtsk, r5
 354 01e5 EC 55                   		mov.L	[r5], r5
 355 01e7 47 54                   		cmp	r5, r4
 356 01e9 20 1A                   		beq	.L25
 357                             		.loc 4 96 2 discriminator 3
 358 01eb 39 B2 FE                		bsr	_knl_isTaskIndependent
 359 01ee EF 15                   		mov.L	r1, r5
 360 01f0 61 05                   		cmp	#0, r5
 361 01f2 21 11                   		bne	.L25
 362                             		.loc 4 96 2 discriminator 5
 363 01f4 FB 52 00 00 00 00       		mov.L	#_knl_dispatch_disabled, r5
 364 01fa EC 55                   		mov.L	[r5], r5
 365 01fc 61 05                   		cmp	#0, r5
 366 01fe 1D                      		bne	.L25
 367                             		.loc 4 96 2 discriminator 7
 368 01ff 05 00 00 00             		bsr	_knl_dispatch
 369                             		.balign 8,3,1
 370                             	.L25:
 371                             		.loc 4 96 2 discriminator 9
 372 0203 ED A1 02                		mov.L	8[r10], r1
 373 0206 05 00 00 00             		bsr	_setint
 374                             	.LBE2:
  97:../kernel/tkernel/mailbox.c **** 
  98:../kernel/tkernel/mailbox.c **** 	return ercd;
 375                             		.loc 4 98 9 is_stmt 1 discriminator 9
 376 020a EC A5                   		mov.L	[r10], r5
 377                             	.L22:
  99:../kernel/tkernel/mailbox.c **** }
 378                             		.loc 4 99 1
 379 020c EF 51                   		mov.L	r5, r1
 380 020e 3F 7A 0A                		rtsd	#40, r7-r10
 381                             	.LFE36:
 383                             		.global	_tk_del_mbx
 385                             	_tk_del_mbx:
 386                             	.LFB37:
 100:../kernel/tkernel/mailbox.c **** 
 101:../kernel/tkernel/mailbox.c **** #ifdef USE_FUNC_TK_DEL_MBX
 102:../kernel/tkernel/mailbox.c **** /*
 103:../kernel/tkernel/mailbox.c ****  * Delete mailbox
 104:../kernel/tkernel/mailbox.c ****  */
 105:../kernel/tkernel/mailbox.c **** SYSCALL ER tk_del_mbx( ID mbxid )
 106:../kernel/tkernel/mailbox.c **** {
 387                             		.loc 4 106 1
 388 0211 7E AA                   		push.l	r10
 389                             	.LCFI16:
 390 0213 71 0A F0                		add	#-16, r0, r10
 391                             	.LCFI17:
 392 0216 EF A0                   		mov.L	r10, r0
 393 0218 E7 A1 03                		mov.L	r1, 12[r10]
 107:../kernel/tkernel/mailbox.c **** 	MBXCB	*mbxcb;
 108:../kernel/tkernel/mailbox.c **** 	ER	ercd = E_OK;
 394                             		.loc 4 108 5
 395 021b F8 A6 00                		mov.L	#0, [r10]
 109:../kernel/tkernel/mailbox.c **** 
 110:../kernel/tkernel/mailbox.c **** 	CHECK_MBXID(mbxid);
 396                             		.loc 4 110 2
 397 021e ED A5 03                		mov.L	12[r10], r5
 398 0221 61 05                   		cmp	#0, r5
 399 0223 2B 09                   		ble	.L27
 400                             		.loc 4 110 2 is_stmt 0 discriminator 2
 401 0225 ED A5 03                		mov.L	12[r10], r5
 402 0228 61 85                   		cmp	#8, r5
 403 022a 2B 08                   		ble	.L28
 404                             	.L27:
 405                             		.loc 4 110 2 discriminator 3
 406 022c FB 56 EE                		mov.L	#-18, r5
 407 022f 38 82 00                		bra	.L29
 408                             	.L28:
 111:../kernel/tkernel/mailbox.c **** 
 112:../kernel/tkernel/mailbox.c **** 	mbxcb = get_mbxcb(mbxid);
 409                             		.loc 4 112 10 is_stmt 1
 410 0232 ED A5 03                		mov.L	12[r10], r5
 411 0235 60 15                   		sub	#1, r5
 412                             		.loc 4 112 8
 413 0237 75 15 1C                		mul	#28, r5
 414 023a 70 55 00 00 00 00       		add	#_knl_mbxcb_table, r5
 415 0240 E7 A5 01                		mov.L	r5, 4[r10]
 416                             	.LBB3:
 113:../kernel/tkernel/mailbox.c **** 
 114:../kernel/tkernel/mailbox.c **** 	BEGIN_CRITICAL_SECTION;
 417                             		.loc 4 114 2
 418 0243 05 00 00 00             		bsr	_disint
 419 0247 E7 A1 02                		mov.L	r1, 8[r10]
 115:../kernel/tkernel/mailbox.c **** 	if ( mbxcb->mbxid == 0 ) {
 420                             		.loc 4 115 12
 421 024a ED A5 01                		mov.L	4[r10], r5
 422 024d A8 D5                   		mov.L	8[r5], r5
 423                             		.loc 4 115 5
 424 024f 61 05                   		cmp	#0, r5
 425 0251 1E                      		bne	.L30
 116:../kernel/tkernel/mailbox.c **** 		ercd = E_NOEXS;
 426                             		.loc 4 116 8
 427 0252 F8 A6 D6                		mov.L	#-42, [r10]
 428 0255 2E 1F                   		bra	.L31
 429                             	.L30:
 117:../kernel/tkernel/mailbox.c **** 	} else {
 118:../kernel/tkernel/mailbox.c **** 		/* Release wait state of task (E_DLT) */
 119:../kernel/tkernel/mailbox.c **** 		knl_wait_delete(&mbxcb->wait_queue);
 430                             		.loc 4 119 3
 431 0257 ED A5 01                		mov.L	4[r10], r5
 432 025a EF 51                   		mov.L	r5, r1
 433 025c 05 00 00 00             		bsr	_knl_wait_delete
 120:../kernel/tkernel/mailbox.c **** 
 121:../kernel/tkernel/mailbox.c **** 		/* Return to FreeQue */
 122:../kernel/tkernel/mailbox.c **** 		QueInsert(&mbxcb->wait_queue, &knl_free_mbxcb);
 434                             		.loc 4 122 3
 435 0260 ED A5 01                		mov.L	4[r10], r5
 436 0263 FB 22 00 00 00 00       		mov.L	#_knl_free_mbxcb, r2
 437 0269 EF 51                   		mov.L	r5, r1
 438 026b 39 C9 FD                		bsr	_QueInsert
 123:../kernel/tkernel/mailbox.c **** 		mbxcb->mbxid = 0;
 439                             		.loc 4 123 16
 440 026e ED A5 01                		mov.L	4[r10], r5
 441 0271 3E 52 00                		mov.L	#0, 8[r5]
 442                             	.L31:
 124:../kernel/tkernel/mailbox.c **** 	}
 125:../kernel/tkernel/mailbox.c **** 	END_CRITICAL_SECTION;
 443                             		.loc 4 125 2
 444 0274 ED A5 02                		mov.L	8[r10], r5
 445 0277 61 F5                   		cmp	#15, r5
 446 0279 20 2F                   		beq	.L32
 447                             		.loc 4 125 2 is_stmt 0 discriminator 1
 448 027b FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 449 0281 EC 54                   		mov.L	[r5], r4
 450 0283 FB 52 00 00 00 00       		mov.L	#_knl_schedtsk, r5
 451 0289 EC 55                   		mov.L	[r5], r5
 452 028b 47 54                   		cmp	r5, r4
 453 028d 20 1B                   		beq	.L32
 454                             		.loc 4 125 2 discriminator 3
 455 028f 39 0E FE                		bsr	_knl_isTaskIndependent
 456 0292 EF 15                   		mov.L	r1, r5
 457 0294 61 05                   		cmp	#0, r5
 458 0296 21 12                   		bne	.L32
 459                             		.loc 4 125 2 discriminator 5
 460 0298 FB 52 00 00 00 00       		mov.L	#_knl_dispatch_disabled, r5
 461 029e EC 55                   		mov.L	[r5], r5
 462 02a0 61 05                   		cmp	#0, r5
 463 02a2 1E                      		bne	.L32
 464                             		.loc 4 125 2 discriminator 7
 465 02a3 05 00 00 00             		bsr	_knl_dispatch
 466 02a7 03                      		.balign 8,3,1
 467                             	.L32:
 468                             		.loc 4 125 2 discriminator 9
 469 02a8 ED A1 02                		mov.L	8[r10], r1
 470 02ab 05 00 00 00             		bsr	_setint
 471                             	.LBE3:
 126:../kernel/tkernel/mailbox.c **** 
 127:../kernel/tkernel/mailbox.c **** 	return ercd;
 472                             		.loc 4 127 9 is_stmt 1 discriminator 9
 473 02af EC A5                   		mov.L	[r10], r5
 474                             	.L29:
 128:../kernel/tkernel/mailbox.c **** }
 475                             		.loc 4 128 1
 476 02b1 EF 51                   		mov.L	r5, r1
 477 02b3 3F AA 05                		rtsd	#20, r10-r10
 478                             	.LFE37:
 480                             		.global	_tk_snd_mbx
 482                             	_tk_snd_mbx:
 483                             	.LFB38:
 129:../kernel/tkernel/mailbox.c **** #endif /* USE_FUNC_TK_DEL_MBX */
 130:../kernel/tkernel/mailbox.c **** 
 131:../kernel/tkernel/mailbox.c **** /*
 132:../kernel/tkernel/mailbox.c ****  * Send to mailbox
 133:../kernel/tkernel/mailbox.c ****  */
 134:../kernel/tkernel/mailbox.c **** SYSCALL ER tk_snd_mbx( ID mbxid, T_MSG *pk_msg )
 135:../kernel/tkernel/mailbox.c **** {
 484                             		.loc 4 135 1
 485 02b6 7E AA                   		push.l	r10
 486                             	.LCFI18:
 487 02b8 71 0A E8                		add	#-24, r0, r10
 488                             	.LCFI19:
 489 02bb EF A0                   		mov.L	r10, r0
 490 02bd E7 A1 04                		mov.L	r1, 16[r10]
 491 02c0 E7 A2 05                		mov.L	r2, 20[r10]
 136:../kernel/tkernel/mailbox.c **** 	MBXCB	*mbxcb;
 137:../kernel/tkernel/mailbox.c **** 	TCB	*tcb;
 138:../kernel/tkernel/mailbox.c **** 	ER	ercd = E_OK;
 492                             		.loc 4 138 5
 493 02c3 F8 A6 00                		mov.L	#0, [r10]
 139:../kernel/tkernel/mailbox.c **** 
 140:../kernel/tkernel/mailbox.c **** 	CHECK_MBXID(mbxid);
 494                             		.loc 4 140 2
 495 02c6 ED A5 04                		mov.L	16[r10], r5
 496 02c9 61 05                   		cmp	#0, r5
 497 02cb 2B 09                   		ble	.L34
 498                             		.loc 4 140 2 is_stmt 0 discriminator 2
 499 02cd ED A5 04                		mov.L	16[r10], r5
 500 02d0 61 85                   		cmp	#8, r5
 501 02d2 2B 08                   		ble	.L35
 502                             	.L34:
 503                             		.loc 4 140 2 discriminator 3
 504 02d4 FB 56 EE                		mov.L	#-18, r5
 505 02d7 38 ED 00                		bra	.L36
 506                             	.L35:
 141:../kernel/tkernel/mailbox.c **** 
 142:../kernel/tkernel/mailbox.c **** 	mbxcb = get_mbxcb(mbxid);
 507                             		.loc 4 142 10 is_stmt 1
 508 02da ED A5 04                		mov.L	16[r10], r5
 509 02dd 60 15                   		sub	#1, r5
 510                             		.loc 4 142 8
 511 02df 75 15 1C                		mul	#28, r5
 512 02e2 70 55 00 00 00 00       		add	#_knl_mbxcb_table, r5
 513 02e8 E7 A5 01                		mov.L	r5, 4[r10]
 514                             	.LBB4:
 143:../kernel/tkernel/mailbox.c **** 
 144:../kernel/tkernel/mailbox.c **** 	BEGIN_CRITICAL_SECTION;
 515                             		.loc 4 144 2
 516 02eb 05 00 00 00             		bsr	_disint
 517 02ef E7 A1 02                		mov.L	r1, 8[r10]
 145:../kernel/tkernel/mailbox.c **** 	if (mbxcb->mbxid == 0) {
 518                             		.loc 4 145 11
 519 02f2 ED A5 01                		mov.L	4[r10], r5
 520 02f5 A8 D5                   		mov.L	8[r5], r5
 521                             		.loc 4 145 5
 522 02f7 61 05                   		cmp	#0, r5
 523 02f9 1F                      		bne	.L37
 146:../kernel/tkernel/mailbox.c **** 		ercd = E_NOEXS;
 524                             		.loc 4 146 8
 525 02fa F8 A6 D6                		mov.L	#-42, [r10]
 147:../kernel/tkernel/mailbox.c **** 		goto error_exit;
 526                             		.loc 4 147 3
 527 02fd 38 8B 00                		bra	.L38
 528                             	.L37:
 148:../kernel/tkernel/mailbox.c **** 	}
 149:../kernel/tkernel/mailbox.c **** 
 150:../kernel/tkernel/mailbox.c **** 	if ( (mbxcb->mbxatr & TA_MPRI) != 0 ) {
 529                             		.loc 4 150 13
 530 0300 ED A5 01                		mov.L	4[r10], r5
 531 0303 A9 55                   		mov.L	16[r5], r5
 532                             		.loc 4 150 22
 533 0305 64 25                   		and	#2, r5
 534                             		.loc 4 150 5
 535 0307 61 05                   		cmp	#0, r5
 536 0309 20 10                   		beq	.L39
 151:../kernel/tkernel/mailbox.c **** 		if ( ((T_MSG_PRI*)pk_msg)->msgpri <= 0 ) {
 537                             		.loc 4 151 28
 538 030b ED A5 05                		mov.L	20[r10], r5
 539 030e A8 5D                   		mov.L	4[r5], r5
 540                             		.loc 4 151 6
 541 0310 61 05                   		cmp	#0, r5
 542 0312 2A 07                   		bgt	.L39
 152:../kernel/tkernel/mailbox.c **** 			ercd = E_PAR;
 543                             		.loc 4 152 9
 544 0314 F8 A6 EF                		mov.L	#-17, [r10]
 153:../kernel/tkernel/mailbox.c **** 			goto error_exit;
 545                             		.loc 4 153 4
 546 0317 2E 71                   		bra	.L38
 547                             	.L39:
 154:../kernel/tkernel/mailbox.c **** 		}
 155:../kernel/tkernel/mailbox.c **** 	}
 156:../kernel/tkernel/mailbox.c **** 
 157:../kernel/tkernel/mailbox.c **** 	if ( !isQueEmpty(&mbxcb->wait_queue) ) {
 548                             		.loc 4 157 8
 549 0319 ED A5 01                		mov.L	4[r10], r5
 550 031c EF 51                   		mov.L	r5, r1
 551 031e 39 FB FC                		bsr	_isQueEmpty
 552 0321 EF 15                   		mov.L	r1, r5
 553                             		.loc 4 157 5
 554 0323 61 05                   		cmp	#0, r5
 555 0325 21 1D                   		bne	.L40
 158:../kernel/tkernel/mailbox.c **** 		/* Directly send to receive wait task */
 159:../kernel/tkernel/mailbox.c **** 		tcb = (TCB*)(mbxcb->wait_queue.next);
 556                             		.loc 4 159 7
 557 0327 ED A5 01                		mov.L	4[r10], r5
 558 032a EC 55                   		mov.L	[r5], r5
 559 032c E7 A5 03                		mov.L	r5, 12[r10]
 160:../kernel/tkernel/mailbox.c **** 		*tcb->winfo.mbx.ppk_msg = pk_msg;
 560                             		.loc 4 160 18
 561 032f ED A5 03                		mov.L	12[r10], r5
 562 0332 AC 55                   		mov.L	64[r5], r5
 563                             		.loc 4 160 27
 564 0334 ED A4 05                		mov.L	20[r10], r4
 565 0337 E3 54                   		mov.L	r4, [r5]
 161:../kernel/tkernel/mailbox.c **** 		knl_wait_release_ok(tcb);
 566                             		.loc 4 161 3
 567 0339 ED A1 03                		mov.L	12[r10], r1
 568 033c 05 00 00 00             		bsr	_knl_wait_release_ok
 569 0340 2E 48                   		bra	.L38
 570                             	.L40:
 162:../kernel/tkernel/mailbox.c **** 
 163:../kernel/tkernel/mailbox.c **** 	} else {
 164:../kernel/tkernel/mailbox.c **** 		/* Connect message to queue */
 165:../kernel/tkernel/mailbox.c **** 		if ( (mbxcb->mbxatr & TA_MPRI) != 0 ) {
 571                             		.loc 4 165 14
 572 0342 ED A5 01                		mov.L	4[r10], r5
 573 0345 A9 55                   		mov.L	16[r5], r5
 574                             		.loc 4 165 23
 575 0347 64 25                   		and	#2, r5
 576                             		.loc 4 165 6
 577 0349 61 05                   		cmp	#0, r5
 578 034b 20 12                   		beq	.L41
 166:../kernel/tkernel/mailbox.c **** 			/* Connect message to queue following priority */
 167:../kernel/tkernel/mailbox.c **** 			knl_queue_insert_mpri((T_MSG_PRI*)pk_msg, &mbxcb->mq_head);
 579                             		.loc 4 167 4
 580 034d ED A5 01                		mov.L	4[r10], r5
 581 0350 71 55 14                		add	#20, r5
 582 0353 EF 52                   		mov.L	r5, r2
 583 0355 ED A1 05                		mov.L	20[r10], r1
 584 0358 39 5D FD                		bsr	_knl_queue_insert_mpri
 585 035b 2E 2D                   		bra	.L38
 586                             	.L41:
 168:../kernel/tkernel/mailbox.c **** 		} else {
 169:../kernel/tkernel/mailbox.c **** 			/* Connect to end of queue */
 170:../kernel/tkernel/mailbox.c **** 			nextmsg(pk_msg) = NULL;
 587                             		.loc 4 170 20
 588 035d ED A5 05                		mov.L	20[r10], r5
 589 0360 F8 56 00                		mov.L	#0, [r5]
 171:../kernel/tkernel/mailbox.c **** 			if ( headmsg(mbxcb) == NULL ) {
 590                             		.loc 4 171 9
 591 0363 ED A5 01                		mov.L	4[r10], r5
 592 0366 A9 5D                   		mov.L	20[r5], r5
 593                             		.loc 4 171 7
 594 0368 61 05                   		cmp	#0, r5
 595 036a 21 0C                   		bne	.L42
 172:../kernel/tkernel/mailbox.c **** 				headmsg(mbxcb) = pk_msg;
 596                             		.loc 4 172 20
 597 036c ED A5 01                		mov.L	4[r10], r5
 598 036f ED A4 05                		mov.L	20[r10], r4
 599 0372 A1 5C                   		mov.L	r4, 20[r5]
 600 0374 2E 0C                   		bra	.L43
 601                             	.L42:
 173:../kernel/tkernel/mailbox.c **** 			} else {
 174:../kernel/tkernel/mailbox.c **** 				nextmsg(mbxcb->mq_tail) = pk_msg;
 602                             		.loc 4 174 5
 603 0376 ED A5 01                		mov.L	4[r10], r5
 604 0379 A9 D5                   		mov.L	24[r5], r5
 605                             		.loc 4 174 29
 606 037b ED A4 05                		mov.L	20[r10], r4
 607 037e E3 54                   		mov.L	r4, [r5]
 608                             	.L43:
 175:../kernel/tkernel/mailbox.c **** 			}
 176:../kernel/tkernel/mailbox.c **** 			mbxcb->mq_tail = pk_msg;
 609                             		.loc 4 176 19
 610 0380 ED A5 01                		mov.L	4[r10], r5
 611 0383 ED A4 05                		mov.L	20[r10], r4
 612 0386 A1 D4                   		mov.L	r4, 24[r5]
 613                             		.balign 8,3,1
 614                             	.L38:
 177:../kernel/tkernel/mailbox.c **** 		}
 178:../kernel/tkernel/mailbox.c **** 	}
 179:../kernel/tkernel/mailbox.c **** 
 180:../kernel/tkernel/mailbox.c ****     error_exit:
 181:../kernel/tkernel/mailbox.c **** 	END_CRITICAL_SECTION;
 615                             		.loc 4 181 2
 616 0388 ED A5 02                		mov.L	8[r10], r5
 617 038b 61 F5                   		cmp	#15, r5
 618 038d 20 2E                   		beq	.L44
 619                             		.loc 4 181 2 is_stmt 0 discriminator 1
 620 038f FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 621 0395 EC 54                   		mov.L	[r5], r4
 622 0397 FB 52 00 00 00 00       		mov.L	#_knl_schedtsk, r5
 623 039d EC 55                   		mov.L	[r5], r5
 624 039f 47 54                   		cmp	r5, r4
 625 03a1 20 1A                   		beq	.L44
 626                             		.loc 4 181 2 discriminator 3
 627 03a3 39 FA FC                		bsr	_knl_isTaskIndependent
 628 03a6 EF 15                   		mov.L	r1, r5
 629 03a8 61 05                   		cmp	#0, r5
 630 03aa 21 11                   		bne	.L44
 631                             		.loc 4 181 2 discriminator 5
 632 03ac FB 52 00 00 00 00       		mov.L	#_knl_dispatch_disabled, r5
 633 03b2 EC 55                   		mov.L	[r5], r5
 634 03b4 61 05                   		cmp	#0, r5
 635 03b6 1D                      		bne	.L44
 636                             		.loc 4 181 2 discriminator 7
 637 03b7 05 00 00 00             		bsr	_knl_dispatch
 638                             		.balign 8,3,1
 639                             	.L44:
 640                             		.loc 4 181 2 discriminator 9
 641 03bb ED A1 02                		mov.L	8[r10], r1
 642 03be 05 00 00 00             		bsr	_setint
 643                             	.LBE4:
 182:../kernel/tkernel/mailbox.c **** 
 183:../kernel/tkernel/mailbox.c **** 	return ercd;
 644                             		.loc 4 183 9 is_stmt 1 discriminator 9
 645 03c2 EC A5                   		mov.L	[r10], r5
 646                             	.L36:
 184:../kernel/tkernel/mailbox.c **** }
 647                             		.loc 4 184 1
 648 03c4 EF 51                   		mov.L	r5, r1
 649 03c6 3F AA 07                		rtsd	#28, r10-r10
 650                             	.LFE38:
 653                             	_mbx_chg_pri:
 654                             	.LFB39:
 185:../kernel/tkernel/mailbox.c **** 
 186:../kernel/tkernel/mailbox.c **** /*
 187:../kernel/tkernel/mailbox.c ****  * Processing if the priority of wait task changes
 188:../kernel/tkernel/mailbox.c ****  */
 189:../kernel/tkernel/mailbox.c **** LOCAL void mbx_chg_pri( TCB *tcb, INT oldpri )
 190:../kernel/tkernel/mailbox.c **** {
 655                             		.loc 4 190 1
 656 03c9 7E AA                   		push.l	r10
 657                             	.LCFI20:
 658 03cb 71 0A F4                		add	#-12, r0, r10
 659                             	.LCFI21:
 660 03ce EF A0                   		mov.L	r10, r0
 661 03d0 E7 A1 01                		mov.L	r1, 4[r10]
 662 03d3 E7 A2 02                		mov.L	r2, 8[r10]
 191:../kernel/tkernel/mailbox.c **** 	MBXCB	*mbxcb;
 192:../kernel/tkernel/mailbox.c **** 
 193:../kernel/tkernel/mailbox.c **** 	mbxcb = get_mbxcb(tcb->wid);
 663                             		.loc 4 193 10
 664 03d6 ED A5 01                		mov.L	4[r10], r5
 665 03d9 AB 55                   		mov.L	48[r5], r5
 666 03db 60 15                   		sub	#1, r5
 667                             		.loc 4 193 8
 668 03dd 75 15 1C                		mul	#28, r5
 669 03e0 70 55 00 00 00 00       		add	#_knl_mbxcb_table, r5
 670 03e6 E3 A5                   		mov.L	r5, [r10]
 194:../kernel/tkernel/mailbox.c **** 	knl_gcb_change_priority((GCB*)mbxcb, tcb);
 671                             		.loc 4 194 2
 672 03e8 ED A2 01                		mov.L	4[r10], r2
 673 03eb EC A1                   		mov.L	[r10], r1
 674 03ed 05 00 00 00             		bsr	_knl_gcb_change_priority
 195:../kernel/tkernel/mailbox.c **** }
 675                             		.loc 4 195 1
 676 03f1 03                      		nop
 677 03f2 3F AA 04                		rtsd	#16, r10-r10
 678                             	.LFE39:
 680                             		.section C,"a",@progbits
 681                             		.p2align 2
 682                             		.balign 4
 685                             	_knl_wspec_mbx_tfifo:
 686 0000 40 00 00 00             		.long	0x40
 687 0004 00 00 00 00             		.long	0
 688 0008 00 00 00 00             		.long	0
 689                             		.balign 4
 692                             	_knl_wspec_mbx_tpri:
 693 000c 40 00 00 00             		.long	0x40
 694 0010 C9 03 00 00             		.long	_mbx_chg_pri
 695 0014 00 00 00 00             		.long	0
 696                             		.section P,"ax"
 697                             		.global	_tk_rcv_mbx
 699                             	_tk_rcv_mbx:
 700                             	.LFB40:
 196:../kernel/tkernel/mailbox.c **** 
 197:../kernel/tkernel/mailbox.c **** /*
 198:../kernel/tkernel/mailbox.c ****  * Definition of mailbox wait specification
 199:../kernel/tkernel/mailbox.c ****  */
 200:../kernel/tkernel/mailbox.c **** LOCAL CONST WSPEC knl_wspec_mbx_tfifo = { TTW_MBX, NULL, NULL };
 201:../kernel/tkernel/mailbox.c **** LOCAL CONST WSPEC knl_wspec_mbx_tpri  = { TTW_MBX, mbx_chg_pri, NULL };
 202:../kernel/tkernel/mailbox.c **** 
 203:../kernel/tkernel/mailbox.c **** /*
 204:../kernel/tkernel/mailbox.c ****  * Receive from mailbox
 205:../kernel/tkernel/mailbox.c ****  */
 206:../kernel/tkernel/mailbox.c **** SYSCALL ER tk_rcv_mbx( ID mbxid, T_MSG **ppk_msg, TMO tmout )
 207:../kernel/tkernel/mailbox.c **** {
 701                             		.loc 4 207 1
 702 03f5 7E AA                   		push.l	r10
 703                             	.LCFI22:
 704 03f7 71 0A E8                		add	#-24, r0, r10
 705                             	.LCFI23:
 706 03fa EF A0                   		mov.L	r10, r0
 707 03fc E7 A1 03                		mov.L	r1, 12[r10]
 708 03ff E7 A2 04                		mov.L	r2, 16[r10]
 709 0402 E7 A3 05                		mov.L	r3, 20[r10]
 208:../kernel/tkernel/mailbox.c **** 	MBXCB	*mbxcb;
 209:../kernel/tkernel/mailbox.c **** 	ER	ercd = E_OK;
 710                             		.loc 4 209 5
 711 0405 F9 A6 02 00             		mov.L	#0, 8[r10]
 210:../kernel/tkernel/mailbox.c **** 
 211:../kernel/tkernel/mailbox.c **** 	CHECK_MBXID(mbxid);
 712                             		.loc 4 211 2
 713 0409 ED A5 03                		mov.L	12[r10], r5
 714 040c 61 05                   		cmp	#0, r5
 715 040e 2B 09                   		ble	.L47
 716                             		.loc 4 211 2 is_stmt 0 discriminator 2
 717 0410 ED A5 03                		mov.L	12[r10], r5
 718 0413 61 85                   		cmp	#8, r5
 719 0415 2B 08                   		ble	.L48
 720                             	.L47:
 721                             		.loc 4 211 2 discriminator 3
 722 0417 FB 56 EE                		mov.L	#-18, r5
 723 041a 38 06 01                		bra	.L59
 724                             	.L48:
 212:../kernel/tkernel/mailbox.c **** 	CHECK_TMOUT(tmout);
 725                             		.loc 4 212 2 is_stmt 1
 726 041d ED A5 05                		mov.L	20[r10], r5
 727 0420 75 05 FF                		cmp	#-1, r5
 728 0423 28 08                   		bge	.L50
 729                             		.loc 4 212 2 is_stmt 0 discriminator 1
 730 0425 FB 56 EF                		mov.L	#-17, r5
 731 0428 38 F8 00                		bra	.L59
 732                             	.L50:
 213:../kernel/tkernel/mailbox.c **** 	CHECK_DISPATCH();
 733                             		.loc 4 213 2 is_stmt 1
 734 042b FB 52 00 00 00 00       		mov.L	#_knl_dispatch_disabled, r5
 735 0431 EC 55                   		mov.L	[r5], r5
 736 0433 61 05                   		cmp	#0, r5
 737 0435 21 23                   		bne	.L51
 738                             		.loc 4 213 2 is_stmt 0 discriminator 2
 739 0437 39 66 FC                		bsr	_knl_isTaskIndependent
 740 043a EF 15                   		mov.L	r1, r5
 741 043c 61 05                   		cmp	#0, r5
 742 043e 21 1A                   		bne	.L51
 743                             		.loc 4 213 2 discriminator 4
 744 0440 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 745 0446 EC 55                   		mov.L	[r5], r5
 746 0448 61 05                   		cmp	#0, r5
 747 044a 20 0E                   		beq	.L51
 748                             		.loc 4 213 2 discriminator 6
 749 044c 05 00 00 00             		bsr	_GetCpuIntLevel
 750 0450 EF 15                   		mov.L	r1, r5
 751 0452 75 55 10                		cmp	#16, r5
 752 0455 19                      		bne	.L52
 753 0456 EF 00                   		.balign 8,3,2
 754                             	.L51:
 755                             		.loc 4 213 2 discriminator 7
 756 0458 FB 56 E7                		mov.L	#-25, r5
 757 045b 38 C5 00                		bra	.L59
 758                             	.L52:
 214:../kernel/tkernel/mailbox.c **** 
 215:../kernel/tkernel/mailbox.c **** 	mbxcb = get_mbxcb(mbxid);
 759                             		.loc 4 215 10 is_stmt 1
 760 045e ED A5 03                		mov.L	12[r10], r5
 761 0461 60 15                   		sub	#1, r5
 762                             		.loc 4 215 8
 763 0463 75 15 1C                		mul	#28, r5
 764 0466 70 55 00 00 00 00       		add	#_knl_mbxcb_table, r5
 765 046c E3 A5                   		mov.L	r5, [r10]
 766                             	.LBB5:
 216:../kernel/tkernel/mailbox.c **** 
 217:../kernel/tkernel/mailbox.c **** 	BEGIN_CRITICAL_SECTION;
 767                             		.loc 4 217 2
 768 046e 05 00 00 00             		bsr	_disint
 769 0472 E7 A1 01                		mov.L	r1, 4[r10]
 218:../kernel/tkernel/mailbox.c **** 	if ( mbxcb->mbxid == 0 ) {
 770                             		.loc 4 218 12
 771 0475 EC A5                   		mov.L	[r10], r5
 772 0477 A8 D5                   		mov.L	8[r5], r5
 773                             		.loc 4 218 5
 774 0479 61 05                   		cmp	#0, r5
 775 047b 1F                      		bne	.L53
 219:../kernel/tkernel/mailbox.c **** 		ercd = E_NOEXS;
 776                             		.loc 4 219 8
 777 047c F9 A6 02 D6             		mov.L	#-42, 8[r10]
 220:../kernel/tkernel/mailbox.c **** 		goto error_exit;
 778                             		.loc 4 220 3
 779 0480 2E 63                   		bra	.L54
 780                             	.L53:
 221:../kernel/tkernel/mailbox.c **** 	}
 222:../kernel/tkernel/mailbox.c **** 
 223:../kernel/tkernel/mailbox.c **** 	if ( headmsg(mbxcb) != NULL ) {
 781                             		.loc 4 223 7
 782 0482 EC A5                   		mov.L	[r10], r5
 783 0484 A9 5D                   		mov.L	20[r5], r5
 784                             		.loc 4 223 5
 785 0486 61 05                   		cmp	#0, r5
 786 0488 20 18                   		beq	.L55
 224:../kernel/tkernel/mailbox.c **** 		/* Get message from head of queue */
 225:../kernel/tkernel/mailbox.c **** 		*ppk_msg = headmsg(mbxcb);
 787                             		.loc 4 225 14
 788 048a EC A5                   		mov.L	[r10], r5
 789 048c A9 5C                   		mov.L	20[r5], r4
 790                             		.loc 4 225 12
 791 048e ED A5 04                		mov.L	16[r10], r5
 792 0491 E3 54                   		mov.L	r4, [r5]
 226:../kernel/tkernel/mailbox.c **** 		headmsg(mbxcb) = nextmsg(*ppk_msg);
 793                             		.loc 4 226 20
 794 0493 ED A5 04                		mov.L	16[r10], r5
 795 0496 EC 55                   		mov.L	[r5], r5
 796 0498 EC 54                   		mov.L	[r5], r4
 797                             		.loc 4 226 18
 798 049a EC A5                   		mov.L	[r10], r5
 799 049c A1 5C                   		mov.L	r4, 20[r5]
 800 049e 2E 45                   		bra	.L54
 801                             	.L55:
 227:../kernel/tkernel/mailbox.c **** 	} else {
 228:../kernel/tkernel/mailbox.c **** 		/* Ready for receive wait */
 229:../kernel/tkernel/mailbox.c **** 		knl_ctxtsk->wspec = ( (mbxcb->mbxatr & TA_TPRI) != 0 )?
 802                             		.loc 4 229 31
 803 04a0 EC A5                   		mov.L	[r10], r5
 804 04a2 A9 55                   		mov.L	16[r5], r5
 805                             		.loc 4 229 40
 806 04a4 64 15                   		and	#1, r5
 230:../kernel/tkernel/mailbox.c **** 					&knl_wspec_mbx_tpri: &knl_wspec_mbx_tfifo;
 807                             		.loc 4 230 25
 808 04a6 61 05                   		cmp	#0, r5
 809 04a8 10                      		beq	.L56
 810                             		.loc 4 230 25 is_stmt 0 discriminator 1
 811 04a9 FB 42 0C 00 00 00       		mov.L	#_knl_wspec_mbx_tpri, r4
 812 04af 0F                      		bra	.L57
 813                             	.L56:
 814                             		.loc 4 230 25 discriminator 2
 815 04b0 FB 42 00 00 00 00       		mov.L	#_knl_wspec_mbx_tfifo, r4
 816                             	.L57:
 229:../kernel/tkernel/mailbox.c **** 					&knl_wspec_mbx_tpri: &knl_wspec_mbx_tfifo;
 817                             		.loc 4 229 13 is_stmt 1
 818 04b6 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 819 04bc EC 55                   		mov.L	[r5], r5
 229:../kernel/tkernel/mailbox.c **** 					&knl_wspec_mbx_tpri: &knl_wspec_mbx_tfifo;
 820                             		.loc 4 229 21
 821 04be A2 DC                   		mov.L	r4, 44[r5]
 231:../kernel/tkernel/mailbox.c **** 		knl_ctxtsk->wercd = &ercd;
 822                             		.loc 4 231 13
 823 04c0 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 824 04c6 EC 55                   		mov.L	[r5], r5
 825                             		.loc 4 231 21
 826 04c8 71 A4 08                		add	#8, r10, r4
 827 04cb A3 DC                   		mov.L	r4, 60[r5]
 232:../kernel/tkernel/mailbox.c **** 		knl_ctxtsk->winfo.mbx.ppk_msg = ppk_msg;
 828                             		.loc 4 232 13
 829 04cd FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 830 04d3 EC 55                   		mov.L	[r5], r5
 831                             		.loc 4 232 33
 832 04d5 ED A4 04                		mov.L	16[r10], r4
 833 04d8 A4 54                   		mov.L	r4, 64[r5]
 233:../kernel/tkernel/mailbox.c **** 		knl_gcb_make_wait((GCB*)mbxcb, tmout);
 834                             		.loc 4 233 3
 835 04da ED A2 05                		mov.L	20[r10], r2
 836 04dd EC A1                   		mov.L	[r10], r1
 837 04df 05 00 00 00             		bsr	_knl_gcb_make_wait
 838                             	.L54:
 234:../kernel/tkernel/mailbox.c **** 	}
 235:../kernel/tkernel/mailbox.c **** 
 236:../kernel/tkernel/mailbox.c ****     error_exit:
 237:../kernel/tkernel/mailbox.c **** 	END_CRITICAL_SECTION;
 839                             		.loc 4 237 2
 840 04e3 ED A5 01                		mov.L	4[r10], r5
 841 04e6 61 F5                   		cmp	#15, r5
 842 04e8 20 2E                   		beq	.L58
 843                             		.loc 4 237 2 is_stmt 0 discriminator 1
 844 04ea FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 845 04f0 EC 54                   		mov.L	[r5], r4
 846 04f2 FB 52 00 00 00 00       		mov.L	#_knl_schedtsk, r5
 847 04f8 EC 55                   		mov.L	[r5], r5
 848 04fa 47 54                   		cmp	r5, r4
 849 04fc 20 1A                   		beq	.L58
 850                             		.loc 4 237 2 discriminator 3
 851 04fe 39 9F FB                		bsr	_knl_isTaskIndependent
 852 0501 EF 15                   		mov.L	r1, r5
 853 0503 61 05                   		cmp	#0, r5
 854 0505 21 11                   		bne	.L58
 855                             		.loc 4 237 2 discriminator 5
 856 0507 FB 52 00 00 00 00       		mov.L	#_knl_dispatch_disabled, r5
 857 050d EC 55                   		mov.L	[r5], r5
 858 050f 61 05                   		cmp	#0, r5
 859 0511 1D                      		bne	.L58
 860                             		.loc 4 237 2 discriminator 7
 861 0512 05 00 00 00             		bsr	_knl_dispatch
 862                             		.balign 8,3,1
 863                             	.L58:
 864                             		.loc 4 237 2 discriminator 9
 865 0516 ED A1 01                		mov.L	4[r10], r1
 866 0519 05 00 00 00             		bsr	_setint
 867                             	.LBE5:
 238:../kernel/tkernel/mailbox.c **** 
 239:../kernel/tkernel/mailbox.c **** 	return ercd;
 868                             		.loc 4 239 9 is_stmt 1 discriminator 9
 869 051d ED A5 02                		mov.L	8[r10], r5
 870                             		.balign 8,3,1
 871                             	.L59:
 240:../kernel/tkernel/mailbox.c **** }
 872                             		.loc 4 240 1 discriminator 1
 873 0520 EF 51                   		mov.L	r5, r1
 874 0522 3F AA 07                		rtsd	#28, r10-r10
 875                             	.LFE40:
 877                             		.global	_tk_ref_mbx
 879                             	_tk_ref_mbx:
 880                             	.LFB41:
 241:../kernel/tkernel/mailbox.c **** 
 242:../kernel/tkernel/mailbox.c **** #ifdef USE_FUNC_TK_REF_MBX
 243:../kernel/tkernel/mailbox.c **** /*
 244:../kernel/tkernel/mailbox.c ****  * Refer mailbox state 
 245:../kernel/tkernel/mailbox.c ****  */
 246:../kernel/tkernel/mailbox.c **** SYSCALL ER tk_ref_mbx( ID mbxid, T_RMBX *pk_rmbx )
 247:../kernel/tkernel/mailbox.c **** {
 881                             		.loc 4 247 1
 882 0525 7E AA                   		push.l	r10
 883                             	.LCFI24:
 884 0527 71 0A EC                		add	#-20, r0, r10
 885                             	.LCFI25:
 886 052a EF A0                   		mov.L	r10, r0
 887 052c E7 A1 03                		mov.L	r1, 12[r10]
 888 052f E7 A2 04                		mov.L	r2, 16[r10]
 248:../kernel/tkernel/mailbox.c **** 	MBXCB	*mbxcb;
 249:../kernel/tkernel/mailbox.c **** 	ER	ercd = E_OK;
 889                             		.loc 4 249 5
 890 0532 F8 A6 00                		mov.L	#0, [r10]
 250:../kernel/tkernel/mailbox.c **** 
 251:../kernel/tkernel/mailbox.c **** 	CHECK_MBXID(mbxid);
 891                             		.loc 4 251 2
 892 0535 ED A5 03                		mov.L	12[r10], r5
 893 0538 61 05                   		cmp	#0, r5
 894 053a 2B 09                   		ble	.L61
 895                             		.loc 4 251 2 is_stmt 0 discriminator 2
 896 053c ED A5 03                		mov.L	12[r10], r5
 897 053f 61 85                   		cmp	#8, r5
 898 0541 2B 08                   		ble	.L62
 899                             	.L61:
 900                             		.loc 4 251 2 discriminator 3
 901 0543 FB 56 EE                		mov.L	#-18, r5
 902 0546 38 88 00                		bra	.L63
 903                             	.L62:
 252:../kernel/tkernel/mailbox.c **** 
 253:../kernel/tkernel/mailbox.c **** 	mbxcb = get_mbxcb(mbxid);
 904                             		.loc 4 253 10 is_stmt 1
 905 0549 ED A5 03                		mov.L	12[r10], r5
 906 054c 60 15                   		sub	#1, r5
 907                             		.loc 4 253 8
 908 054e 75 15 1C                		mul	#28, r5
 909 0551 70 55 00 00 00 00       		add	#_knl_mbxcb_table, r5
 910 0557 E7 A5 01                		mov.L	r5, 4[r10]
 911                             	.LBB6:
 254:../kernel/tkernel/mailbox.c **** 
 255:../kernel/tkernel/mailbox.c **** 	BEGIN_CRITICAL_SECTION;
 912                             		.loc 4 255 2
 913 055a 05 00 00 00             		bsr	_disint
 914 055e E7 A1 02                		mov.L	r1, 8[r10]
 256:../kernel/tkernel/mailbox.c **** 	if ( mbxcb->mbxid == 0 ) {
 915                             		.loc 4 256 12
 916 0561 ED A5 01                		mov.L	4[r10], r5
 917 0564 A8 D5                   		mov.L	8[r5], r5
 918                             		.loc 4 256 5
 919 0566 61 05                   		cmp	#0, r5
 920 0568 1E                      		bne	.L64
 257:../kernel/tkernel/mailbox.c **** 		ercd = E_NOEXS;
 921                             		.loc 4 257 8
 922 0569 F8 A6 D6                		mov.L	#-42, [r10]
 923 056c 2E 26                   		bra	.L65
 924                             	.L64:
 258:../kernel/tkernel/mailbox.c **** 	} else {
 259:../kernel/tkernel/mailbox.c **** 		pk_rmbx->exinf = mbxcb->exinf;
 925                             		.loc 4 259 25
 926 056e ED A5 01                		mov.L	4[r10], r5
 927 0571 A8 DC                   		mov.L	12[r5], r4
 928                             		.loc 4 259 18
 929 0573 ED A5 04                		mov.L	16[r10], r5
 930 0576 E3 54                   		mov.L	r4, [r5]
 260:../kernel/tkernel/mailbox.c **** 		pk_rmbx->wtsk = knl_wait_tskid(&mbxcb->wait_queue);
 931                             		.loc 4 260 19
 932 0578 ED A5 01                		mov.L	4[r10], r5
 933 057b EF 51                   		mov.L	r5, r1
 934 057d 05 00 00 00             		bsr	_knl_wait_tskid
 935 0581 EF 14                   		mov.L	r1, r4
 936                             		.loc 4 260 17
 937 0583 ED A5 04                		mov.L	16[r10], r5
 938 0586 A0 5C                   		mov.L	r4, 4[r5]
 261:../kernel/tkernel/mailbox.c **** 		pk_rmbx->pk_msg = headmsg(mbxcb);
 939                             		.loc 4 261 21
 940 0588 ED A5 01                		mov.L	4[r10], r5
 941 058b A9 5C                   		mov.L	20[r5], r4
 942                             		.loc 4 261 19
 943 058d ED A5 04                		mov.L	16[r10], r5
 944 0590 A0 D4                   		mov.L	r4, 8[r5]
 945                             	.L65:
 262:../kernel/tkernel/mailbox.c **** 	}
 263:../kernel/tkernel/mailbox.c **** 	END_CRITICAL_SECTION;
 946                             		.loc 4 263 2
 947 0592 ED A5 02                		mov.L	8[r10], r5
 948 0595 61 F5                   		cmp	#15, r5
 949 0597 20 2E                   		beq	.L66
 950                             		.loc 4 263 2 is_stmt 0 discriminator 1
 951 0599 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 952 059f EC 54                   		mov.L	[r5], r4
 953 05a1 FB 52 00 00 00 00       		mov.L	#_knl_schedtsk, r5
 954 05a7 EC 55                   		mov.L	[r5], r5
 955 05a9 47 54                   		cmp	r5, r4
 956 05ab 20 1A                   		beq	.L66
 957                             		.loc 4 263 2 discriminator 3
 958 05ad 39 F0 FA                		bsr	_knl_isTaskIndependent
 959 05b0 EF 15                   		mov.L	r1, r5
 960 05b2 61 05                   		cmp	#0, r5
 961 05b4 21 11                   		bne	.L66
 962                             		.loc 4 263 2 discriminator 5
 963 05b6 FB 52 00 00 00 00       		mov.L	#_knl_dispatch_disabled, r5
 964 05bc EC 55                   		mov.L	[r5], r5
 965 05be 61 05                   		cmp	#0, r5
 966 05c0 1D                      		bne	.L66
 967                             		.loc 4 263 2 discriminator 7
 968 05c1 05 00 00 00             		bsr	_knl_dispatch
 969                             		.balign 8,3,1
 970                             	.L66:
 971                             		.loc 4 263 2 discriminator 9
 972 05c5 ED A1 02                		mov.L	8[r10], r1
 973 05c8 05 00 00 00             		bsr	_setint
 974                             	.LBE6:
 264:../kernel/tkernel/mailbox.c **** 
 265:../kernel/tkernel/mailbox.c **** 	return ercd;
 975                             		.loc 4 265 9 is_stmt 1 discriminator 9
 976 05cc EC A5                   		mov.L	[r10], r5
 977                             	.L63:
 266:../kernel/tkernel/mailbox.c **** }
 978                             		.loc 4 266 1
 979 05ce EF 51                   		mov.L	r5, r1
 980 05d0 3F AA 06                		rtsd	#24, r10-r10
 981                             	.LFE41:
 1253                             	.Letext0:
 1254                             		.file 5 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\include/tk/typedef.h"
 1255                             		.file 6 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\include/tk/syscall.h"
 1256                             		.file 7 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\kernel\\knlinc/kernel.h"
 1257                             		.file 8 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\kernel\\tkernel\\timer.h"
 1258                             		.file 9 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\kernel\\tkernel\\winfo.h"
 1259                             		.file 10 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\kernel\\tkernel\\mutex.h"
 1260                             		.file 11 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\kernel\\sysdepend\\cpu\\core\\rxv2\\sysd
 1261                             		.file 12 "../kernel/tkernel/task.h"
 1262                             		.file 13 "../kernel/tkernel/ready_queue.h"
 1263                             		.file 14 "../kernel/tkernel/wait.h"
