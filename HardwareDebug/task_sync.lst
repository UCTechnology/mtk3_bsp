   1                             		.file	"task_sync.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   5                             	_QueInit:
   6                             	.LFB6:
   7                             		.file 1 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/sys/queue.h"
   1:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** /*
   2:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *----------------------------------------------------------------------
   3:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *    micro T-Kernel 3.00.00
   4:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *
   5:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *    Copyright (C) 2006-2019 by Ken Sakamura.
   6:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *    This software is distributed under the T-License 2.1.
   7:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *----------------------------------------------------------------------
   8:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *
   9:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *    Released by TRON Forum(http://www.tron.org) at 2019/12/11.
  10:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *
  11:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *----------------------------------------------------------------------
  12:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  */
  13:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 
  14:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** /*
  15:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *	queue.h
  16:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *
  17:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *	Queuing operation
  18:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  */
  19:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 
  20:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** #ifndef	__SYS_QUEUE_H__
  21:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** #define __SYS_QUEUE_H__
  22:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 
  23:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** #include <tk/tkernel.h>
  24:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 
  25:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** #ifdef __cplusplus
  26:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** extern "C" {
  27:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** #endif
  28:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 
  29:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** /*
  30:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  * Double-link queue (ring)
  31:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  */
  32:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** typedef struct queue {
  33:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	struct queue	*next;
  34:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	struct queue	*prev;
  35:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** } QUEUE;
  36:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 
  37:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** /*
  38:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  * Queue initialization 
  39:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  */
  40:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** Inline void QueInit( QUEUE *que )
  41:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** {
   8                             		.loc 1 41 1
   9 0000 7E AA                   		push.l	r10
  10                             	.LCFI0:
  11 0002 71 0A FC                		add	#-4, r0, r10
  12                             	.LCFI1:
  13 0005 EF A0                   		mov.L	r10, r0
  14 0007 E3 A1                   		mov.L	r1, [r10]
  42:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	que->next = (struct queue *)que;
  15                             		.loc 1 42 12
  16 0009 EC A5                   		mov.L	[r10], r5
  17 000b EC A4                   		mov.L	[r10], r4
  18 000d E3 54                   		mov.L	r4, [r5]
  43:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	que->prev = (struct queue *)que;
  19                             		.loc 1 43 12
  20 000f EC A5                   		mov.L	[r10], r5
  21 0011 EC A4                   		mov.L	[r10], r4
  22 0013 A0 5C                   		mov.L	r4, 4[r5]
  44:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** }
  23                             		.loc 1 44 1
  24 0015 03                      		nop
  25 0016 3F AA 02                		rtsd	#8, r10-r10
  26                             	.LFE6:
  29                             	_knl_isTaskIndependent:
  30                             	.LFB16:
  31                             		.file 2 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\sysdepend\\cpu\\core\\rxv2\\cpu_st
   1:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
   2:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *----------------------------------------------------------------------
   3:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *    micro T-Kernel 3.00.03
   4:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *
   5:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *    Copyright (C) 2006-2021 by Ken Sakamura.
   6:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *    This software is distributed under the T-License 2.2.
   7:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *----------------------------------------------------------------------
   8:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *
   9:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *    Released by TRON Forum(http://www.tron.org) at 2021/03/31.
  10:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *
  11:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *----------------------------------------------------------------------
  12:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  13:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  14:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  15:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *	cpu_status.h (RXv2)
  16:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *	CPU-Dependent Status Definition
  17:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  18:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  19:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #ifndef _SYSDEPEND_CPU_CORE_STATUS_
  20:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define _SYSDEPEND_CPU_CORE_STATUS_
  21:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  22:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #include <tk/syslib.h>
  23:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #include <sys/sysdef.h>
  24:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  25:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #include "sysdepend.h"
  26:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  27:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  * Start/End critical section
  28:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  29:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define BEGIN_CRITICAL_SECTION	{ UINT _sr_ = disint();
  30:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define END_CRITICAL_SECTION	if ( !isDI(_sr_)			\
  31:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 				  && knl_ctxtsk != knl_schedtsk		\
  32:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 				  && !knl_isTaskIndependent()		\
  33:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 				  && !knl_dispatch_disabled ) {		\
  34:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 					knl_dispatch();			\
  35:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 				}					\
  36:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 				setint(_sr_); }
  37:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  38:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  * Start/End interrupt disable section
  39:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  40:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define BEGIN_DISABLE_INTERRUPT	{ UINT _sr_ = disint();
  41:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define END_DISABLE_INTERRUPT	setint(_sr_); }
  42:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  43:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  44:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  * Interrupt enable/disable
  45:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  46:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define ENABLE_INTERRUPT	{ setint(0); }
  47:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define DISABLE_INTERRUPT	{ disint(); }
  48:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  49:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  50:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  * Enable interrupt nesting
  51:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *	Enable the interrupt that has a higher priority than 'level.'
  52:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  53:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define ENABLE_INTERRUPT_UPTO(level)	{ setint(level); }
  54:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  55:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  56:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *  Task-independent control
  57:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  58:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** IMPORT	W	knl_taskindp;		/* Task independent status */
  59:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  60:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  61:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  * If it is the task-independent part, TRUE
  62:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  63:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** Inline BOOL knl_isTaskIndependent( void )
  64:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** {
  32                             		.loc 2 64 1
  33 0019 7E AA                   		push.l	r10
  34                             	.LCFI2:
  35 001b EF 0A                   		mov.L	r0, r10
  36                             	.LCFI3:
  65:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 	return ( knl_taskindp > 0 )? TRUE: FALSE;
  37                             		.loc 2 65 35
  38 001d FB 52 00 00 00 00       		mov.L	#_knl_taskindp, r5
  39 0023 EC 55                   		mov.L	[r5], r5
  40 0025 61 05                   		cmp	#0, r5
  41 0027 FC DB 5A                		scgt.L	r5
  42 002a 5B 55                   		movu.B	r5, r5
  66:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** }
  43                             		.loc 2 66 1
  44 002c EF 51                   		mov.L	r5, r1
  45 002e 3F AA 01                		rtsd	#4, r10-r10
  46                             	.LFE16:
  49                             	_knl_task_alive:
  50                             	.LFB19:
  51                             		.file 3 "../kernel/tkernel/task.h"
   1:../kernel/tkernel/task.h **** /*
   2:../kernel/tkernel/task.h ****  *----------------------------------------------------------------------
   3:../kernel/tkernel/task.h ****  *    micro T-Kernel 3.00.00
   4:../kernel/tkernel/task.h ****  *
   5:../kernel/tkernel/task.h ****  *    Copyright (C) 2006-2019 by Ken Sakamura.
   6:../kernel/tkernel/task.h ****  *    This software is distributed under the T-License 2.1.
   7:../kernel/tkernel/task.h ****  *----------------------------------------------------------------------
   8:../kernel/tkernel/task.h ****  *
   9:../kernel/tkernel/task.h ****  *    Released by TRON Forum(http://www.tron.org) at 2019/12/11.
  10:../kernel/tkernel/task.h ****  *
  11:../kernel/tkernel/task.h ****  *----------------------------------------------------------------------
  12:../kernel/tkernel/task.h ****  */
  13:../kernel/tkernel/task.h **** 
  14:../kernel/tkernel/task.h **** /*
  15:../kernel/tkernel/task.h ****  *	task.h
  16:../kernel/tkernel/task.h ****  *	Task Definition
  17:../kernel/tkernel/task.h ****  */
  18:../kernel/tkernel/task.h **** 
  19:../kernel/tkernel/task.h **** #ifndef _TASK_
  20:../kernel/tkernel/task.h **** #define _TASK_
  21:../kernel/tkernel/task.h **** 
  22:../kernel/tkernel/task.h **** /*
  23:../kernel/tkernel/task.h ****  * Internal expression of task state
  24:../kernel/tkernel/task.h ****  *	Can check with 'state & TS_WAIT' whether the task is in the wait state.
  25:../kernel/tkernel/task.h ****  *	Can check with 'state & TS_SUSPEND' whether the task is in the forced 
  26:../kernel/tkernel/task.h ****  *	wait state.
  27:../kernel/tkernel/task.h ****  */
  28:../kernel/tkernel/task.h **** typedef enum {
  29:../kernel/tkernel/task.h **** 	TS_NONEXIST	= 0,	/* Unregistered state */
  30:../kernel/tkernel/task.h **** 	TS_READY	= 1,	/* RUN or READY state */
  31:../kernel/tkernel/task.h **** 	TS_WAIT		= 2,	/* WAIT state */
  32:../kernel/tkernel/task.h **** 	TS_SUSPEND	= 4,	/* SUSPEND state */
  33:../kernel/tkernel/task.h **** 	TS_WAITSUS	= 6,	/* Both WAIT and SUSPEND state */
  34:../kernel/tkernel/task.h **** 	TS_DORMANT	= 8	/* DORMANT state */
  35:../kernel/tkernel/task.h **** } TSTAT;
  36:../kernel/tkernel/task.h **** 
  37:../kernel/tkernel/task.h **** /*
  38:../kernel/tkernel/task.h ****  * If the task is alive ( except NON-EXISTENT,DORMANT ), return TRUE.
  39:../kernel/tkernel/task.h ****  */
  40:../kernel/tkernel/task.h **** Inline BOOL knl_task_alive( TSTAT state )
  41:../kernel/tkernel/task.h **** {
  52                             		.loc 3 41 1
  53 0031 7E AA                   		push.l	r10
  54                             	.LCFI4:
  55 0033 71 0A FC                		add	#-4, r0, r10
  56                             	.LCFI5:
  57 0036 EF A0                   		mov.L	r10, r0
  58 0038 E3 A1                   		mov.L	r1, [r10]
  42:../kernel/tkernel/task.h **** 	return ( (state & (TS_READY|TS_WAIT|TS_SUSPEND)) != 0 );
  59                             		.loc 3 42 18
  60 003a EC A5                   		mov.L	[r10], r5
  61 003c 64 75                   		and	#7, r5
  62                             		.loc 3 42 51
  63 003e 61 05                   		cmp	#0, r5
  64 0040 FC DB 51                		scne.L	r5
  65 0043 5B 55                   		movu.B	r5, r5
  43:../kernel/tkernel/task.h **** }
  66                             		.loc 3 43 1
  67 0045 EF 51                   		mov.L	r5, r1
  68 0047 3F AA 02                		rtsd	#8, r10-r10
  69                             	.LFE19:
  71                             		.global	_tk_sus_tsk
  73                             	_tk_sus_tsk:
  74                             	.LFB34:
  75                             		.file 4 "../kernel/tkernel/task_sync.c"
   1:../kernel/tkernel/task_sync.c **** /*
   2:../kernel/tkernel/task_sync.c ****  *----------------------------------------------------------------------
   3:../kernel/tkernel/task_sync.c ****  *    micro T-Kernel 3.00.00
   4:../kernel/tkernel/task_sync.c ****  *
   5:../kernel/tkernel/task_sync.c ****  *    Copyright (C) 2006-2019 by Ken Sakamura.
   6:../kernel/tkernel/task_sync.c ****  *    This software is distributed under the T-License 2.1.
   7:../kernel/tkernel/task_sync.c ****  *----------------------------------------------------------------------
   8:../kernel/tkernel/task_sync.c ****  *
   9:../kernel/tkernel/task_sync.c ****  *    Released by TRON Forum(http://www.tron.org) at 2019/12/11.
  10:../kernel/tkernel/task_sync.c ****  *
  11:../kernel/tkernel/task_sync.c ****  *----------------------------------------------------------------------
  12:../kernel/tkernel/task_sync.c ****  */
  13:../kernel/tkernel/task_sync.c **** 
  14:../kernel/tkernel/task_sync.c **** /*
  15:../kernel/tkernel/task_sync.c ****  *	task_sync.c
  16:../kernel/tkernel/task_sync.c ****  *	Task with Synchronize Function
  17:../kernel/tkernel/task_sync.c ****  */
  18:../kernel/tkernel/task_sync.c **** 
  19:../kernel/tkernel/task_sync.c **** #include "kernel.h"
  20:../kernel/tkernel/task_sync.c **** #include "wait.h"
  21:../kernel/tkernel/task_sync.c **** #include "check.h"
  22:../kernel/tkernel/task_sync.c **** #include "limits.h"
  23:../kernel/tkernel/task_sync.c **** 
  24:../kernel/tkernel/task_sync.c **** #ifdef USE_FUNC_TK_SUS_TSK
  25:../kernel/tkernel/task_sync.c **** /*
  26:../kernel/tkernel/task_sync.c ****  * Suspend task
  27:../kernel/tkernel/task_sync.c ****  */
  28:../kernel/tkernel/task_sync.c **** SYSCALL ER tk_sus_tsk( ID tskid )
  29:../kernel/tkernel/task_sync.c **** {
  76                             		.loc 4 29 1
  77 004a 7E AA                   		push.l	r10
  78                             	.LCFI6:
  79 004c 71 0A EC                		add	#-20, r0, r10
  80                             	.LCFI7:
  81 004f EF A0                   		mov.L	r10, r0
  82 0051 E7 A1 04                		mov.L	r1, 16[r10]
  30:../kernel/tkernel/task_sync.c **** 	TCB	*tcb;
  31:../kernel/tkernel/task_sync.c **** 	TSTAT	state;
  32:../kernel/tkernel/task_sync.c **** 	ER	ercd = E_OK;
  83                             		.loc 4 32 5
  84 0054 F8 A6 00                		mov.L	#0, [r10]
  33:../kernel/tkernel/task_sync.c **** 
  34:../kernel/tkernel/task_sync.c **** 	CHECK_TSKID(tskid);
  85                             		.loc 4 34 2
  86 0057 39 C2 FF                		bsr	_knl_isTaskIndependent
  87 005a EF 15                   		mov.L	r1, r5
  88 005c 61 05                   		cmp	#0, r5
  89 005e 21 1A                   		bne	.L7
  90                             		.loc 4 34 2 is_stmt 0 discriminator 1
  91 0060 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
  92 0066 EC 55                   		mov.L	[r5], r5
  93 0068 61 05                   		cmp	#0, r5
  94 006a 20 0E                   		beq	.L7
  95                             		.loc 4 34 2 discriminator 3
  96 006c ED A5 04                		mov.L	16[r10], r5
  97 006f 61 05                   		cmp	#0, r5
  98 0071 1F                      		bne	.L7
  99                             		.loc 4 34 2 discriminator 5
 100 0072 FB 56 D7                		mov.L	#-41, r5
 101 0075 38 24 01                		bra	.L8
 102                             	.L7:
 103                             		.loc 4 34 2 discriminator 6
 104 0078 ED A5 04                		mov.L	16[r10], r5
 105 007b 61 05                   		cmp	#0, r5
 106 007d 2B 0A                   		ble	.L9
 107                             		.loc 4 34 2 discriminator 8
 108 007f ED A5 04                		mov.L	16[r10], r5
 109 0082 75 55 20                		cmp	#32, r5
 110 0085 2B 08                   		ble	.L10
 111                             	.L9:
 112                             		.loc 4 34 2 discriminator 9
 113 0087 FB 56 EE                		mov.L	#-18, r5
 114 008a 38 0F 01                		bra	.L8
 115                             	.L10:
  35:../kernel/tkernel/task_sync.c **** 	CHECK_NONSELF(tskid);
 116                             		.loc 4 35 2 is_stmt 1
 117 008d 39 8C FF                		bsr	_knl_isTaskIndependent
 118 0090 EF 15                   		mov.L	r1, r5
 119 0092 61 05                   		cmp	#0, r5
 120 0094 21 24                   		bne	.L11
 121                             		.loc 4 35 2 is_stmt 0 discriminator 1
 122 0096 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 123 009c EC 55                   		mov.L	[r5], r5
 124 009e 61 05                   		cmp	#0, r5
 125 00a0 20 18                   		beq	.L11
 126                             		.loc 4 35 2 discriminator 2
 127 00a2 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 128 00a8 EC 55                   		mov.L	[r5], r5
 129 00aa A8 D5                   		mov.L	8[r5], r5
 130 00ac ED A4 04                		mov.L	16[r10], r4
 131 00af 47 54                   		cmp	r5, r4
 132 00b1 1F                      		bne	.L11
 133                             		.loc 4 35 2 discriminator 3
 134 00b2 FB 56 D7                		mov.L	#-41, r5
 135 00b5 38 E4 00                		bra	.L8
 136                             	.L11:
  36:../kernel/tkernel/task_sync.c **** 
  37:../kernel/tkernel/task_sync.c **** 	tcb = get_tcb(tskid);
 137                             		.loc 4 37 8 is_stmt 1
 138 00b8 ED A5 04                		mov.L	16[r10], r5
 139 00bb 60 15                   		sub	#1, r5
 140                             		.loc 4 37 6
 141 00bd 75 15 68                		mul	#0x68, r5
 142 00c0 70 55 00 00 00 00       		add	#_knl_tcb_table, r5
 143 00c6 E7 A5 01                		mov.L	r5, 4[r10]
 144                             	.LBB2:
  38:../kernel/tkernel/task_sync.c **** 
  39:../kernel/tkernel/task_sync.c **** 	BEGIN_CRITICAL_SECTION;
 145                             		.loc 4 39 2
 146 00c9 05 00 00 00             		bsr	_disint
 147 00cd E7 A1 02                		mov.L	r1, 8[r10]
  40:../kernel/tkernel/task_sync.c **** 	state = (TSTAT)tcb->state;
 148                             		.loc 4 40 20
 149 00d0 ED A5 01                		mov.L	4[r10], r5
 150 00d3 CD 55 27                		mov.B	39[r5], r5
 151                             		.loc 4 40 8
 152 00d6 5B 55                   		movu.B	r5, r5
 153 00d8 E7 A5 03                		mov.L	r5, 12[r10]
  41:../kernel/tkernel/task_sync.c **** 	if ( !knl_task_alive(state) ) {
 154                             		.loc 4 41 8
 155 00db ED A1 03                		mov.L	12[r10], r1
 156 00de 39 53 FF                		bsr	_knl_task_alive
 157 00e1 EF 15                   		mov.L	r1, r5
 158                             		.loc 4 41 5
 159 00e3 61 05                   		cmp	#0, r5
 160 00e5 21 13                   		bne	.L12
  42:../kernel/tkernel/task_sync.c **** 		ercd = ( state == TS_NONEXIST )? E_NOEXS: E_OBJ;
 161                             		.loc 4 42 43
 162 00e7 ED A5 03                		mov.L	12[r10], r5
 163 00ea 61 05                   		cmp	#0, r5
 164 00ec 1D                      		bne	.L13
 165                             		.loc 4 42 43 is_stmt 0 discriminator 1
 166 00ed FB 56 D6                		mov.L	#-42, r5
 167 00f0 0C                      		bra	.L14
 168                             	.L13:
 169                             		.loc 4 42 43 discriminator 2
 170 00f1 FB 56 D7                		mov.L	#-41, r5
 171                             	.L14:
 172                             		.loc 4 42 8 is_stmt 1 discriminator 4
 173 00f4 E3 A5                   		mov.L	r5, [r10]
  43:../kernel/tkernel/task_sync.c **** 		goto error_exit;
 174                             		.loc 4 43 3 discriminator 4
 175 00f6 2E 67                   		bra	.L15
 176                             	.L12:
  44:../kernel/tkernel/task_sync.c **** 	}
  45:../kernel/tkernel/task_sync.c **** 	if ( tcb == knl_ctxtsk && knl_dispatch_disabled >= DDS_DISABLE ) {
 177                             		.loc 4 45 11
 178 00f8 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 179 00fe EC 55                   		mov.L	[r5], r5
 180                             		.loc 4 45 5
 181 0100 ED A4 01                		mov.L	4[r10], r4
 182 0103 47 54                   		cmp	r5, r4
 183 0105 21 13                   		bne	.L16
 184                             		.loc 4 45 50 discriminator 1
 185 0107 FB 52 00 00 00 00       		mov.L	#_knl_dispatch_disabled, r5
 186 010d EC 55                   		mov.L	[r5], r5
 187                             		.loc 4 45 25 discriminator 1
 188 010f 61 15                   		cmp	#1, r5
 189 0111 2B 07                   		ble	.L16
  46:../kernel/tkernel/task_sync.c **** 		ercd = E_CTX;
 190                             		.loc 4 46 8
 191 0113 F8 A6 E7                		mov.L	#-25, [r10]
  47:../kernel/tkernel/task_sync.c **** 		goto error_exit;
 192                             		.loc 4 47 3
 193 0116 2E 47                   		bra	.L15
 194                             	.L16:
  48:../kernel/tkernel/task_sync.c **** 	}
  49:../kernel/tkernel/task_sync.c **** 	if ( tcb->suscnt == INT_MAX ) {
 195                             		.loc 4 49 10
 196 0118 ED A5 01                		mov.L	4[r10], r5
 197 011b AB D5                   		mov.L	56[r5], r5
 198                             		.loc 4 49 5
 199 011d 74 05 FF FF FF 7F       		cmp	#0x7fffffff, r5
 200 0123 1E                      		bne	.L17
  50:../kernel/tkernel/task_sync.c **** 		ercd = E_QOVR;
 201                             		.loc 4 50 8
 202 0124 F8 A6 D5                		mov.L	#-43, [r10]
  51:../kernel/tkernel/task_sync.c **** 		goto error_exit;
 203                             		.loc 4 51 3
 204 0127 2E 36                   		bra	.L15
 205                             	.L17:
  52:../kernel/tkernel/task_sync.c **** 	}
  53:../kernel/tkernel/task_sync.c **** 
  54:../kernel/tkernel/task_sync.c **** 	/* Update suspend request count */
  55:../kernel/tkernel/task_sync.c **** 	++tcb->suscnt;
 206                             		.loc 4 55 7
 207 0129 ED A5 01                		mov.L	4[r10], r5
 208 012c AB D5                   		mov.L	56[r5], r5
 209                             		.loc 4 55 2
 210 012e 71 54 01                		add	#1, r5, r4
 211 0131 ED A5 01                		mov.L	4[r10], r5
 212 0134 A3 D4                   		mov.L	r4, 56[r5]
  56:../kernel/tkernel/task_sync.c **** 
  57:../kernel/tkernel/task_sync.c **** 	/* Move to forced wait state */
  58:../kernel/tkernel/task_sync.c **** 	if ( state == TS_READY ) {
 213                             		.loc 4 58 5
 214 0136 ED A5 03                		mov.L	12[r10], r5
 215 0139 61 15                   		cmp	#1, r5
 216 013b 21 12                   		bne	.L18
  59:../kernel/tkernel/task_sync.c **** 		knl_make_non_ready(tcb);
 217                             		.loc 4 59 3
 218 013d ED A1 01                		mov.L	4[r10], r1
 219 0140 05 00 00 00             		bsr	_knl_make_non_ready
  60:../kernel/tkernel/task_sync.c **** 		tcb->state = TS_SUSPEND;
 220                             		.loc 4 60 14
 221 0144 ED A5 01                		mov.L	4[r10], r5
 222 0147 F9 54 27 04             		mov.B	#4, 39[r5]
 223 014b 2E 12                   		bra	.L15
 224                             	.L18:
  61:../kernel/tkernel/task_sync.c **** 
  62:../kernel/tkernel/task_sync.c **** 	} else if ( state == TS_WAIT ) {
 225                             		.loc 4 62 12
 226 014d ED A5 03                		mov.L	12[r10], r5
 227 0150 61 25                   		cmp	#2, r5
 228 0152 1A                      		bne	.L20
  63:../kernel/tkernel/task_sync.c **** 		tcb->state = TS_WAITSUS;
 229                             		.loc 4 63 14
 230 0153 ED A5 01                		mov.L	4[r10], r5
 231 0156 F9 54 27 06             		mov.B	#6, 39[r5]
 232 015a 2E 03                   		bra	.L15
 233                             	.L20:
  64:../kernel/tkernel/task_sync.c **** 	}
  65:../kernel/tkernel/task_sync.c **** 
  66:../kernel/tkernel/task_sync.c ****     error_exit:
 234                             		.loc 4 66 5
 235 015c 03                      		nop
 236                             		.balign 8,3,1
 237                             	.L15:
  67:../kernel/tkernel/task_sync.c **** 	END_CRITICAL_SECTION;
 238                             		.loc 4 67 2
 239 015d ED A5 02                		mov.L	8[r10], r5
 240 0160 61 F5                   		cmp	#15, r5
 241 0162 20 2E                   		beq	.L19
 242                             		.loc 4 67 2 is_stmt 0 discriminator 1
 243 0164 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 244 016a EC 54                   		mov.L	[r5], r4
 245 016c FB 52 00 00 00 00       		mov.L	#_knl_schedtsk, r5
 246 0172 EC 55                   		mov.L	[r5], r5
 247 0174 47 54                   		cmp	r5, r4
 248 0176 20 1A                   		beq	.L19
 249                             		.loc 4 67 2 discriminator 3
 250 0178 39 A1 FE                		bsr	_knl_isTaskIndependent
 251 017b EF 15                   		mov.L	r1, r5
 252 017d 61 05                   		cmp	#0, r5
 253 017f 21 11                   		bne	.L19
 254                             		.loc 4 67 2 discriminator 5
 255 0181 FB 52 00 00 00 00       		mov.L	#_knl_dispatch_disabled, r5
 256 0187 EC 55                   		mov.L	[r5], r5
 257 0189 61 05                   		cmp	#0, r5
 258 018b 1D                      		bne	.L19
 259                             		.loc 4 67 2 discriminator 7
 260 018c 05 00 00 00             		bsr	_knl_dispatch
 261                             		.balign 8,3,1
 262                             	.L19:
 263                             		.loc 4 67 2 discriminator 9
 264 0190 ED A1 02                		mov.L	8[r10], r1
 265 0193 05 00 00 00             		bsr	_setint
 266                             	.LBE2:
  68:../kernel/tkernel/task_sync.c **** 
  69:../kernel/tkernel/task_sync.c **** 	return ercd;
 267                             		.loc 4 69 9 is_stmt 1 discriminator 9
 268 0197 EC A5                   		mov.L	[r10], r5
 269                             		.balign 8,3,1
 270                             	.L8:
  70:../kernel/tkernel/task_sync.c **** }
 271                             		.loc 4 70 1
 272 0199 EF 51                   		mov.L	r5, r1
 273 019b 3F AA 06                		rtsd	#24, r10-r10
 274                             	.LFE34:
 276                             		.global	_tk_rsm_tsk
 278                             	_tk_rsm_tsk:
 279                             	.LFB35:
  71:../kernel/tkernel/task_sync.c **** #endif /* USE_FUNC_TK_SUS_TSK */
  72:../kernel/tkernel/task_sync.c **** 
  73:../kernel/tkernel/task_sync.c **** #ifdef USE_FUNC_TK_RSM_TSK
  74:../kernel/tkernel/task_sync.c **** /*
  75:../kernel/tkernel/task_sync.c ****  * Resume task
  76:../kernel/tkernel/task_sync.c ****  */
  77:../kernel/tkernel/task_sync.c **** SYSCALL ER tk_rsm_tsk( ID tskid )
  78:../kernel/tkernel/task_sync.c **** {
 280                             		.loc 4 78 1
 281 019e 7E AA                   		push.l	r10
 282                             	.LCFI8:
 283 01a0 71 0A F0                		add	#-16, r0, r10
 284                             	.LCFI9:
 285 01a3 EF A0                   		mov.L	r10, r0
 286 01a5 E7 A1 03                		mov.L	r1, 12[r10]
  79:../kernel/tkernel/task_sync.c **** 	TCB	*tcb;
  80:../kernel/tkernel/task_sync.c **** 	ER	ercd = E_OK;
 287                             		.loc 4 80 5
 288 01a8 F8 A6 00                		mov.L	#0, [r10]
  81:../kernel/tkernel/task_sync.c **** 
  82:../kernel/tkernel/task_sync.c **** 	CHECK_TSKID(tskid);
 289                             		.loc 4 82 2
 290 01ab 39 6E FE                		bsr	_knl_isTaskIndependent
 291 01ae EF 15                   		mov.L	r1, r5
 292 01b0 61 05                   		cmp	#0, r5
 293 01b2 21 1A                   		bne	.L22
 294                             		.loc 4 82 2 is_stmt 0 discriminator 1
 295 01b4 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 296 01ba EC 55                   		mov.L	[r5], r5
 297 01bc 61 05                   		cmp	#0, r5
 298 01be 20 0E                   		beq	.L22
 299                             		.loc 4 82 2 discriminator 3
 300 01c0 ED A5 03                		mov.L	12[r10], r5
 301 01c3 61 05                   		cmp	#0, r5
 302 01c5 1F                      		bne	.L22
 303                             		.loc 4 82 2 discriminator 5
 304 01c6 FB 56 D7                		mov.L	#-41, r5
 305 01c9 38 0B 01                		bra	.L23
 306                             	.L22:
 307                             		.loc 4 82 2 discriminator 6
 308 01cc ED A5 03                		mov.L	12[r10], r5
 309 01cf 61 05                   		cmp	#0, r5
 310 01d1 2B 0A                   		ble	.L24
 311                             		.loc 4 82 2 discriminator 8
 312 01d3 ED A5 03                		mov.L	12[r10], r5
 313 01d6 75 55 20                		cmp	#32, r5
 314 01d9 2B 08                   		ble	.L25
 315                             	.L24:
 316                             		.loc 4 82 2 discriminator 9
 317 01db FB 56 EE                		mov.L	#-18, r5
 318 01de 38 F6 00                		bra	.L23
 319                             	.L25:
  83:../kernel/tkernel/task_sync.c **** 	CHECK_NONSELF(tskid);
 320                             		.loc 4 83 2 is_stmt 1
 321 01e1 39 38 FE                		bsr	_knl_isTaskIndependent
 322 01e4 EF 15                   		mov.L	r1, r5
 323 01e6 61 05                   		cmp	#0, r5
 324 01e8 21 24                   		bne	.L26
 325                             		.loc 4 83 2 is_stmt 0 discriminator 1
 326 01ea FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 327 01f0 EC 55                   		mov.L	[r5], r5
 328 01f2 61 05                   		cmp	#0, r5
 329 01f4 20 18                   		beq	.L26
 330                             		.loc 4 83 2 discriminator 2
 331 01f6 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 332 01fc EC 55                   		mov.L	[r5], r5
 333 01fe A8 D5                   		mov.L	8[r5], r5
 334 0200 ED A4 03                		mov.L	12[r10], r4
 335 0203 47 54                   		cmp	r5, r4
 336 0205 1F                      		bne	.L26
 337                             		.loc 4 83 2 discriminator 3
 338 0206 FB 56 D7                		mov.L	#-41, r5
 339 0209 38 CB 00                		bra	.L23
 340                             	.L26:
  84:../kernel/tkernel/task_sync.c **** 
  85:../kernel/tkernel/task_sync.c **** 	tcb = get_tcb(tskid);
 341                             		.loc 4 85 8 is_stmt 1
 342 020c ED A5 03                		mov.L	12[r10], r5
 343 020f 60 15                   		sub	#1, r5
 344                             		.loc 4 85 6
 345 0211 75 15 68                		mul	#0x68, r5
 346 0214 70 55 00 00 00 00       		add	#_knl_tcb_table, r5
 347 021a E7 A5 01                		mov.L	r5, 4[r10]
 348                             	.LBB3:
  86:../kernel/tkernel/task_sync.c **** 
  87:../kernel/tkernel/task_sync.c **** 	BEGIN_CRITICAL_SECTION;
 349                             		.loc 4 87 2
 350 021d 05 00 00 00             		bsr	_disint
 351 0221 E7 A1 02                		mov.L	r1, 8[r10]
  88:../kernel/tkernel/task_sync.c **** 	switch ( tcb->state ) {
 352                             		.loc 4 88 14
 353 0224 ED A5 01                		mov.L	4[r10], r5
 354 0227 CD 55 27                		mov.B	39[r5], r5
 355 022a 5B 55                   		movu.B	r5, r5
 356                             		.loc 4 88 2
 357 022c 61 25                   		cmp	#2, r5
 358 022e 2A 0C                   		bgt	.L27
 359 0230 61 05                   		cmp	#0, r5
 360 0232 2A 1B                   		bgt	.L28
 361 0234 61 05                   		cmp	#0, r5
 362 0236 20 12                   		beq	.L29
 363 0238 2E 57                   		bra	.L30
 364                             	.L27:
 365 023a 61 65                   		cmp	#6, r5
 366 023c 20 35                   		beq	.L31
 367 023e 61 85                   		cmp	#8, r5
 368 0240 20 0D                   		beq	.L28
 369 0242 61 45                   		cmp	#4, r5
 370 0244 20 0E                   		beq	.L32
 371 0246 2E 49                   		bra	.L30
 372                             	.L29:
  89:../kernel/tkernel/task_sync.c **** 	  case TS_NONEXIST:
  90:../kernel/tkernel/task_sync.c **** 		ercd = E_NOEXS;
 373                             		.loc 4 90 8
 374 0248 F8 A6 D6                		mov.L	#-42, [r10]
  91:../kernel/tkernel/task_sync.c **** 		break;
 375                             		.loc 4 91 3
 376 024b 2E 4D                   		bra	.L33
 377                             	.L28:
  92:../kernel/tkernel/task_sync.c **** 
  93:../kernel/tkernel/task_sync.c **** 	  case TS_DORMANT:
  94:../kernel/tkernel/task_sync.c **** 	  case TS_READY:
  95:../kernel/tkernel/task_sync.c **** 	  case TS_WAIT:
  96:../kernel/tkernel/task_sync.c **** 		ercd = E_OBJ;
 378                             		.loc 4 96 8
 379 024d F8 A6 D7                		mov.L	#-41, [r10]
  97:../kernel/tkernel/task_sync.c **** 		break;
 380                             		.loc 4 97 3
 381 0250 2E 48                   		bra	.L33
 382                             	.L32:
  98:../kernel/tkernel/task_sync.c **** 
  99:../kernel/tkernel/task_sync.c **** 	  case TS_SUSPEND:
 100:../kernel/tkernel/task_sync.c **** 		if ( --tcb->suscnt == 0 ) {
 383                             		.loc 4 100 13
 384 0252 ED A5 01                		mov.L	4[r10], r5
 385 0255 AB D5                   		mov.L	56[r5], r5
 386                             		.loc 4 100 8
 387 0257 71 54 FF                		add	#-1, r5, r4
 388                             		.loc 4 100 6
 389 025a ED A5 01                		mov.L	4[r10], r5
 390 025d A3 D4                   		mov.L	r4, 56[r5]
 391                             		.loc 4 100 13
 392 025f ED A5 01                		mov.L	4[r10], r5
 393 0262 AB D5                   		mov.L	56[r5], r5
 394                             		.loc 4 100 6
 395 0264 61 05                   		cmp	#0, r5
 396 0266 21 2D                   		bne	.L37
 101:../kernel/tkernel/task_sync.c **** 			knl_make_ready(tcb);
 397                             		.loc 4 101 4
 398 0268 ED A1 01                		mov.L	4[r10], r1
 399 026b 05 00 00 00             		bsr	_knl_make_ready
 102:../kernel/tkernel/task_sync.c **** 		}
 103:../kernel/tkernel/task_sync.c **** 		break;
 400                             		.loc 4 103 3
 401 026f 2E 24                   		bra	.L37
 402                             	.L31:
 104:../kernel/tkernel/task_sync.c **** 	  case TS_WAITSUS:
 105:../kernel/tkernel/task_sync.c **** 		if ( --tcb->suscnt == 0 ) {
 403                             		.loc 4 105 13
 404 0271 ED A5 01                		mov.L	4[r10], r5
 405 0274 AB D5                   		mov.L	56[r5], r5
 406                             		.loc 4 105 8
 407 0276 71 54 FF                		add	#-1, r5, r4
 408                             		.loc 4 105 6
 409 0279 ED A5 01                		mov.L	4[r10], r5
 410 027c A3 D4                   		mov.L	r4, 56[r5]
 411                             		.loc 4 105 13
 412 027e ED A5 01                		mov.L	4[r10], r5
 413 0281 AB D5                   		mov.L	56[r5], r5
 414                             		.loc 4 105 6
 415 0283 61 05                   		cmp	#0, r5
 416 0285 21 11                   		bne	.L38
 106:../kernel/tkernel/task_sync.c **** 			tcb->state = TS_WAIT;
 417                             		.loc 4 106 15
 418 0287 ED A5 01                		mov.L	4[r10], r5
 419 028a F9 54 27 02             		mov.B	#2, 39[r5]
 107:../kernel/tkernel/task_sync.c **** 		}
 108:../kernel/tkernel/task_sync.c **** 		break;
 420                             		.loc 4 108 3
 421 028e 08                      		bra	.L38
 422                             	.L30:
 109:../kernel/tkernel/task_sync.c **** 
 110:../kernel/tkernel/task_sync.c **** 	  default:
 111:../kernel/tkernel/task_sync.c **** 		ercd = E_SYS;
 423                             		.loc 4 111 8
 424 028f F8 A6 FB                		mov.L	#-5, [r10]
 112:../kernel/tkernel/task_sync.c **** 		break;
 425                             		.loc 4 112 3
 426 0292 0E                      		bra	.L33
 427                             	.L37:
 103:../kernel/tkernel/task_sync.c **** 	  case TS_WAITSUS:
 428                             		.loc 4 103 3
 429 0293 03                      		nop
 430 0294 2E 04                   		bra	.L33
 431                             	.L38:
 108:../kernel/tkernel/task_sync.c **** 
 432                             		.loc 4 108 3
 433 0296 03                      		nop
 434 0297 03                      		.balign 8,3,1
 435                             	.L33:
 113:../kernel/tkernel/task_sync.c **** 	}
 114:../kernel/tkernel/task_sync.c **** 	END_CRITICAL_SECTION;
 436                             		.loc 4 114 2
 437 0298 ED A5 02                		mov.L	8[r10], r5
 438 029b 61 F5                   		cmp	#15, r5
 439 029d 20 2E                   		beq	.L36
 440                             		.loc 4 114 2 is_stmt 0 discriminator 1
 441 029f FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 442 02a5 EC 54                   		mov.L	[r5], r4
 443 02a7 FB 52 00 00 00 00       		mov.L	#_knl_schedtsk, r5
 444 02ad EC 55                   		mov.L	[r5], r5
 445 02af 47 54                   		cmp	r5, r4
 446 02b1 20 1A                   		beq	.L36
 447                             		.loc 4 114 2 discriminator 3
 448 02b3 39 66 FD                		bsr	_knl_isTaskIndependent
 449 02b6 EF 15                   		mov.L	r1, r5
 450 02b8 61 05                   		cmp	#0, r5
 451 02ba 21 11                   		bne	.L36
 452                             		.loc 4 114 2 discriminator 5
 453 02bc FB 52 00 00 00 00       		mov.L	#_knl_dispatch_disabled, r5
 454 02c2 EC 55                   		mov.L	[r5], r5
 455 02c4 61 05                   		cmp	#0, r5
 456 02c6 1D                      		bne	.L36
 457                             		.loc 4 114 2 discriminator 7
 458 02c7 05 00 00 00             		bsr	_knl_dispatch
 459                             		.balign 8,3,1
 460                             	.L36:
 461                             		.loc 4 114 2 discriminator 9
 462 02cb ED A1 02                		mov.L	8[r10], r1
 463 02ce 05 00 00 00             		bsr	_setint
 464                             	.LBE3:
 115:../kernel/tkernel/task_sync.c **** 
 116:../kernel/tkernel/task_sync.c **** 	return ercd;
 465                             		.loc 4 116 9 is_stmt 1 discriminator 9
 466 02d2 EC A5                   		mov.L	[r10], r5
 467                             		.balign 8,3,1
 468                             	.L23:
 117:../kernel/tkernel/task_sync.c **** }
 469                             		.loc 4 117 1
 470 02d4 EF 51                   		mov.L	r5, r1
 471 02d6 3F AA 05                		rtsd	#20, r10-r10
 472                             	.LFE35:
 474                             		.global	_tk_frsm_tsk
 476                             	_tk_frsm_tsk:
 477                             	.LFB36:
 118:../kernel/tkernel/task_sync.c **** #endif /* USE_FUNC_TK_RSM_TSK */
 119:../kernel/tkernel/task_sync.c **** 
 120:../kernel/tkernel/task_sync.c **** #ifdef USE_FUNC_TK_FRSM_TSK
 121:../kernel/tkernel/task_sync.c **** /*
 122:../kernel/tkernel/task_sync.c ****  * Force resume task
 123:../kernel/tkernel/task_sync.c ****  */
 124:../kernel/tkernel/task_sync.c **** SYSCALL ER tk_frsm_tsk( ID tskid )
 125:../kernel/tkernel/task_sync.c **** {
 478                             		.loc 4 125 1
 479 02d9 7E AA                   		push.l	r10
 480                             	.LCFI10:
 481 02db 71 0A F0                		add	#-16, r0, r10
 482                             	.LCFI11:
 483 02de EF A0                   		mov.L	r10, r0
 484 02e0 E7 A1 03                		mov.L	r1, 12[r10]
 126:../kernel/tkernel/task_sync.c **** 	TCB	*tcb;
 127:../kernel/tkernel/task_sync.c **** 	ER	ercd = E_OK;
 485                             		.loc 4 127 5
 486 02e3 F8 A6 00                		mov.L	#0, [r10]
 128:../kernel/tkernel/task_sync.c **** 
 129:../kernel/tkernel/task_sync.c **** 	CHECK_TSKID(tskid);
 487                             		.loc 4 129 2
 488 02e6 39 33 FD                		bsr	_knl_isTaskIndependent
 489 02e9 EF 15                   		mov.L	r1, r5
 490 02eb 61 05                   		cmp	#0, r5
 491 02ed 21 1A                   		bne	.L40
 492                             		.loc 4 129 2 is_stmt 0 discriminator 1
 493 02ef FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 494 02f5 EC 55                   		mov.L	[r5], r5
 495 02f7 61 05                   		cmp	#0, r5
 496 02f9 20 0E                   		beq	.L40
 497                             		.loc 4 129 2 discriminator 3
 498 02fb ED A5 03                		mov.L	12[r10], r5
 499 02fe 61 05                   		cmp	#0, r5
 500 0300 1F                      		bne	.L40
 501                             		.loc 4 129 2 discriminator 5
 502 0301 FB 56 D7                		mov.L	#-41, r5
 503 0304 38 E6 00                		bra	.L41
 504                             	.L40:
 505                             		.loc 4 129 2 discriminator 6
 506 0307 ED A5 03                		mov.L	12[r10], r5
 507 030a 61 05                   		cmp	#0, r5
 508 030c 2B 0A                   		ble	.L42
 509                             		.loc 4 129 2 discriminator 8
 510 030e ED A5 03                		mov.L	12[r10], r5
 511 0311 75 55 20                		cmp	#32, r5
 512 0314 2B 08                   		ble	.L43
 513                             	.L42:
 514                             		.loc 4 129 2 discriminator 9
 515 0316 FB 56 EE                		mov.L	#-18, r5
 516 0319 38 D1 00                		bra	.L41
 517                             	.L43:
 130:../kernel/tkernel/task_sync.c **** 	CHECK_NONSELF(tskid);
 518                             		.loc 4 130 2 is_stmt 1
 519 031c 39 FD FC                		bsr	_knl_isTaskIndependent
 520 031f EF 15                   		mov.L	r1, r5
 521 0321 61 05                   		cmp	#0, r5
 522 0323 21 24                   		bne	.L44
 523                             		.loc 4 130 2 is_stmt 0 discriminator 1
 524 0325 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 525 032b EC 55                   		mov.L	[r5], r5
 526 032d 61 05                   		cmp	#0, r5
 527 032f 20 18                   		beq	.L44
 528                             		.loc 4 130 2 discriminator 2
 529 0331 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 530 0337 EC 55                   		mov.L	[r5], r5
 531 0339 A8 D5                   		mov.L	8[r5], r5
 532 033b ED A4 03                		mov.L	12[r10], r4
 533 033e 47 54                   		cmp	r5, r4
 534 0340 1F                      		bne	.L44
 535                             		.loc 4 130 2 discriminator 3
 536 0341 FB 56 D7                		mov.L	#-41, r5
 537 0344 38 A6 00                		bra	.L41
 538                             	.L44:
 131:../kernel/tkernel/task_sync.c **** 
 132:../kernel/tkernel/task_sync.c **** 	tcb = get_tcb(tskid);
 539                             		.loc 4 132 8 is_stmt 1
 540 0347 ED A5 03                		mov.L	12[r10], r5
 541 034a 60 15                   		sub	#1, r5
 542                             		.loc 4 132 6
 543 034c 75 15 68                		mul	#0x68, r5
 544 034f 70 55 00 00 00 00       		add	#_knl_tcb_table, r5
 545 0355 E7 A5 01                		mov.L	r5, 4[r10]
 546                             	.LBB4:
 133:../kernel/tkernel/task_sync.c **** 
 134:../kernel/tkernel/task_sync.c **** 	BEGIN_CRITICAL_SECTION;
 547                             		.loc 4 134 2
 548 0358 05 00 00 00             		bsr	_disint
 549 035c E7 A1 02                		mov.L	r1, 8[r10]
 135:../kernel/tkernel/task_sync.c **** 	switch ( tcb->state ) {
 550                             		.loc 4 135 14
 551 035f ED A5 01                		mov.L	4[r10], r5
 552 0362 CD 55 27                		mov.B	39[r5], r5
 553 0365 5B 55                   		movu.B	r5, r5
 554                             		.loc 4 135 2
 555 0367 61 25                   		cmp	#2, r5
 556 0369 2A 0C                   		bgt	.L45
 557 036b 61 05                   		cmp	#0, r5
 558 036d 2A 1B                   		bgt	.L46
 559 036f 61 05                   		cmp	#0, r5
 560 0371 20 12                   		beq	.L47
 561 0373 2E 37                   		bra	.L48
 562                             	.L45:
 563 0375 61 65                   		cmp	#6, r5
 564 0377 20 25                   		beq	.L49
 565 0379 61 85                   		cmp	#8, r5
 566 037b 20 0D                   		beq	.L46
 567 037d 61 45                   		cmp	#4, r5
 568 037f 20 0E                   		beq	.L50
 569 0381 2E 29                   		bra	.L48
 570                             	.L47:
 136:../kernel/tkernel/task_sync.c **** 	  case TS_NONEXIST:
 137:../kernel/tkernel/task_sync.c **** 		ercd = E_NOEXS;
 571                             		.loc 4 137 8
 572 0383 F8 A6 D6                		mov.L	#-42, [r10]
 138:../kernel/tkernel/task_sync.c **** 		break;
 573                             		.loc 4 138 3
 574 0386 2E 28                   		bra	.L51
 575                             	.L46:
 139:../kernel/tkernel/task_sync.c **** 
 140:../kernel/tkernel/task_sync.c **** 	  case TS_DORMANT:
 141:../kernel/tkernel/task_sync.c **** 	  case TS_READY:
 142:../kernel/tkernel/task_sync.c **** 	  case TS_WAIT:
 143:../kernel/tkernel/task_sync.c **** 		ercd = E_OBJ;
 576                             		.loc 4 143 8
 577 0388 F8 A6 D7                		mov.L	#-41, [r10]
 144:../kernel/tkernel/task_sync.c **** 		break;
 578                             		.loc 4 144 3
 579 038b 2E 23                   		bra	.L51
 580                             	.L50:
 145:../kernel/tkernel/task_sync.c **** 
 146:../kernel/tkernel/task_sync.c **** 	  case TS_SUSPEND:
 147:../kernel/tkernel/task_sync.c **** 		tcb->suscnt = 0;
 581                             		.loc 4 147 15
 582 038d ED A5 01                		mov.L	4[r10], r5
 583 0390 3E 5E 00                		mov.L	#0, 56[r5]
 148:../kernel/tkernel/task_sync.c **** 		knl_make_ready(tcb);
 584                             		.loc 4 148 3
 585 0393 ED A1 01                		mov.L	4[r10], r1
 586 0396 05 00 00 00             		bsr	_knl_make_ready
 149:../kernel/tkernel/task_sync.c **** 		break;
 587                             		.loc 4 149 3
 588 039a 2E 14                   		bra	.L51
 589                             	.L49:
 150:../kernel/tkernel/task_sync.c **** 	  case TS_WAITSUS:
 151:../kernel/tkernel/task_sync.c **** 		tcb->suscnt = 0;
 590                             		.loc 4 151 15
 591 039c ED A5 01                		mov.L	4[r10], r5
 592 039f 3E 5E 00                		mov.L	#0, 56[r5]
 152:../kernel/tkernel/task_sync.c **** 		tcb->state = TS_WAIT;
 593                             		.loc 4 152 14
 594 03a2 ED A5 01                		mov.L	4[r10], r5
 595 03a5 F9 54 27 02             		mov.B	#2, 39[r5]
 153:../kernel/tkernel/task_sync.c **** 		break;
 596                             		.loc 4 153 3
 597 03a9 0D                      		bra	.L51
 598                             	.L48:
 154:../kernel/tkernel/task_sync.c **** 
 155:../kernel/tkernel/task_sync.c **** 	  default:
 156:../kernel/tkernel/task_sync.c **** 		ercd = E_SYS;
 599                             		.loc 4 156 8
 600 03aa F8 A6 FB                		mov.L	#-5, [r10]
 157:../kernel/tkernel/task_sync.c **** 		break;
 601                             		.loc 4 157 3
 602 03ad 03                      		nop
 603                             		.balign 8,3,1
 604                             	.L51:
 158:../kernel/tkernel/task_sync.c **** 	}
 159:../kernel/tkernel/task_sync.c **** 	END_CRITICAL_SECTION;
 605                             		.loc 4 159 2
 606 03ae ED A5 02                		mov.L	8[r10], r5
 607 03b1 61 F5                   		cmp	#15, r5
 608 03b3 20 2E                   		beq	.L52
 609                             		.loc 4 159 2 is_stmt 0 discriminator 1
 610 03b5 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 611 03bb EC 54                   		mov.L	[r5], r4
 612 03bd FB 52 00 00 00 00       		mov.L	#_knl_schedtsk, r5
 613 03c3 EC 55                   		mov.L	[r5], r5
 614 03c5 47 54                   		cmp	r5, r4
 615 03c7 20 1A                   		beq	.L52
 616                             		.loc 4 159 2 discriminator 3
 617 03c9 39 50 FC                		bsr	_knl_isTaskIndependent
 618 03cc EF 15                   		mov.L	r1, r5
 619 03ce 61 05                   		cmp	#0, r5
 620 03d0 21 11                   		bne	.L52
 621                             		.loc 4 159 2 discriminator 5
 622 03d2 FB 52 00 00 00 00       		mov.L	#_knl_dispatch_disabled, r5
 623 03d8 EC 55                   		mov.L	[r5], r5
 624 03da 61 05                   		cmp	#0, r5
 625 03dc 1D                      		bne	.L52
 626                             		.loc 4 159 2 discriminator 7
 627 03dd 05 00 00 00             		bsr	_knl_dispatch
 628                             		.balign 8,3,1
 629                             	.L52:
 630                             		.loc 4 159 2 discriminator 9
 631 03e1 ED A1 02                		mov.L	8[r10], r1
 632 03e4 05 00 00 00             		bsr	_setint
 633                             	.LBE4:
 160:../kernel/tkernel/task_sync.c **** 
 161:../kernel/tkernel/task_sync.c **** 	return ercd;
 634                             		.loc 4 161 9 is_stmt 1 discriminator 9
 635 03e8 EC A5                   		mov.L	[r10], r5
 636                             		.balign 8,3,1
 637                             	.L41:
 162:../kernel/tkernel/task_sync.c **** }
 638                             		.loc 4 162 1
 639 03ea EF 51                   		mov.L	r5, r1
 640 03ec 3F AA 05                		rtsd	#20, r10-r10
 641                             	.LFE36:
 643                             		.section C,"a",@progbits
 644                             		.p2align 2
 645                             		.balign 4
 648                             	_knl_wspec_slp:
 649 0000 01 00 00 00             		.long	1
 650 0004 00 00 00 00             		.long	0
 651 0008 00 00 00 00             		.long	0
 652                             		.section P,"ax"
 653                             		.global	_tk_slp_tsk
 655                             	_tk_slp_tsk:
 656                             	.LFB37:
 163:../kernel/tkernel/task_sync.c **** #endif /* USE_FUNC_TK_FRSM_TSK */
 164:../kernel/tkernel/task_sync.c **** 
 165:../kernel/tkernel/task_sync.c **** /* ------------------------------------------------------------------------ */
 166:../kernel/tkernel/task_sync.c **** 
 167:../kernel/tkernel/task_sync.c **** /*
 168:../kernel/tkernel/task_sync.c ****  * Definition of task wait specification
 169:../kernel/tkernel/task_sync.c ****  */
 170:../kernel/tkernel/task_sync.c **** LOCAL CONST WSPEC knl_wspec_slp = { TTW_SLP, NULL, NULL };
 171:../kernel/tkernel/task_sync.c **** 
 172:../kernel/tkernel/task_sync.c **** #ifdef USE_FUNC_TK_SLP_TSK
 173:../kernel/tkernel/task_sync.c **** /*
 174:../kernel/tkernel/task_sync.c ****  * Move its own task state to wait state
 175:../kernel/tkernel/task_sync.c ****  */
 176:../kernel/tkernel/task_sync.c **** SYSCALL ER tk_slp_tsk( TMO tmout )
 177:../kernel/tkernel/task_sync.c **** {
 657                             		.loc 4 177 1
 658 03ef 7E AA                   		push.l	r10
 659                             	.LCFI12:
 660 03f1 71 0A F4                		add	#-12, r0, r10
 661                             	.LCFI13:
 662 03f4 EF A0                   		mov.L	r10, r0
 663 03f6 E7 A1 02                		mov.L	r1, 8[r10]
 178:../kernel/tkernel/task_sync.c **** 	ER	ercd = E_OK;
 664                             		.loc 4 178 5
 665 03f9 F9 A6 01 00             		mov.L	#0, 4[r10]
 179:../kernel/tkernel/task_sync.c **** 
 180:../kernel/tkernel/task_sync.c **** 	CHECK_TMOUT(tmout);
 666                             		.loc 4 180 2
 667 03fd ED A5 02                		mov.L	8[r10], r5
 668 0400 75 05 FF                		cmp	#-1, r5
 669 0403 28 08                   		bge	.L54
 670                             		.loc 4 180 2 is_stmt 0 discriminator 1
 671 0405 FB 56 EF                		mov.L	#-17, r5
 672 0408 38 DD 00                		bra	.L61
 673                             	.L54:
 181:../kernel/tkernel/task_sync.c **** 	CHECK_DISPATCH();
 674                             		.loc 4 181 2 is_stmt 1
 675 040b FB 52 00 00 00 00       		mov.L	#_knl_dispatch_disabled, r5
 676 0411 EC 55                   		mov.L	[r5], r5
 677 0413 61 05                   		cmp	#0, r5
 678 0415 21 23                   		bne	.L56
 679                             		.loc 4 181 2 is_stmt 0 discriminator 2
 680 0417 39 02 FC                		bsr	_knl_isTaskIndependent
 681 041a EF 15                   		mov.L	r1, r5
 682 041c 61 05                   		cmp	#0, r5
 683 041e 21 1A                   		bne	.L56
 684                             		.loc 4 181 2 discriminator 4
 685 0420 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 686 0426 EC 55                   		mov.L	[r5], r5
 687 0428 61 05                   		cmp	#0, r5
 688 042a 20 0E                   		beq	.L56
 689                             		.loc 4 181 2 discriminator 6
 690 042c 05 00 00 00             		bsr	_GetCpuIntLevel
 691 0430 EF 15                   		mov.L	r1, r5
 692 0432 75 55 10                		cmp	#16, r5
 693 0435 19                      		bne	.L57
 694 0436 EF 00                   		.balign 8,3,2
 695                             	.L56:
 696                             		.loc 4 181 2 discriminator 7
 697 0438 FB 56 E7                		mov.L	#-25, r5
 698 043b 38 AA 00                		bra	.L61
 699                             	.L57:
 700                             	.LBB5:
 182:../kernel/tkernel/task_sync.c **** 
 183:../kernel/tkernel/task_sync.c **** 	BEGIN_CRITICAL_SECTION;
 701                             		.loc 4 183 2 is_stmt 1
 702 043e 05 00 00 00             		bsr	_disint
 703 0442 E3 A1                   		mov.L	r1, [r10]
 184:../kernel/tkernel/task_sync.c **** 
 185:../kernel/tkernel/task_sync.c **** 	if ( knl_ctxtsk->wupcnt > 0 ) {
 704                             		.loc 4 185 17
 705 0444 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 706 044a EC 55                   		mov.L	[r5], r5
 707 044c AB 5D                   		mov.L	52[r5], r5
 708                             		.loc 4 185 5
 709 044e 61 05                   		cmp	#0, r5
 710 0450 2B 12                   		ble	.L58
 186:../kernel/tkernel/task_sync.c **** 		knl_ctxtsk->wupcnt--;
 711                             		.loc 4 186 13
 712 0452 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 713 0458 EC 55                   		mov.L	[r5], r5
 714 045a AB 5C                   		mov.L	52[r5], r4
 715                             		.loc 4 186 21
 716 045c 60 14                   		sub	#1, r4
 717 045e A3 5C                   		mov.L	r4, 52[r5]
 718 0460 2E 4A                   		bra	.L59
 719                             	.L58:
 187:../kernel/tkernel/task_sync.c **** 	} else {
 188:../kernel/tkernel/task_sync.c **** 		ercd = E_TMOUT;
 720                             		.loc 4 188 8
 721 0462 F9 A6 01 CE             		mov.L	#-50, 4[r10]
 189:../kernel/tkernel/task_sync.c **** 		if ( tmout != TMO_POL ) {
 722                             		.loc 4 189 6
 723 0466 ED A5 02                		mov.L	8[r10], r5
 724 0469 61 05                   		cmp	#0, r5
 725 046b 20 3F                   		beq	.L59
 190:../kernel/tkernel/task_sync.c **** 			knl_ctxtsk->wspec = &knl_wspec_slp;
 726                             		.loc 4 190 14
 727 046d FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 728 0473 EC 55                   		mov.L	[r5], r5
 729                             		.loc 4 190 22
 730 0475 F9 52 0B 00 00 00 00    		mov.L	#_knl_wspec_slp, 44[r5]
 191:../kernel/tkernel/task_sync.c **** 			knl_ctxtsk->wid = 0;
 731                             		.loc 4 191 14
 732 047c FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 733 0482 EC 55                   		mov.L	[r5], r5
 734                             		.loc 4 191 20
 735 0484 3E 5C 00                		mov.L	#0, 48[r5]
 192:../kernel/tkernel/task_sync.c **** 			knl_ctxtsk->wercd = &ercd;
 736                             		.loc 4 192 14
 737 0487 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 738 048d EC 55                   		mov.L	[r5], r5
 739                             		.loc 4 192 22
 740 048f 71 A4 04                		add	#4, r10, r4
 741 0492 A3 DC                   		mov.L	r4, 60[r5]
 193:../kernel/tkernel/task_sync.c **** 			knl_make_wait(tmout, TA_NULL);
 742                             		.loc 4 193 4
 743 0494 66 02                   		mov.L	#0, r2
 744 0496 ED A1 02                		mov.L	8[r10], r1
 745 0499 05 00 00 00             		bsr	_knl_make_wait
 194:../kernel/tkernel/task_sync.c **** 			QueInit(&knl_ctxtsk->tskque);
 746                             		.loc 4 194 23
 747 049d FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 748 04a3 EC 55                   		mov.L	[r5], r5
 749                             		.loc 4 194 4
 750 04a5 EF 51                   		mov.L	r5, r1
 751 04a7 39 59 FB                		bsr	_QueInit
 752                             	.L59:
 195:../kernel/tkernel/task_sync.c **** 		}
 196:../kernel/tkernel/task_sync.c **** 	}
 197:../kernel/tkernel/task_sync.c **** 
 198:../kernel/tkernel/task_sync.c **** 	END_CRITICAL_SECTION;
 753                             		.loc 4 198 2
 754 04aa EC A5                   		mov.L	[r10], r5
 755 04ac 61 F5                   		cmp	#15, r5
 756 04ae 20 2E                   		beq	.L60
 757                             		.loc 4 198 2 is_stmt 0 discriminator 1
 758 04b0 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 759 04b6 EC 54                   		mov.L	[r5], r4
 760 04b8 FB 52 00 00 00 00       		mov.L	#_knl_schedtsk, r5
 761 04be EC 55                   		mov.L	[r5], r5
 762 04c0 47 54                   		cmp	r5, r4
 763 04c2 20 1A                   		beq	.L60
 764                             		.loc 4 198 2 discriminator 3
 765 04c4 39 55 FB                		bsr	_knl_isTaskIndependent
 766 04c7 EF 15                   		mov.L	r1, r5
 767 04c9 61 05                   		cmp	#0, r5
 768 04cb 21 11                   		bne	.L60
 769                             		.loc 4 198 2 discriminator 5
 770 04cd FB 52 00 00 00 00       		mov.L	#_knl_dispatch_disabled, r5
 771 04d3 EC 55                   		mov.L	[r5], r5
 772 04d5 61 05                   		cmp	#0, r5
 773 04d7 1D                      		bne	.L60
 774                             		.loc 4 198 2 discriminator 7
 775 04d8 05 00 00 00             		bsr	_knl_dispatch
 776                             		.balign 8,3,1
 777                             	.L60:
 778                             		.loc 4 198 2 discriminator 9
 779 04dc EC A1                   		mov.L	[r10], r1
 780 04de 05 00 00 00             		bsr	_setint
 781                             	.LBE5:
 199:../kernel/tkernel/task_sync.c **** 
 200:../kernel/tkernel/task_sync.c **** 	return ercd;
 782                             		.loc 4 200 9 is_stmt 1 discriminator 9
 783 04e2 ED A5 01                		mov.L	4[r10], r5
 784                             	.L61:
 201:../kernel/tkernel/task_sync.c **** }
 785                             		.loc 4 201 1 discriminator 1
 786 04e5 EF 51                   		mov.L	r5, r1
 787 04e7 3F AA 04                		rtsd	#16, r10-r10
 788                             	.LFE37:
 790                             		.global	_tk_wup_tsk
 792                             	_tk_wup_tsk:
 793                             	.LFB38:
 202:../kernel/tkernel/task_sync.c **** #endif /* USE_FUNC_TK_SLP_TSK */
 203:../kernel/tkernel/task_sync.c **** 
 204:../kernel/tkernel/task_sync.c **** #ifdef USE_FUNC_TK_WUP_TSK
 205:../kernel/tkernel/task_sync.c **** /*
 206:../kernel/tkernel/task_sync.c ****  * Wakeup task
 207:../kernel/tkernel/task_sync.c ****  */
 208:../kernel/tkernel/task_sync.c **** SYSCALL ER tk_wup_tsk( ID tskid )
 209:../kernel/tkernel/task_sync.c **** {
 794                             		.loc 4 209 1
 795 04ea 7E AA                   		push.l	r10
 796                             	.LCFI14:
 797 04ec 71 0A EC                		add	#-20, r0, r10
 798                             	.LCFI15:
 799 04ef EF A0                   		mov.L	r10, r0
 800 04f1 E7 A1 04                		mov.L	r1, 16[r10]
 210:../kernel/tkernel/task_sync.c **** 	TCB	*tcb;
 211:../kernel/tkernel/task_sync.c **** 	TSTAT	state;
 212:../kernel/tkernel/task_sync.c **** 	ER	ercd = E_OK;
 801                             		.loc 4 212 5
 802 04f4 F8 A6 00                		mov.L	#0, [r10]
 213:../kernel/tkernel/task_sync.c **** 
 214:../kernel/tkernel/task_sync.c **** 	CHECK_TSKID(tskid);
 803                             		.loc 4 214 2
 804 04f7 39 22 FB                		bsr	_knl_isTaskIndependent
 805 04fa EF 15                   		mov.L	r1, r5
 806 04fc 61 05                   		cmp	#0, r5
 807 04fe 21 1A                   		bne	.L63
 808                             		.loc 4 214 2 is_stmt 0 discriminator 1
 809 0500 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 810 0506 EC 55                   		mov.L	[r5], r5
 811 0508 61 05                   		cmp	#0, r5
 812 050a 20 0E                   		beq	.L63
 813                             		.loc 4 214 2 discriminator 3
 814 050c ED A5 04                		mov.L	16[r10], r5
 815 050f 61 05                   		cmp	#0, r5
 816 0511 1F                      		bne	.L63
 817                             		.loc 4 214 2 discriminator 5
 818 0512 FB 56 D7                		mov.L	#-41, r5
 819 0515 38 FC 00                		bra	.L64
 820                             	.L63:
 821                             		.loc 4 214 2 discriminator 6
 822 0518 ED A5 04                		mov.L	16[r10], r5
 823 051b 61 05                   		cmp	#0, r5
 824 051d 2B 0A                   		ble	.L65
 825                             		.loc 4 214 2 discriminator 8
 826 051f ED A5 04                		mov.L	16[r10], r5
 827 0522 75 55 20                		cmp	#32, r5
 828 0525 2B 08                   		ble	.L66
 829                             	.L65:
 830                             		.loc 4 214 2 discriminator 9
 831 0527 FB 56 EE                		mov.L	#-18, r5
 832 052a 38 E7 00                		bra	.L64
 833                             	.L66:
 215:../kernel/tkernel/task_sync.c **** 	CHECK_NONSELF(tskid);
 834                             		.loc 4 215 2 is_stmt 1
 835 052d 39 EC FA                		bsr	_knl_isTaskIndependent
 836 0530 EF 15                   		mov.L	r1, r5
 837 0532 61 05                   		cmp	#0, r5
 838 0534 21 24                   		bne	.L67
 839                             		.loc 4 215 2 is_stmt 0 discriminator 1
 840 0536 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 841 053c EC 55                   		mov.L	[r5], r5
 842 053e 61 05                   		cmp	#0, r5
 843 0540 20 18                   		beq	.L67
 844                             		.loc 4 215 2 discriminator 2
 845 0542 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 846 0548 EC 55                   		mov.L	[r5], r5
 847 054a A8 D5                   		mov.L	8[r5], r5
 848 054c ED A4 04                		mov.L	16[r10], r4
 849 054f 47 54                   		cmp	r5, r4
 850 0551 1F                      		bne	.L67
 851                             		.loc 4 215 2 discriminator 3
 852 0552 FB 56 D7                		mov.L	#-41, r5
 853 0555 38 BC 00                		bra	.L64
 854                             	.L67:
 216:../kernel/tkernel/task_sync.c **** 
 217:../kernel/tkernel/task_sync.c **** 	tcb = get_tcb(tskid);
 855                             		.loc 4 217 8 is_stmt 1
 856 0558 ED A5 04                		mov.L	16[r10], r5
 857 055b 60 15                   		sub	#1, r5
 858                             		.loc 4 217 6
 859 055d 75 15 68                		mul	#0x68, r5
 860 0560 70 55 00 00 00 00       		add	#_knl_tcb_table, r5
 861 0566 E7 A5 01                		mov.L	r5, 4[r10]
 862                             	.LBB6:
 218:../kernel/tkernel/task_sync.c **** 
 219:../kernel/tkernel/task_sync.c **** 	BEGIN_CRITICAL_SECTION;
 863                             		.loc 4 219 2
 864 0569 05 00 00 00             		bsr	_disint
 865 056d E7 A1 02                		mov.L	r1, 8[r10]
 220:../kernel/tkernel/task_sync.c **** 	state = (TSTAT)tcb->state;
 866                             		.loc 4 220 20
 867 0570 ED A5 01                		mov.L	4[r10], r5
 868 0573 CD 55 27                		mov.B	39[r5], r5
 869                             		.loc 4 220 8
 870 0576 5B 55                   		movu.B	r5, r5
 871 0578 E7 A5 03                		mov.L	r5, 12[r10]
 221:../kernel/tkernel/task_sync.c **** 	if ( !knl_task_alive(state) ) {
 872                             		.loc 4 221 8
 873 057b ED A1 03                		mov.L	12[r10], r1
 874 057e 39 B3 FA                		bsr	_knl_task_alive
 875 0581 EF 15                   		mov.L	r1, r5
 876                             		.loc 4 221 5
 877 0583 61 05                   		cmp	#0, r5
 878 0585 21 13                   		bne	.L68
 222:../kernel/tkernel/task_sync.c **** 		ercd = ( state == TS_NONEXIST )? E_NOEXS: E_OBJ;
 879                             		.loc 4 222 43
 880 0587 ED A5 03                		mov.L	12[r10], r5
 881 058a 61 05                   		cmp	#0, r5
 882 058c 1D                      		bne	.L69
 883                             		.loc 4 222 43 is_stmt 0 discriminator 1
 884 058d FB 56 D6                		mov.L	#-42, r5
 885 0590 0C                      		bra	.L70
 886                             	.L69:
 887                             		.loc 4 222 43 discriminator 2
 888 0591 FB 56 D7                		mov.L	#-41, r5
 889                             	.L70:
 890                             		.loc 4 222 8 is_stmt 1 discriminator 4
 891 0594 E3 A5                   		mov.L	r5, [r10]
 892 0596 2E 3E                   		bra	.L71
 893                             	.L68:
 223:../kernel/tkernel/task_sync.c **** 
 224:../kernel/tkernel/task_sync.c **** 	} else if ( (state & TS_WAIT) != 0 && tcb->wspec == &knl_wspec_slp ) {
 894                             		.loc 4 224 21
 895 0598 ED A5 03                		mov.L	12[r10], r5
 896 059b 64 25                   		and	#2, r5
 897                             		.loc 4 224 12
 898 059d 61 05                   		cmp	#0, r5
 899 059f 20 17                   		beq	.L72
 900                             		.loc 4 224 43 discriminator 1
 901 05a1 ED A5 01                		mov.L	4[r10], r5
 902 05a4 AA DD                   		mov.L	44[r5], r5
 903                             		.loc 4 224 37 discriminator 1
 904 05a6 74 05 00 00 00 00       		cmp	#_knl_wspec_slp, r5
 905 05ac 1A                      		bne	.L72
 225:../kernel/tkernel/task_sync.c **** 		knl_wait_release_ok(tcb);
 906                             		.loc 4 225 3
 907 05ad ED A1 01                		mov.L	4[r10], r1
 908 05b0 05 00 00 00             		bsr	_knl_wait_release_ok
 909 05b4 2E 20                   		bra	.L71
 910                             	.L72:
 226:../kernel/tkernel/task_sync.c **** 
 227:../kernel/tkernel/task_sync.c **** 	} else if ( tcb->wupcnt == INT_MAX ) {
 911                             		.loc 4 227 17
 912 05b6 ED A5 01                		mov.L	4[r10], r5
 913 05b9 AB 5D                   		mov.L	52[r5], r5
 914                             		.loc 4 227 12
 915 05bb 74 05 FF FF FF 7F       		cmp	#0x7fffffff, r5
 916 05c1 1E                      		bne	.L73
 228:../kernel/tkernel/task_sync.c **** 		ercd = E_QOVR;
 917                             		.loc 4 228 8
 918 05c2 F8 A6 D5                		mov.L	#-43, [r10]
 919 05c5 2E 0F                   		bra	.L71
 920                             	.L73:
 229:../kernel/tkernel/task_sync.c **** 	} else {
 230:../kernel/tkernel/task_sync.c **** 		++tcb->wupcnt;
 921                             		.loc 4 230 8
 922 05c7 ED A5 01                		mov.L	4[r10], r5
 923 05ca AB 5D                   		mov.L	52[r5], r5
 924                             		.loc 4 230 3
 925 05cc 71 54 01                		add	#1, r5, r4
 926 05cf ED A5 01                		mov.L	4[r10], r5
 927 05d2 A3 5C                   		mov.L	r4, 52[r5]
 928                             		.balign 8,3,1
 929                             	.L71:
 231:../kernel/tkernel/task_sync.c **** 	}
 232:../kernel/tkernel/task_sync.c **** 	END_CRITICAL_SECTION;
 930                             		.loc 4 232 2
 931 05d4 ED A5 02                		mov.L	8[r10], r5
 932 05d7 61 F5                   		cmp	#15, r5
 933 05d9 20 2F                   		beq	.L74
 934                             		.loc 4 232 2 is_stmt 0 discriminator 1
 935 05db FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 936 05e1 EC 54                   		mov.L	[r5], r4
 937 05e3 FB 52 00 00 00 00       		mov.L	#_knl_schedtsk, r5
 938 05e9 EC 55                   		mov.L	[r5], r5
 939 05eb 47 54                   		cmp	r5, r4
 940 05ed 20 1B                   		beq	.L74
 941                             		.loc 4 232 2 discriminator 3
 942 05ef 39 2A FA                		bsr	_knl_isTaskIndependent
 943 05f2 EF 15                   		mov.L	r1, r5
 944 05f4 61 05                   		cmp	#0, r5
 945 05f6 21 12                   		bne	.L74
 946                             		.loc 4 232 2 discriminator 5
 947 05f8 FB 52 00 00 00 00       		mov.L	#_knl_dispatch_disabled, r5
 948 05fe EC 55                   		mov.L	[r5], r5
 949 0600 61 05                   		cmp	#0, r5
 950 0602 1E                      		bne	.L74
 951                             		.loc 4 232 2 discriminator 7
 952 0603 05 00 00 00             		bsr	_knl_dispatch
 953 0607 03                      		.balign 8,3,1
 954                             	.L74:
 955                             		.loc 4 232 2 discriminator 9
 956 0608 ED A1 02                		mov.L	8[r10], r1
 957 060b 05 00 00 00             		bsr	_setint
 958                             	.LBE6:
 233:../kernel/tkernel/task_sync.c **** 
 234:../kernel/tkernel/task_sync.c **** 	return ercd;
 959                             		.loc 4 234 9 is_stmt 1 discriminator 9
 960 060f EC A5                   		mov.L	[r10], r5
 961                             		.balign 8,3,1
 962                             	.L64:
 235:../kernel/tkernel/task_sync.c **** }
 963                             		.loc 4 235 1
 964 0611 EF 51                   		mov.L	r5, r1
 965 0613 3F AA 06                		rtsd	#24, r10-r10
 966                             	.LFE38:
 968                             		.global	_tk_can_wup
 970                             	_tk_can_wup:
 971                             	.LFB39:
 236:../kernel/tkernel/task_sync.c **** #endif /* USE_FUNC_TK_WUP_TSK */
 237:../kernel/tkernel/task_sync.c **** 
 238:../kernel/tkernel/task_sync.c **** #ifdef USE_FUNC_TK_CAN_WUP
 239:../kernel/tkernel/task_sync.c **** /*
 240:../kernel/tkernel/task_sync.c ****  * Cancel wakeup request
 241:../kernel/tkernel/task_sync.c ****  */
 242:../kernel/tkernel/task_sync.c **** SYSCALL INT tk_can_wup( ID tskid )
 243:../kernel/tkernel/task_sync.c **** {
 972                             		.loc 4 243 1
 973 0616 7E AA                   		push.l	r10
 974                             	.LCFI16:
 975 0618 71 0A F0                		add	#-16, r0, r10
 976                             	.LCFI17:
 977 061b EF A0                   		mov.L	r10, r0
 978 061d E7 A1 03                		mov.L	r1, 12[r10]
 244:../kernel/tkernel/task_sync.c **** 	TCB	*tcb;
 245:../kernel/tkernel/task_sync.c **** 	ER	ercd = E_OK;
 979                             		.loc 4 245 5
 980 0620 F8 A6 00                		mov.L	#0, [r10]
 246:../kernel/tkernel/task_sync.c **** 
 247:../kernel/tkernel/task_sync.c **** 	CHECK_TSKID_SELF(tskid);
 981                             		.loc 4 247 2
 982 0623 39 F6 F9                		bsr	_knl_isTaskIndependent
 983 0626 EF 15                   		mov.L	r1, r5
 984 0628 61 05                   		cmp	#0, r5
 985 062a 21 14                   		bne	.L76
 986                             		.loc 4 247 2 is_stmt 0 discriminator 2
 987 062c FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 988 0632 EC 55                   		mov.L	[r5], r5
 989 0634 61 05                   		cmp	#0, r5
 990 0636 10                      		beq	.L76
 991                             		.loc 4 247 2 discriminator 4
 992 0637 ED A5 03                		mov.L	12[r10], r5
 993 063a 61 05                   		cmp	#0, r5
 994 063c 20 17                   		beq	.L77
 995                             	.L76:
 996                             		.loc 4 247 2 discriminator 5
 997 063e ED A5 03                		mov.L	12[r10], r5
 998 0641 61 05                   		cmp	#0, r5
 999 0643 2B 0A                   		ble	.L78
 1000                             		.loc 4 247 2 discriminator 7
 1001 0645 ED A5 03                		mov.L	12[r10], r5
 1002 0648 75 55 20                		cmp	#32, r5
 1003 064b 2B 08                   		ble	.L77
 1004                             	.L78:
 1005                             		.loc 4 247 2 discriminator 8
 1006 064d FB 56 EE                		mov.L	#-18, r5
 1007 0650 38 8E 00                		bra	.L79
 1008                             	.L77:
 248:../kernel/tkernel/task_sync.c **** 
 249:../kernel/tkernel/task_sync.c **** 	tcb = get_tcb_self(tskid);
 1009                             		.loc 4 249 8 is_stmt 1
 1010 0653 ED A5 03                		mov.L	12[r10], r5
 1011 0656 61 05                   		cmp	#0, r5
 1012 0658 20 11                   		beq	.L80
 1013                             		.loc 4 249 8 is_stmt 0 discriminator 1
 1014 065a ED A5 03                		mov.L	12[r10], r5
 1015 065d 60 15                   		sub	#1, r5
 1016 065f 75 15 68                		mul	#0x68, r5
 1017 0662 70 55 00 00 00 00       		add	#_knl_tcb_table, r5
 1018 0668 09                      		bra	.L81
 1019                             	.L80:
 1020                             		.loc 4 249 8 discriminator 2
 1021 0669 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 1022 066f EC 55                   		mov.L	[r5], r5
 1023                             	.L81:
 1024                             		.loc 4 249 6 is_stmt 1 discriminator 4
 1025 0671 E7 A5 01                		mov.L	r5, 4[r10]
 1026                             	.LBB7:
 250:../kernel/tkernel/task_sync.c **** 
 251:../kernel/tkernel/task_sync.c **** 	BEGIN_CRITICAL_SECTION;
 1027                             		.loc 4 251 2 discriminator 4
 1028 0674 05 00 00 00             		bsr	_disint
 1029 0678 E7 A1 02                		mov.L	r1, 8[r10]
 252:../kernel/tkernel/task_sync.c **** 	switch ( tcb->state ) {
 1030                             		.loc 4 252 14 discriminator 4
 1031 067b ED A5 01                		mov.L	4[r10], r5
 1032 067e CD 55 27                		mov.B	39[r5], r5
 1033 0681 5B 55                   		movu.B	r5, r5
 1034                             		.loc 4 252 2 discriminator 4
 1035 0683 61 05                   		cmp	#0, r5
 1036 0685 16                      		beq	.L82
 1037                             		.loc 4 252 2 is_stmt 0
 1038 0686 61 85                   		cmp	#8, r5
 1039 0688 10                      		beq	.L83
 1040 0689 2E 0C                   		bra	.L87
 1041                             	.L82:
 253:../kernel/tkernel/task_sync.c **** 	  case TS_NONEXIST:
 254:../kernel/tkernel/task_sync.c **** 		ercd = E_NOEXS;
 1042                             		.loc 4 254 8 is_stmt 1
 1043 068b F8 A6 D6                		mov.L	#-42, [r10]
 255:../kernel/tkernel/task_sync.c **** 		break;
 1044                             		.loc 4 255 3
 1045 068e 2E 14                   		bra	.L85
 1046                             	.L83:
 256:../kernel/tkernel/task_sync.c **** 	  case TS_DORMANT:
 257:../kernel/tkernel/task_sync.c **** 		ercd = E_OBJ;
 1047                             		.loc 4 257 8
 1048 0690 F8 A6 D7                		mov.L	#-41, [r10]
 258:../kernel/tkernel/task_sync.c **** 		break;
 1049                             		.loc 4 258 3
 1050 0693 2E 0F                   		bra	.L85
 1051                             	.L87:
 259:../kernel/tkernel/task_sync.c **** 
 260:../kernel/tkernel/task_sync.c **** 	  default:
 261:../kernel/tkernel/task_sync.c **** 		ercd = tcb->wupcnt;
 1052                             		.loc 4 261 8
 1053 0695 ED A5 01                		mov.L	4[r10], r5
 1054 0698 AB 5D                   		mov.L	52[r5], r5
 1055 069a E3 A5                   		mov.L	r5, [r10]
 262:../kernel/tkernel/task_sync.c **** 		tcb->wupcnt = 0;
 1056                             		.loc 4 262 15
 1057 069c ED A5 01                		mov.L	4[r10], r5
 1058 069f 3E 5D 00                		mov.L	#0, 52[r5]
 1059                             	.L85:
 263:../kernel/tkernel/task_sync.c **** 	}
 264:../kernel/tkernel/task_sync.c **** 	END_CRITICAL_SECTION;
 1060                             		.loc 4 264 2
 1061 06a2 ED A5 02                		mov.L	8[r10], r5
 1062 06a5 61 F5                   		cmp	#15, r5
 1063 06a7 20 2E                   		beq	.L86
 1064                             		.loc 4 264 2 is_stmt 0 discriminator 1
 1065 06a9 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 1066 06af EC 54                   		mov.L	[r5], r4
 1067 06b1 FB 52 00 00 00 00       		mov.L	#_knl_schedtsk, r5
 1068 06b7 EC 55                   		mov.L	[r5], r5
 1069 06b9 47 54                   		cmp	r5, r4
 1070 06bb 20 1A                   		beq	.L86
 1071                             		.loc 4 264 2 discriminator 3
 1072 06bd 39 5C F9                		bsr	_knl_isTaskIndependent
 1073 06c0 EF 15                   		mov.L	r1, r5
 1074 06c2 61 05                   		cmp	#0, r5
 1075 06c4 21 11                   		bne	.L86
 1076                             		.loc 4 264 2 discriminator 5
 1077 06c6 FB 52 00 00 00 00       		mov.L	#_knl_dispatch_disabled, r5
 1078 06cc EC 55                   		mov.L	[r5], r5
 1079 06ce 61 05                   		cmp	#0, r5
 1080 06d0 1D                      		bne	.L86
 1081                             		.loc 4 264 2 discriminator 7
 1082 06d1 05 00 00 00             		bsr	_knl_dispatch
 1083                             		.balign 8,3,1
 1084                             	.L86:
 1085                             		.loc 4 264 2 discriminator 9
 1086 06d5 ED A1 02                		mov.L	8[r10], r1
 1087 06d8 05 00 00 00             		bsr	_setint
 1088                             	.LBE7:
 265:../kernel/tkernel/task_sync.c **** 
 266:../kernel/tkernel/task_sync.c **** 	return ercd;
 1089                             		.loc 4 266 9 is_stmt 1 discriminator 9
 1090 06dc EC A5                   		mov.L	[r10], r5
 1091                             	.L79:
 267:../kernel/tkernel/task_sync.c **** }
 1092                             		.loc 4 267 1
 1093 06de EF 51                   		mov.L	r5, r1
 1094 06e0 3F AA 05                		rtsd	#20, r10-r10
 1095                             	.LFE39:
 1097                             		.section C,"a",@progbits
 1098                             		.p2align 2
 1099                             		.balign 4
 1102                             	_knl_wspec_dly:
 1103 000c 02 00 00 00             		.long	2
 1104 0010 00 00 00 00             		.long	0
 1105 0014 00 00 00 00             		.long	0
 1106                             		.section P,"ax"
 1107                             		.global	_tk_dly_tsk
 1109                             	_tk_dly_tsk:
 1110                             	.LFB40:
 268:../kernel/tkernel/task_sync.c **** #endif /* USE_FUNC_TK_CAN_WUP */
 269:../kernel/tkernel/task_sync.c **** 
 270:../kernel/tkernel/task_sync.c **** #ifdef USE_FUNC_TK_DLY_TSK
 271:../kernel/tkernel/task_sync.c **** /*
 272:../kernel/tkernel/task_sync.c ****  * Definition of task delay wait specification
 273:../kernel/tkernel/task_sync.c ****  */
 274:../kernel/tkernel/task_sync.c **** LOCAL CONST WSPEC knl_wspec_dly = { TTW_DLY, NULL, NULL };
 275:../kernel/tkernel/task_sync.c **** 
 276:../kernel/tkernel/task_sync.c **** /*
 277:../kernel/tkernel/task_sync.c ****  * Task delay
 278:../kernel/tkernel/task_sync.c ****  */
 279:../kernel/tkernel/task_sync.c **** SYSCALL ER tk_dly_tsk( RELTIM dlytim )
 280:../kernel/tkernel/task_sync.c **** {
 1111                             		.loc 4 280 1
 1112 06e3 7E AA                   		push.l	r10
 1113                             	.LCFI18:
 1114 06e5 71 0A F4                		add	#-12, r0, r10
 1115                             	.LCFI19:
 1116 06e8 EF A0                   		mov.L	r10, r0
 1117 06ea E7 A1 02                		mov.L	r1, 8[r10]
 281:../kernel/tkernel/task_sync.c **** 	ER	ercd = E_OK;
 1118                             		.loc 4 281 5
 1119 06ed F9 A6 01 00             		mov.L	#0, 4[r10]
 282:../kernel/tkernel/task_sync.c **** 
 283:../kernel/tkernel/task_sync.c **** 	CHECK_RELTIM(dlytim);
 1120                             		.loc 4 283 2
 1121 06f1 ED A5 02                		mov.L	8[r10], r5
 1122 06f4 61 05                   		cmp	#0, r5
 1123 06f6 28 08                   		bge	.L89
 1124                             		.loc 4 283 2 is_stmt 0 discriminator 1
 1125 06f8 FB 56 EF                		mov.L	#-17, r5
 1126 06fb 38 B9 00                		bra	.L95
 1127                             	.L89:
 284:../kernel/tkernel/task_sync.c **** 
 285:../kernel/tkernel/task_sync.c **** 	CHECK_DISPATCH();
 1128                             		.loc 4 285 2 is_stmt 1
 1129 06fe FB 52 00 00 00 00       		mov.L	#_knl_dispatch_disabled, r5
 1130 0704 EC 55                   		mov.L	[r5], r5
 1131 0706 61 05                   		cmp	#0, r5
 1132 0708 21 21                   		bne	.L91
 1133                             		.loc 4 285 2 is_stmt 0 discriminator 2
 1134 070a 39 0F F9                		bsr	_knl_isTaskIndependent
 1135 070d EF 15                   		mov.L	r1, r5
 1136 070f 61 05                   		cmp	#0, r5
 1137 0711 21 18                   		bne	.L91
 1138                             		.loc 4 285 2 discriminator 4
 1139 0713 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 1140 0719 EC 55                   		mov.L	[r5], r5
 1141 071b 61 05                   		cmp	#0, r5
 1142 071d 20 0C                   		beq	.L91
 1143                             		.loc 4 285 2 discriminator 6
 1144 071f 05 00 00 00             		bsr	_GetCpuIntLevel
 1145 0723 EF 15                   		mov.L	r1, r5
 1146 0725 75 55 10                		cmp	#16, r5
 1147 0728 1F                      		bne	.L92
 1148                             		.balign 8,3,2
 1149                             	.L91:
 1150                             		.loc 4 285 2 discriminator 7
 1151 0729 FB 56 E7                		mov.L	#-25, r5
 1152 072c 38 88 00                		bra	.L95
 1153                             	.L92:
 286:../kernel/tkernel/task_sync.c **** 
 287:../kernel/tkernel/task_sync.c **** 	if ( dlytim > 0 ) {
 1154                             		.loc 4 287 5 is_stmt 1
 1155 072f ED A5 02                		mov.L	8[r10], r5
 1156 0732 61 05                   		cmp	#0, r5
 1157 0734 20 7D                   		beq	.L93
 1158                             	.LBB8:
 288:../kernel/tkernel/task_sync.c **** 		BEGIN_CRITICAL_SECTION;
 1159                             		.loc 4 288 3
 1160 0736 05 00 00 00             		bsr	_disint
 1161 073a E3 A1                   		mov.L	r1, [r10]
 289:../kernel/tkernel/task_sync.c **** 		knl_ctxtsk->wspec = &knl_wspec_dly;
 1162                             		.loc 4 289 13
 1163 073c FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 1164 0742 EC 55                   		mov.L	[r5], r5
 1165                             		.loc 4 289 21
 1166 0744 F9 52 0B 0C 00 00 00    		mov.L	#_knl_wspec_dly, 44[r5]
 290:../kernel/tkernel/task_sync.c **** 		knl_ctxtsk->wid = 0;
 1167                             		.loc 4 290 13
 1168 074b FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 1169 0751 EC 55                   		mov.L	[r5], r5
 1170                             		.loc 4 290 19
 1171 0753 3E 5C 00                		mov.L	#0, 48[r5]
 291:../kernel/tkernel/task_sync.c **** 		knl_ctxtsk->wercd = &ercd;
 1172                             		.loc 4 291 13
 1173 0756 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 1174 075c EC 55                   		mov.L	[r5], r5
 1175                             		.loc 4 291 21
 1176 075e 71 A4 04                		add	#4, r10, r4
 1177 0761 A3 DC                   		mov.L	r4, 60[r5]
 292:../kernel/tkernel/task_sync.c **** 		knl_make_wait_reltim(dlytim, TA_NULL);
 1178                             		.loc 4 292 3
 1179 0763 66 02                   		mov.L	#0, r2
 1180 0765 ED A1 02                		mov.L	8[r10], r1
 1181 0768 05 00 00 00             		bsr	_knl_make_wait_reltim
 293:../kernel/tkernel/task_sync.c **** 		QueInit(&knl_ctxtsk->tskque);
 1182                             		.loc 4 293 22
 1183 076c FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 1184 0772 EC 55                   		mov.L	[r5], r5
 1185                             		.loc 4 293 3
 1186 0774 EF 51                   		mov.L	r5, r1
 1187 0776 39 8A F8                		bsr	_QueInit
 294:../kernel/tkernel/task_sync.c **** 		END_CRITICAL_SECTION;
 1188                             		.loc 4 294 3
 1189 0779 EC A5                   		mov.L	[r10], r5
 1190 077b 61 F5                   		cmp	#15, r5
 1191 077d 20 2E                   		beq	.L94
 1192                             		.loc 4 294 3 is_stmt 0 discriminator 1
 1193 077f FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 1194 0785 EC 54                   		mov.L	[r5], r4
 1195 0787 FB 52 00 00 00 00       		mov.L	#_knl_schedtsk, r5
 1196 078d EC 55                   		mov.L	[r5], r5
 1197 078f 47 54                   		cmp	r5, r4
 1198 0791 20 1A                   		beq	.L94
 1199                             		.loc 4 294 3 discriminator 3
 1200 0793 39 86 F8                		bsr	_knl_isTaskIndependent
 1201 0796 EF 15                   		mov.L	r1, r5
 1202 0798 61 05                   		cmp	#0, r5
 1203 079a 21 11                   		bne	.L94
 1204                             		.loc 4 294 3 discriminator 5
 1205 079c FB 52 00 00 00 00       		mov.L	#_knl_dispatch_disabled, r5
 1206 07a2 EC 55                   		mov.L	[r5], r5
 1207 07a4 61 05                   		cmp	#0, r5
 1208 07a6 1D                      		bne	.L94
 1209                             		.loc 4 294 3 discriminator 7
 1210 07a7 05 00 00 00             		bsr	_knl_dispatch
 1211                             		.balign 8,3,1
 1212                             	.L94:
 1213                             		.loc 4 294 3 discriminator 9
 1214 07ab EC A1                   		mov.L	[r10], r1
 1215 07ad 05 00 00 00             		bsr	_setint
 1216                             	.L93:
 1217                             	.LBE8:
 295:../kernel/tkernel/task_sync.c **** 	}
 296:../kernel/tkernel/task_sync.c **** 
 297:../kernel/tkernel/task_sync.c **** 	return ercd;
 1218                             		.loc 4 297 9 is_stmt 1
 1219 07b1 ED A5 01                		mov.L	4[r10], r5
 1220                             	.L95:
 298:../kernel/tkernel/task_sync.c **** }
 1221                             		.loc 4 298 1 discriminator 1
 1222 07b4 EF 51                   		mov.L	r5, r1
 1223 07b6 3F AA 04                		rtsd	#16, r10-r10
 1224                             	.LFE40:
 1433                             	.Letext0:
 1434                             		.file 5 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/tk/typedef.h"
 1435                             		.file 6 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/tk/syscall.h"
 1436                             		.file 7 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\knlinc/kernel.h"
 1437                             		.file 8 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\tkernel\\timer.h"
 1438                             		.file 9 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\tkernel\\winfo.h"
 1439                             		.file 10 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\tkernel\\mutex.h"
 1440                             		.file 11 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\sysdepend\\cpu\\core\\rxv2\\sysde
 1441                             		.file 12 "../kernel/tkernel/ready_queue.h"
