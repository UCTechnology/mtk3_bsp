   1                             		.file	"cpuctl.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   5                             	_knl_isTaskIndependent:
   6                             	.LFB16:
   7                             		.file 1 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\sysdepend\\cpu\\core\\rxv2\\cpu_st
   1:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
   2:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *----------------------------------------------------------------------
   3:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *    micro T-Kernel 3.00.03
   4:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *
   5:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *    Copyright (C) 2006-2021 by Ken Sakamura.
   6:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *    This software is distributed under the T-License 2.2.
   7:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *----------------------------------------------------------------------
   8:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *
   9:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *    Released by TRON Forum(http://www.tron.org) at 2021/03/31.
  10:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *
  11:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *----------------------------------------------------------------------
  12:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  13:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  14:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  15:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *	cpu_status.h (RXv2)
  16:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *	CPU-Dependent Status Definition
  17:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  18:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  19:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #ifndef _SYSDEPEND_CPU_CORE_STATUS_
  20:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define _SYSDEPEND_CPU_CORE_STATUS_
  21:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  22:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #include <tk/syslib.h>
  23:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #include <sys/sysdef.h>
  24:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  25:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #include "sysdepend.h"
  26:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  27:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  * Start/End critical section
  28:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  29:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define BEGIN_CRITICAL_SECTION	{ UINT _sr_ = disint();
  30:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define END_CRITICAL_SECTION	if ( !isDI(_sr_)			\
  31:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 				  && knl_ctxtsk != knl_schedtsk		\
  32:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 				  && !knl_isTaskIndependent()		\
  33:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 				  && !knl_dispatch_disabled ) {		\
  34:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 					knl_dispatch();			\
  35:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 				}					\
  36:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 				setint(_sr_); }
  37:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  38:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  * Start/End interrupt disable section
  39:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  40:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define BEGIN_DISABLE_INTERRUPT	{ UINT _sr_ = disint();
  41:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define END_DISABLE_INTERRUPT	setint(_sr_); }
  42:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  43:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  44:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  * Interrupt enable/disable
  45:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  46:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define ENABLE_INTERRUPT	{ setint(0); }
  47:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define DISABLE_INTERRUPT	{ disint(); }
  48:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  49:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  50:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  * Enable interrupt nesting
  51:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *	Enable the interrupt that has a higher priority than 'level.'
  52:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  53:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define ENABLE_INTERRUPT_UPTO(level)	{ setint(level); }
  54:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  55:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  56:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *  Task-independent control
  57:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  58:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** IMPORT	W	knl_taskindp;		/* Task independent status */
  59:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  60:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  61:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  * If it is the task-independent part, TRUE
  62:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  63:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** Inline BOOL knl_isTaskIndependent( void )
  64:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** {
   8                             		.loc 1 64 1
   9 0000 7E AA                   		push.l	r10
  10                             	.LCFI0:
  11 0002 EF 0A                   		mov.L	r0, r10
  12                             	.LCFI1:
  65:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 	return ( knl_taskindp > 0 )? TRUE: FALSE;
  13                             		.loc 1 65 35
  14 0004 FB 52 00 00 00 00       		mov.L	#_knl_taskindp, r5
  15 000a EC 55                   		mov.L	[r5], r5
  16 000c 61 05                   		cmp	#0, r5
  17 000e FC DB 5A                		scgt.L	r5
  18 0011 5B 55                   		movu.B	r5, r5
  66:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** }
  19                             		.loc 1 66 1
  20 0013 EF 51                   		mov.L	r5, r1
  21 0015 3F AA 01                		rtsd	#4, r10-r10
  22                             	.LFE16:
  24                             		.global	_tk_dis_dsp
  26                             	_tk_dis_dsp:
  27                             	.LFB30:
  28                             		.file 2 "../kernel/tkernel/cpuctl.c"
   1:../kernel/tkernel/cpuctl.c **** /*
   2:../kernel/tkernel/cpuctl.c ****  *----------------------------------------------------------------------
   3:../kernel/tkernel/cpuctl.c ****  *    micro T-Kernel 3.00.03
   4:../kernel/tkernel/cpuctl.c ****  *
   5:../kernel/tkernel/cpuctl.c ****  *    Copyright (C) 2006-2021 by Ken Sakamura.
   6:../kernel/tkernel/cpuctl.c ****  *    This software is distributed under the T-License 2.2.
   7:../kernel/tkernel/cpuctl.c ****  *----------------------------------------------------------------------
   8:../kernel/tkernel/cpuctl.c ****  *
   9:../kernel/tkernel/cpuctl.c ****  *    Released by TRON Forum(http://www.tron.org) at 2021/03/31.
  10:../kernel/tkernel/cpuctl.c ****  *
  11:../kernel/tkernel/cpuctl.c ****  *----------------------------------------------------------------------
  12:../kernel/tkernel/cpuctl.c ****  */
  13:../kernel/tkernel/cpuctl.c **** 
  14:../kernel/tkernel/cpuctl.c **** /*
  15:../kernel/tkernel/cpuctl.c ****  *	cpuctl.c
  16:../kernel/tkernel/cpuctl.c ****  *	CPU Control
  17:../kernel/tkernel/cpuctl.c ****  */
  18:../kernel/tkernel/cpuctl.c **** 
  19:../kernel/tkernel/cpuctl.c **** #include "kernel.h"
  20:../kernel/tkernel/cpuctl.c **** #include "task.h"
  21:../kernel/tkernel/cpuctl.c **** #include "check.h"
  22:../kernel/tkernel/cpuctl.c **** 
  23:../kernel/tkernel/cpuctl.c **** 
  24:../kernel/tkernel/cpuctl.c **** #ifdef USE_FUNC_TK_DIS_DSP
  25:../kernel/tkernel/cpuctl.c **** /* ------------------------------------------------------------------------ */
  26:../kernel/tkernel/cpuctl.c **** /*
  27:../kernel/tkernel/cpuctl.c ****  * Dispatch disable
  28:../kernel/tkernel/cpuctl.c ****  */
  29:../kernel/tkernel/cpuctl.c **** SYSCALL ER tk_dis_dsp( void )
  30:../kernel/tkernel/cpuctl.c **** {
  29                             		.loc 2 30 1
  30 0018 7E AA                   		push.l	r10
  31                             	.LCFI2:
  32 001a EF 0A                   		mov.L	r0, r10
  33                             	.LCFI3:
  31:../kernel/tkernel/cpuctl.c **** 	CHECK_CTX(!in_loc());
  34                             		.loc 2 31 2
  35 001c 05 00 00 00             		bsr	_GetCpuIntLevel
  36 0020 EF 15                   		mov.L	r1, r5
  37 0022 75 55 10                		cmp	#16, r5
  38 0025 20 16                   		beq	.L4
  39                             		.loc 2 31 2 is_stmt 0 discriminator 2
  40 0027 39 D9 FF                		bsr	_knl_isTaskIndependent
  41 002a EF 15                   		mov.L	r1, r5
  42 002c 61 05                   		cmp	#0, r5
  43 002e 21 0D                   		bne	.L4
  44                             		.loc 2 31 2 discriminator 4
  45 0030 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
  46 0036 EC 55                   		mov.L	[r5], r5
  47 0038 61 05                   		cmp	#0, r5
  48 003a 1E                      		bne	.L5
  49                             	.L4:
  50                             		.loc 2 31 2 discriminator 5
  51 003b FB 56 E7                		mov.L	#-25, r5
  52 003e 2E 0D                   		bra	.L6
  53                             	.L5:
  32:../kernel/tkernel/cpuctl.c **** 
  33:../kernel/tkernel/cpuctl.c **** 	knl_dispatch_disabled = DDS_DISABLE;
  54                             		.loc 2 33 24 is_stmt 1
  55 0040 FB 52 00 00 00 00       		mov.L	#_knl_dispatch_disabled, r5
  56 0046 F8 56 02                		mov.L	#2, [r5]
  34:../kernel/tkernel/cpuctl.c **** 
  35:../kernel/tkernel/cpuctl.c **** 	return E_OK;
  57                             		.loc 2 35 9
  58 0049 66 05                   		mov.L	#0, r5
  59                             	.L6:
  36:../kernel/tkernel/cpuctl.c **** }
  60                             		.loc 2 36 1
  61 004b EF 51                   		mov.L	r5, r1
  62 004d 3F AA 01                		rtsd	#4, r10-r10
  63                             	.LFE30:
  65                             		.global	_tk_ena_dsp
  67                             	_tk_ena_dsp:
  68                             	.LFB31:
  37:../kernel/tkernel/cpuctl.c **** #endif /* USE_FUNC_TK_DIS_DSP */
  38:../kernel/tkernel/cpuctl.c **** 
  39:../kernel/tkernel/cpuctl.c **** 
  40:../kernel/tkernel/cpuctl.c **** /* ------------------------------------------------------------------------ */
  41:../kernel/tkernel/cpuctl.c **** /*
  42:../kernel/tkernel/cpuctl.c ****  * Dispatch enable
  43:../kernel/tkernel/cpuctl.c ****  */
  44:../kernel/tkernel/cpuctl.c **** #ifdef USE_FUNC_TK_ENA_DSP
  45:../kernel/tkernel/cpuctl.c **** SYSCALL ER tk_ena_dsp( void )
  46:../kernel/tkernel/cpuctl.c **** {
  69                             		.loc 2 46 1
  70 0050 7E AA                   		push.l	r10
  71                             	.LCFI4:
  72 0052 EF 0A                   		mov.L	r0, r10
  73                             	.LCFI5:
  47:../kernel/tkernel/cpuctl.c **** 	CHECK_CTX(!in_loc());
  74                             		.loc 2 47 2
  75 0054 05 00 00 00             		bsr	_GetCpuIntLevel
  76 0058 EF 15                   		mov.L	r1, r5
  77 005a 75 55 10                		cmp	#16, r5
  78 005d 20 16                   		beq	.L8
  79                             		.loc 2 47 2 is_stmt 0 discriminator 2
  80 005f 39 A1 FF                		bsr	_knl_isTaskIndependent
  81 0062 EF 15                   		mov.L	r1, r5
  82 0064 61 05                   		cmp	#0, r5
  83 0066 21 0D                   		bne	.L8
  84                             		.loc 2 47 2 discriminator 4
  85 0068 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
  86 006e EC 55                   		mov.L	[r5], r5
  87 0070 61 05                   		cmp	#0, r5
  88 0072 1E                      		bne	.L9
  89                             	.L8:
  90                             		.loc 2 47 2 discriminator 5
  91 0073 FB 56 E7                		mov.L	#-25, r5
  92 0076 2E 24                   		bra	.L10
  93                             	.L9:
  48:../kernel/tkernel/cpuctl.c **** 
  49:../kernel/tkernel/cpuctl.c **** 	knl_dispatch_disabled = DDS_ENABLE;
  94                             		.loc 2 49 24 is_stmt 1
  95 0078 FB 52 00 00 00 00       		mov.L	#_knl_dispatch_disabled, r5
  96 007e F8 56 00                		mov.L	#0, [r5]
  50:../kernel/tkernel/cpuctl.c **** 	if ( knl_ctxtsk != knl_schedtsk ) {
  97                             		.loc 2 50 18
  98 0081 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
  99 0087 EC 54                   		mov.L	[r5], r4
 100 0089 FB 52 00 00 00 00       		mov.L	#_knl_schedtsk, r5
 101 008f EC 55                   		mov.L	[r5], r5
 102                             		.loc 2 50 5
 103 0091 47 54                   		cmp	r5, r4
 104 0093 15                      		beq	.L11
  51:../kernel/tkernel/cpuctl.c **** 		knl_dispatch();
 105                             		.loc 2 51 3
 106 0094 05 00 00 00             		bsr	_knl_dispatch
 107                             	.L11:
  52:../kernel/tkernel/cpuctl.c **** 	}
  53:../kernel/tkernel/cpuctl.c **** 
  54:../kernel/tkernel/cpuctl.c **** 	return E_OK;
 108                             		.loc 2 54 9
 109 0098 66 05                   		mov.L	#0, r5
 110                             	.L10:
  55:../kernel/tkernel/cpuctl.c **** }
 111                             		.loc 2 55 1
 112 009a EF 51                   		mov.L	r5, r1
 113 009c 3F AA 01                		rtsd	#4, r10-r10
 114                             	.LFE31:
 116                             		.global	_tk_set_reg
 118                             	_tk_set_reg:
 119                             	.LFB32:
  56:../kernel/tkernel/cpuctl.c **** #endif /* USE_FUNC_TK_ENA_DSP */
  57:../kernel/tkernel/cpuctl.c **** 
  58:../kernel/tkernel/cpuctl.c **** #if TK_SUPPORT_REGOPS
  59:../kernel/tkernel/cpuctl.c **** #ifdef USE_FUNC_TK_SET_REG
  60:../kernel/tkernel/cpuctl.c **** /* ------------------------------------------------------------------------ */
  61:../kernel/tkernel/cpuctl.c **** /*
  62:../kernel/tkernel/cpuctl.c ****  * Set task register contents
  63:../kernel/tkernel/cpuctl.c ****  */
  64:../kernel/tkernel/cpuctl.c **** SYSCALL ER tk_set_reg( ID tskid,
  65:../kernel/tkernel/cpuctl.c **** 		CONST T_REGS *pk_regs, CONST T_EIT *pk_eit, CONST T_CREGS *pk_cregs )
  66:../kernel/tkernel/cpuctl.c **** {
 120                             		.loc 2 66 1
 121 009f 7E AA                   		push.l	r10
 122                             	.LCFI6:
 123 00a1 71 0A E4                		add	#-28, r0, r10
 124                             	.LCFI7:
 125 00a4 EF A0                   		mov.L	r10, r0
 126 00a6 E7 A1 03                		mov.L	r1, 12[r10]
 127 00a9 E7 A2 04                		mov.L	r2, 16[r10]
 128 00ac E7 A3 05                		mov.L	r3, 20[r10]
 129 00af E7 A4 06                		mov.L	r4, 24[r10]
  67:../kernel/tkernel/cpuctl.c **** 	TCB		*tcb;
  68:../kernel/tkernel/cpuctl.c **** 	ER		ercd = E_OK;
 130                             		.loc 2 68 6
 131 00b2 F8 A6 00                		mov.L	#0, [r10]
  69:../kernel/tkernel/cpuctl.c **** 
  70:../kernel/tkernel/cpuctl.c **** 	CHECK_INTSK();
 132                             		.loc 2 70 2
 133 00b5 39 4B FF                		bsr	_knl_isTaskIndependent
 134 00b8 EF 15                   		mov.L	r1, r5
 135 00ba 61 05                   		cmp	#0, r5
 136 00bc 21 0D                   		bne	.L13
 137                             		.loc 2 70 2 is_stmt 0 discriminator 2
 138 00be FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 139 00c4 EC 55                   		mov.L	[r5], r5
 140 00c6 61 05                   		cmp	#0, r5
 141 00c8 1F                      		bne	.L14
 142                             	.L13:
 143                             		.loc 2 70 2 discriminator 3
 144 00c9 FB 56 E7                		mov.L	#-25, r5
 145 00cc 38 D7 00                		bra	.L15
 146                             	.L14:
  71:../kernel/tkernel/cpuctl.c **** 	CHECK_TSKID(tskid);
 147                             		.loc 2 71 2 is_stmt 1
 148 00cf 39 31 FF                		bsr	_knl_isTaskIndependent
 149 00d2 EF 15                   		mov.L	r1, r5
 150 00d4 61 05                   		cmp	#0, r5
 151 00d6 21 1A                   		bne	.L16
 152                             		.loc 2 71 2 is_stmt 0 discriminator 1
 153 00d8 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 154 00de EC 55                   		mov.L	[r5], r5
 155 00e0 61 05                   		cmp	#0, r5
 156 00e2 20 0E                   		beq	.L16
 157                             		.loc 2 71 2 discriminator 3
 158 00e4 ED A5 03                		mov.L	12[r10], r5
 159 00e7 61 05                   		cmp	#0, r5
 160 00e9 1F                      		bne	.L16
 161                             		.loc 2 71 2 discriminator 5
 162 00ea FB 56 D7                		mov.L	#-41, r5
 163 00ed 38 B6 00                		bra	.L15
 164                             	.L16:
 165                             		.loc 2 71 2 discriminator 6
 166 00f0 ED A5 03                		mov.L	12[r10], r5
 167 00f3 61 05                   		cmp	#0, r5
 168 00f5 2B 0A                   		ble	.L17
 169                             		.loc 2 71 2 discriminator 8
 170 00f7 ED A5 03                		mov.L	12[r10], r5
 171 00fa 75 55 20                		cmp	#32, r5
 172 00fd 2B 08                   		ble	.L18
 173                             	.L17:
 174                             		.loc 2 71 2 discriminator 9
 175 00ff FB 56 EE                		mov.L	#-18, r5
 176 0102 38 A1 00                		bra	.L15
 177                             	.L18:
  72:../kernel/tkernel/cpuctl.c **** 	CHECK_NONSELF(tskid);
 178                             		.loc 2 72 2 is_stmt 1
 179 0105 39 FB FE                		bsr	_knl_isTaskIndependent
 180 0108 EF 15                   		mov.L	r1, r5
 181 010a 61 05                   		cmp	#0, r5
 182 010c 21 23                   		bne	.L19
 183                             		.loc 2 72 2 is_stmt 0 discriminator 1
 184 010e FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 185 0114 EC 55                   		mov.L	[r5], r5
 186 0116 61 05                   		cmp	#0, r5
 187 0118 20 17                   		beq	.L19
 188                             		.loc 2 72 2 discriminator 2
 189 011a FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 190 0120 EC 55                   		mov.L	[r5], r5
 191 0122 A8 D5                   		mov.L	8[r5], r5
 192 0124 ED A4 03                		mov.L	12[r10], r4
 193 0127 47 54                   		cmp	r5, r4
 194 0129 1E                      		bne	.L19
 195                             		.loc 2 72 2 discriminator 3
 196 012a FB 56 D7                		mov.L	#-41, r5
 197 012d 2E 76                   		bra	.L15
 198                             	.L19:
  73:../kernel/tkernel/cpuctl.c **** 
  74:../kernel/tkernel/cpuctl.c **** 	tcb = get_tcb(tskid);
 199                             		.loc 2 74 8 is_stmt 1
 200 012f ED A5 03                		mov.L	12[r10], r5
 201 0132 60 15                   		sub	#1, r5
 202                             		.loc 2 74 6
 203 0134 75 15 68                		mul	#0x68, r5
 204 0137 70 55 00 00 00 00       		add	#_knl_tcb_table, r5
 205 013d E7 A5 01                		mov.L	r5, 4[r10]
 206                             	.LBB2:
  75:../kernel/tkernel/cpuctl.c **** 
  76:../kernel/tkernel/cpuctl.c **** 	BEGIN_CRITICAL_SECTION;
 207                             		.loc 2 76 2
 208 0140 05 00 00 00             		bsr	_disint
 209 0144 E7 A1 02                		mov.L	r1, 8[r10]
  77:../kernel/tkernel/cpuctl.c **** 	if ( tcb->state == TS_NONEXIST ) {
 210                             		.loc 2 77 10
 211 0147 ED A5 01                		mov.L	4[r10], r5
 212 014a CD 55 27                		mov.B	39[r5], r5
 213                             		.loc 2 77 5
 214 014d 5B 55                   		movu.B	r5, r5
 215 014f 61 05                   		cmp	#0, r5
 216 0151 1E                      		bne	.L20
  78:../kernel/tkernel/cpuctl.c **** 		ercd = E_NOEXS;
 217                             		.loc 2 78 8
 218 0152 F8 A6 D6                		mov.L	#-42, [r10]
 219 0155 2E 12                   		bra	.L21
 220                             	.L20:
  79:../kernel/tkernel/cpuctl.c **** 	} else {
  80:../kernel/tkernel/cpuctl.c **** 		knl_set_reg(tcb, pk_regs, pk_eit, pk_cregs);
 221                             		.loc 2 80 3
 222 0157 ED A4 06                		mov.L	24[r10], r4
 223 015a ED A3 05                		mov.L	20[r10], r3
 224 015d ED A2 04                		mov.L	16[r10], r2
 225 0160 ED A1 01                		mov.L	4[r10], r1
 226 0163 05 00 00 00             		bsr	_knl_set_reg
 227                             	.L21:
  81:../kernel/tkernel/cpuctl.c **** 	}
  82:../kernel/tkernel/cpuctl.c **** 	END_CRITICAL_SECTION;
 228                             		.loc 2 82 2
 229 0167 ED A5 02                		mov.L	8[r10], r5
 230 016a 61 F5                   		cmp	#15, r5
 231 016c 20 2E                   		beq	.L22
 232                             		.loc 2 82 2 is_stmt 0 discriminator 1
 233 016e FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 234 0174 EC 54                   		mov.L	[r5], r4
 235 0176 FB 52 00 00 00 00       		mov.L	#_knl_schedtsk, r5
 236 017c EC 55                   		mov.L	[r5], r5
 237 017e 47 54                   		cmp	r5, r4
 238 0180 20 1A                   		beq	.L22
 239                             		.loc 2 82 2 discriminator 3
 240 0182 39 7E FE                		bsr	_knl_isTaskIndependent
 241 0185 EF 15                   		mov.L	r1, r5
 242 0187 61 05                   		cmp	#0, r5
 243 0189 21 11                   		bne	.L22
 244                             		.loc 2 82 2 discriminator 5
 245 018b FB 52 00 00 00 00       		mov.L	#_knl_dispatch_disabled, r5
 246 0191 EC 55                   		mov.L	[r5], r5
 247 0193 61 05                   		cmp	#0, r5
 248 0195 1D                      		bne	.L22
 249                             		.loc 2 82 2 discriminator 7
 250 0196 05 00 00 00             		bsr	_knl_dispatch
 251                             		.balign 8,3,1
 252                             	.L22:
 253                             		.loc 2 82 2 discriminator 9
 254 019a ED A1 02                		mov.L	8[r10], r1
 255 019d 05 00 00 00             		bsr	_setint
 256                             	.LBE2:
  83:../kernel/tkernel/cpuctl.c **** 
  84:../kernel/tkernel/cpuctl.c **** 	return ercd;
 257                             		.loc 2 84 9 is_stmt 1 discriminator 9
 258 01a1 EC A5                   		mov.L	[r10], r5
 259                             		.balign 8,3,1
 260                             	.L15:
  85:../kernel/tkernel/cpuctl.c **** }
 261                             		.loc 2 85 1
 262 01a3 EF 51                   		mov.L	r5, r1
 263 01a5 3F AA 08                		rtsd	#32, r10-r10
 264                             	.LFE32:
 266                             		.global	_tk_get_reg
 268                             	_tk_get_reg:
 269                             	.LFB33:
  86:../kernel/tkernel/cpuctl.c **** #endif /* USE_FUNC_TK_SET_REG */
  87:../kernel/tkernel/cpuctl.c **** 
  88:../kernel/tkernel/cpuctl.c **** #ifdef USE_FUNC_TK_GET_REG
  89:../kernel/tkernel/cpuctl.c **** /* ------------------------------------------------------------------------ */
  90:../kernel/tkernel/cpuctl.c **** /*
  91:../kernel/tkernel/cpuctl.c ****  * Get task register contents
  92:../kernel/tkernel/cpuctl.c ****  */
  93:../kernel/tkernel/cpuctl.c **** SYSCALL ER tk_get_reg( ID tskid, T_REGS *pk_regs, T_EIT *pk_eit, T_CREGS *pk_cregs )
  94:../kernel/tkernel/cpuctl.c **** {
 270                             		.loc 2 94 1
 271 01a8 7E AA                   		push.l	r10
 272                             	.LCFI8:
 273 01aa 71 0A E4                		add	#-28, r0, r10
 274                             	.LCFI9:
 275 01ad EF A0                   		mov.L	r10, r0
 276 01af E7 A1 03                		mov.L	r1, 12[r10]
 277 01b2 E7 A2 04                		mov.L	r2, 16[r10]
 278 01b5 E7 A3 05                		mov.L	r3, 20[r10]
 279 01b8 E7 A4 06                		mov.L	r4, 24[r10]
  95:../kernel/tkernel/cpuctl.c **** 	TCB		*tcb;
  96:../kernel/tkernel/cpuctl.c **** 	ER		ercd = E_OK;
 280                             		.loc 2 96 6
 281 01bb F8 A6 00                		mov.L	#0, [r10]
  97:../kernel/tkernel/cpuctl.c **** 
  98:../kernel/tkernel/cpuctl.c **** 	CHECK_INTSK();
 282                             		.loc 2 98 2
 283 01be 39 42 FE                		bsr	_knl_isTaskIndependent
 284 01c1 EF 15                   		mov.L	r1, r5
 285 01c3 61 05                   		cmp	#0, r5
 286 01c5 21 0D                   		bne	.L24
 287                             		.loc 2 98 2 is_stmt 0 discriminator 2
 288 01c7 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 289 01cd EC 55                   		mov.L	[r5], r5
 290 01cf 61 05                   		cmp	#0, r5
 291 01d1 1F                      		bne	.L25
 292                             	.L24:
 293                             		.loc 2 98 2 discriminator 3
 294 01d2 FB 56 E7                		mov.L	#-25, r5
 295 01d5 38 D7 00                		bra	.L26
 296                             	.L25:
  99:../kernel/tkernel/cpuctl.c **** 	CHECK_TSKID(tskid);
 297                             		.loc 2 99 2 is_stmt 1
 298 01d8 39 28 FE                		bsr	_knl_isTaskIndependent
 299 01db EF 15                   		mov.L	r1, r5
 300 01dd 61 05                   		cmp	#0, r5
 301 01df 21 1A                   		bne	.L27
 302                             		.loc 2 99 2 is_stmt 0 discriminator 1
 303 01e1 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 304 01e7 EC 55                   		mov.L	[r5], r5
 305 01e9 61 05                   		cmp	#0, r5
 306 01eb 20 0E                   		beq	.L27
 307                             		.loc 2 99 2 discriminator 3
 308 01ed ED A5 03                		mov.L	12[r10], r5
 309 01f0 61 05                   		cmp	#0, r5
 310 01f2 1F                      		bne	.L27
 311                             		.loc 2 99 2 discriminator 5
 312 01f3 FB 56 D7                		mov.L	#-41, r5
 313 01f6 38 B6 00                		bra	.L26
 314                             	.L27:
 315                             		.loc 2 99 2 discriminator 6
 316 01f9 ED A5 03                		mov.L	12[r10], r5
 317 01fc 61 05                   		cmp	#0, r5
 318 01fe 2B 0A                   		ble	.L28
 319                             		.loc 2 99 2 discriminator 8
 320 0200 ED A5 03                		mov.L	12[r10], r5
 321 0203 75 55 20                		cmp	#32, r5
 322 0206 2B 08                   		ble	.L29
 323                             	.L28:
 324                             		.loc 2 99 2 discriminator 9
 325 0208 FB 56 EE                		mov.L	#-18, r5
 326 020b 38 A1 00                		bra	.L26
 327                             	.L29:
 100:../kernel/tkernel/cpuctl.c **** 	CHECK_NONSELF(tskid);
 328                             		.loc 2 100 2 is_stmt 1
 329 020e 39 F2 FD                		bsr	_knl_isTaskIndependent
 330 0211 EF 15                   		mov.L	r1, r5
 331 0213 61 05                   		cmp	#0, r5
 332 0215 21 23                   		bne	.L30
 333                             		.loc 2 100 2 is_stmt 0 discriminator 1
 334 0217 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 335 021d EC 55                   		mov.L	[r5], r5
 336 021f 61 05                   		cmp	#0, r5
 337 0221 20 17                   		beq	.L30
 338                             		.loc 2 100 2 discriminator 2
 339 0223 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 340 0229 EC 55                   		mov.L	[r5], r5
 341 022b A8 D5                   		mov.L	8[r5], r5
 342 022d ED A4 03                		mov.L	12[r10], r4
 343 0230 47 54                   		cmp	r5, r4
 344 0232 1E                      		bne	.L30
 345                             		.loc 2 100 2 discriminator 3
 346 0233 FB 56 D7                		mov.L	#-41, r5
 347 0236 2E 76                   		bra	.L26
 348                             	.L30:
 101:../kernel/tkernel/cpuctl.c **** 
 102:../kernel/tkernel/cpuctl.c **** 	tcb = get_tcb(tskid);
 349                             		.loc 2 102 8 is_stmt 1
 350 0238 ED A5 03                		mov.L	12[r10], r5
 351 023b 60 15                   		sub	#1, r5
 352                             		.loc 2 102 6
 353 023d 75 15 68                		mul	#0x68, r5
 354 0240 70 55 00 00 00 00       		add	#_knl_tcb_table, r5
 355 0246 E7 A5 01                		mov.L	r5, 4[r10]
 356                             	.LBB3:
 103:../kernel/tkernel/cpuctl.c **** 
 104:../kernel/tkernel/cpuctl.c **** 	BEGIN_CRITICAL_SECTION;
 357                             		.loc 2 104 2
 358 0249 05 00 00 00             		bsr	_disint
 359 024d E7 A1 02                		mov.L	r1, 8[r10]
 105:../kernel/tkernel/cpuctl.c **** 	if ( tcb->state == TS_NONEXIST ) {
 360                             		.loc 2 105 10
 361 0250 ED A5 01                		mov.L	4[r10], r5
 362 0253 CD 55 27                		mov.B	39[r5], r5
 363                             		.loc 2 105 5
 364 0256 5B 55                   		movu.B	r5, r5
 365 0258 61 05                   		cmp	#0, r5
 366 025a 1E                      		bne	.L31
 106:../kernel/tkernel/cpuctl.c **** 		ercd = E_NOEXS;
 367                             		.loc 2 106 8
 368 025b F8 A6 D6                		mov.L	#-42, [r10]
 369 025e 2E 12                   		bra	.L32
 370                             	.L31:
 107:../kernel/tkernel/cpuctl.c **** 	} else {
 108:../kernel/tkernel/cpuctl.c **** 		knl_get_reg(tcb, pk_regs, pk_eit, pk_cregs);
 371                             		.loc 2 108 3
 372 0260 ED A4 06                		mov.L	24[r10], r4
 373 0263 ED A3 05                		mov.L	20[r10], r3
 374 0266 ED A2 04                		mov.L	16[r10], r2
 375 0269 ED A1 01                		mov.L	4[r10], r1
 376 026c 05 00 00 00             		bsr	_knl_get_reg
 377                             	.L32:
 109:../kernel/tkernel/cpuctl.c **** 	}
 110:../kernel/tkernel/cpuctl.c **** 	END_CRITICAL_SECTION;
 378                             		.loc 2 110 2
 379 0270 ED A5 02                		mov.L	8[r10], r5
 380 0273 61 F5                   		cmp	#15, r5
 381 0275 20 2E                   		beq	.L33
 382                             		.loc 2 110 2 is_stmt 0 discriminator 1
 383 0277 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 384 027d EC 54                   		mov.L	[r5], r4
 385 027f FB 52 00 00 00 00       		mov.L	#_knl_schedtsk, r5
 386 0285 EC 55                   		mov.L	[r5], r5
 387 0287 47 54                   		cmp	r5, r4
 388 0289 20 1A                   		beq	.L33
 389                             		.loc 2 110 2 discriminator 3
 390 028b 39 75 FD                		bsr	_knl_isTaskIndependent
 391 028e EF 15                   		mov.L	r1, r5
 392 0290 61 05                   		cmp	#0, r5
 393 0292 21 11                   		bne	.L33
 394                             		.loc 2 110 2 discriminator 5
 395 0294 FB 52 00 00 00 00       		mov.L	#_knl_dispatch_disabled, r5
 396 029a EC 55                   		mov.L	[r5], r5
 397 029c 61 05                   		cmp	#0, r5
 398 029e 1D                      		bne	.L33
 399                             		.loc 2 110 2 discriminator 7
 400 029f 05 00 00 00             		bsr	_knl_dispatch
 401                             		.balign 8,3,1
 402                             	.L33:
 403                             		.loc 2 110 2 discriminator 9
 404 02a3 ED A1 02                		mov.L	8[r10], r1
 405 02a6 05 00 00 00             		bsr	_setint
 406                             	.LBE3:
 111:../kernel/tkernel/cpuctl.c **** 
 112:../kernel/tkernel/cpuctl.c **** 	return ercd;
 407                             		.loc 2 112 9 is_stmt 1 discriminator 9
 408 02aa EC A5                   		mov.L	[r10], r5
 409                             		.balign 8,3,1
 410                             	.L26:
 113:../kernel/tkernel/cpuctl.c **** }
 411                             		.loc 2 113 1
 412 02ac EF 51                   		mov.L	r5, r1
 413 02ae 3F AA 08                		rtsd	#32, r10-r10
 414                             	.LFE33:
 526                             	.Letext0:
 527                             		.file 3 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/tk/typedef.h"
 528                             		.file 4 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include\\tk\\sysdepend\\cpu\\core\\rxv2\\c
 529                             		.file 5 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/tk/syscall.h"
 530                             		.file 6 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/sys/queue.h"
 531                             		.file 7 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\knlinc/kernel.h"
 532                             		.file 8 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\tkernel\\timer.h"
 533                             		.file 9 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\tkernel\\winfo.h"
 534                             		.file 10 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\tkernel\\mutex.h"
 535                             		.file 11 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\sysdepend\\cpu\\core\\rxv2\\sysde
 536                             		.file 12 "../kernel/tkernel/task.h"
 537                             		.file 13 "../kernel/tkernel/ready_queue.h"
