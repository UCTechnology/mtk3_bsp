   1                             		.file	"inittask.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.global	_knl_init_ctsk
   5                             		.section C,"a",@progbits
   6                             		.p2align 2
   7                             		.balign 4
  10                             	_knl_init_ctsk:
  11 0000 00 00 00 00             		.long	0
  12 0004 01 00 00 00             		.long	1
  13 0008 54 00 00 00             		.long	_init_task_main
  14 000c 01 00 00 00             		.long	1
  15 0010 00 04 00 00             		.long	0x400
  16 0014 00 00 00 00             		.long	0
  17                             		.section P,"ax"
  19                             	_start_system:
  20                             	.LFB19:
  21                             		.file 1 "../kernel/inittask/inittask.c"
   1:../kernel/inittask/inittask.c **** /*
   2:../kernel/inittask/inittask.c ****  *----------------------------------------------------------------------
   3:../kernel/inittask/inittask.c ****  *    micro T-Kernel 3.00.02
   4:../kernel/inittask/inittask.c ****  *
   5:../kernel/inittask/inittask.c ****  *    Copyright (C) 2006-2020 by Ken Sakamura.
   6:../kernel/inittask/inittask.c ****  *    This software is distributed under the T-License 2.2.
   7:../kernel/inittask/inittask.c ****  *----------------------------------------------------------------------
   8:../kernel/inittask/inittask.c ****  *
   9:../kernel/inittask/inittask.c ****  *    Released by TRON Forum(http://www.tron.org) at 2020/10/21.
  10:../kernel/inittask/inittask.c ****  *
  11:../kernel/inittask/inittask.c ****  *----------------------------------------------------------------------
  12:../kernel/inittask/inittask.c ****  */
  13:../kernel/inittask/inittask.c **** 
  14:../kernel/inittask/inittask.c **** /*
  15:../kernel/inittask/inittask.c ****  *	inittask.c
  16:../kernel/inittask/inittask.c ****  *	Initial task definition
  17:../kernel/inittask/inittask.c ****  */
  18:../kernel/inittask/inittask.c **** #include <tk/tkernel.h>
  19:../kernel/inittask/inittask.c **** #include <tm/tmonitor.h>
  20:../kernel/inittask/inittask.c **** #include <sys/inittask.h>
  21:../kernel/inittask/inittask.c **** 
  22:../kernel/inittask/inittask.c **** #include "kernel.h"
  23:../kernel/inittask/inittask.c **** 
  24:../kernel/inittask/inittask.c **** #if !USE_IMALLOC
  25:../kernel/inittask/inittask.c **** INT	init_task_stack[INITTASK_STKSZ/sizeof(INT)];
  26:../kernel/inittask/inittask.c **** #endif
  27:../kernel/inittask/inittask.c **** 
  28:../kernel/inittask/inittask.c **** typedef INT	(*MAIN_FP)(INT, UB **);
  29:../kernel/inittask/inittask.c **** 
  30:../kernel/inittask/inittask.c **** /*
  31:../kernel/inittask/inittask.c ****  * Initial task creation parameter
  32:../kernel/inittask/inittask.c ****  */
  33:../kernel/inittask/inittask.c **** 
  34:../kernel/inittask/inittask.c **** LOCAL void init_task_main(void);
  35:../kernel/inittask/inittask.c **** 
  36:../kernel/inittask/inittask.c **** EXPORT const T_CTSK knl_init_ctsk = {
  37:../kernel/inittask/inittask.c **** 	(void *)INITTASK_EXINF,		/* exinf */
  38:../kernel/inittask/inittask.c **** 	INITTASK_TSKATR,		/* tskatr */
  39:../kernel/inittask/inittask.c **** 	(FP)&init_task_main,		/* task */
  40:../kernel/inittask/inittask.c **** 	INITTASK_ITSKPRI,		/* itskpri */
  41:../kernel/inittask/inittask.c **** 	INITTASK_STKSZ,			/* stksz */
  42:../kernel/inittask/inittask.c **** #if USE_OBJECT_NAME
  43:../kernel/inittask/inittask.c **** 	INITTASK_DSNAME,		/* dsname */
  44:../kernel/inittask/inittask.c **** #endif
  45:../kernel/inittask/inittask.c **** 	INITTASK_STACK,			/* bufptr */
  46:../kernel/inittask/inittask.c **** };
  47:../kernel/inittask/inittask.c **** 
  48:../kernel/inittask/inittask.c **** /* --------------------------------------------------------------- */
  49:../kernel/inittask/inittask.c **** /*
  50:../kernel/inittask/inittask.c ****  * Start System
  51:../kernel/inittask/inittask.c ****  *	Start each subsystem and each device driver.
  52:../kernel/inittask/inittask.c ****  *	Return from function after starting.
  53:../kernel/inittask/inittask.c ****  */
  54:../kernel/inittask/inittask.c **** LOCAL ER start_system( void )
  55:../kernel/inittask/inittask.c **** {
  22                             		.loc 1 55 1
  23 0000 7E AA                   		push.l	r10
  24                             	.LCFI0:
  25 0002 71 0A FC                		add	#-4, r0, r10
  26                             	.LCFI1:
  27 0005 EF A0                   		mov.L	r10, r0
  56:../kernel/inittask/inittask.c **** 	ER	ercd;
  57:../kernel/inittask/inittask.c **** 
  58:../kernel/inittask/inittask.c **** #if USE_DEVICE
  59:../kernel/inittask/inittask.c **** 	/* Initialize Device manager */
  60:../kernel/inittask/inittask.c **** 	ercd = knl_initialize_devmgr();
  28                             		.loc 1 60 9
  29 0007 05 00 00 00             		bsr	_knl_initialize_devmgr
  30 000b E3 A1                   		mov.L	r1, [r10]
  61:../kernel/inittask/inittask.c **** 	if ( ercd < E_OK ) return ercd;
  31                             		.loc 1 61 5
  32 000d EC A5                   		mov.L	[r10], r5
  33 000f 61 05                   		cmp	#0, r5
  34 0011 28 05                   		bge	.L2
  35                             		.loc 1 61 28 discriminator 1
  36 0013 EC A5                   		mov.L	[r10], r5
  37 0015 09                      		bra	.L3
  38                             	.L2:
  62:../kernel/inittask/inittask.c **** #endif
  63:../kernel/inittask/inittask.c **** 
  64:../kernel/inittask/inittask.c **** 	/* Start system dependent sequence */
  65:../kernel/inittask/inittask.c **** 	ercd = knl_start_device();
  39                             		.loc 1 65 9
  40 0016 05 00 00 00             		bsr	_knl_start_device
  41 001a E3 A1                   		mov.L	r1, [r10]
  66:../kernel/inittask/inittask.c **** 
  67:../kernel/inittask/inittask.c **** 	return ercd;
  42                             		.loc 1 67 9
  43 001c EC A5                   		mov.L	[r10], r5
  44                             	.L3:
  68:../kernel/inittask/inittask.c **** }
  45                             		.loc 1 68 1
  46 001e EF 51                   		mov.L	r5, r1
  47 0020 3F AA 02                		rtsd	#8, r10-r10
  48                             	.LFE19:
  50                             		.section C,"a",@progbits
  51                             		.p2align 2
  52                             	.LC0:
  53 0018 0A 3C 3C 20 53 59 53 54 		.string	"\n<< SYSTEM SHUTDOWN >>\n"
  53      45 4D 20 53 48 55 54 44 
  53      4F 57 4E 20 3E 3E 0A 00 
  54                             		.section P,"ax"
  56                             	_shutdown_system:
  57                             	.LFB20:
  69:../kernel/inittask/inittask.c **** 
  70:../kernel/inittask/inittask.c **** /*
  71:../kernel/inittask/inittask.c ****  * Stop System
  72:../kernel/inittask/inittask.c ****  *	Never return from this function.
  73:../kernel/inittask/inittask.c ****  *
  74:../kernel/inittask/inittask.c ****  *	fin  =	 0 : Power off
  75:../kernel/inittask/inittask.c ****  *		-1 : reset and re-start	(Reset -> Boot -> Start)
  76:../kernel/inittask/inittask.c ****  *		-2 : fast re-start		(Start)
  77:../kernel/inittask/inittask.c ****  *		-3 : Normal re-start		(Boot -> Start)
  78:../kernel/inittask/inittask.c ****  *
  79:../kernel/inittask/inittask.c ****  *	fin are not always supported.
  80:../kernel/inittask/inittask.c ****  */
  81:../kernel/inittask/inittask.c **** LOCAL void shutdown_system( INT fin )
  82:../kernel/inittask/inittask.c **** {
  58                             		.loc 1 82 1
  59 0023 7E AA                   		push.l	r10
  60                             	.LCFI2:
  61 0025 71 0A FC                		add	#-4, r0, r10
  62                             	.LCFI3:
  63 0028 EF A0                   		mov.L	r10, r0
  64 002a E3 A1                   		mov.L	r1, [r10]
  83:../kernel/inittask/inittask.c **** #if USE_SHUTDOWN
  84:../kernel/inittask/inittask.c **** 	/* Platform dependent finalize sequence */
  85:../kernel/inittask/inittask.c **** 	knl_finish_device();
  65                             		.loc 1 85 2
  66 002c 05 00 00 00             		bsr	_knl_finish_device
  86:../kernel/inittask/inittask.c **** 
  87:../kernel/inittask/inittask.c **** 	/* Shutdown message output */
  88:../kernel/inittask/inittask.c **** 	if ( fin >= 0 ) {
  67                             		.loc 1 88 5
  68 0030 EC A5                   		mov.L	[r10], r5
  69 0032 61 05                   		cmp	#0, r5
  70 0034 29 0C                   		blt	.L5
  89:../kernel/inittask/inittask.c **** 		SYSTEM_MESSAGE("\n<< SYSTEM SHUTDOWN >>\n");
  71                             		.loc 1 89 3
  72 0036 FB 12 18 00 00 00       		mov.L	#.LC0, r1
  73 003c 05 00 00 00             		bsr	_tm_putstring
  74                             	.L5:
  90:../kernel/inittask/inittask.c **** 	}
  91:../kernel/inittask/inittask.c **** 
  92:../kernel/inittask/inittask.c **** 	if ( fin < 0 ) {
  75                             		.loc 1 92 5
  76 0040 EC A5                   		mov.L	[r10], r5
  77 0042 61 05                   		cmp	#0, r5
  78 0044 28 08                   		bge	.L6
  93:../kernel/inittask/inittask.c **** 		/* Re-start sequence (platform dependent) */
  94:../kernel/inittask/inittask.c **** 		knl_restart_hw(fin);
  79                             		.loc 1 94 3
  80 0046 EC A1                   		mov.L	[r10], r1
  81 0048 05 00 00 00             		bsr	_knl_restart_hw
  82                             	.L6:
  95:../kernel/inittask/inittask.c **** 	}
  96:../kernel/inittask/inittask.c **** 
  97:../kernel/inittask/inittask.c **** 	knl_tkernel_exit();		/* Stop system */
  83                             		.loc 1 97 2
  84 004c 05 00 00 00             		bsr	_knl_tkernel_exit
  98:../kernel/inittask/inittask.c **** #else
  99:../kernel/inittask/inittask.c **** 	DISABLE_INTERRUPT;
 100:../kernel/inittask/inittask.c **** 	for(;;) {
 101:../kernel/inittask/inittask.c **** 		;
 102:../kernel/inittask/inittask.c **** 	}
 103:../kernel/inittask/inittask.c **** #endif /* USE_SHUTDOWN */
 104:../kernel/inittask/inittask.c **** }
  85                             		.loc 1 104 1
  86 0050 03                      		nop
  87 0051 3F AA 02                		rtsd	#8, r10-r10
  88                             	.LFE20:
  90                             		.section C,"a",@progbits
  91                             		.p2align 2
  92                             	.LC1:
  93 0030 0A 0A 6D 69 63 72 6F 54 		.string	"\n\nmicroT-Kernel Version %x.%02x\n\n"
  93      2D 4B 65 72 6E 65 6C 20 
  93      56 65 72 73 69 6F 6E 20 
  93      25 78 2E 25 30 32 78 0A 
  93      0A 00 
  94                             	.LC2:
  95 0052 21 45 52 52 4F 52 21 20 		.string	"!ERROR! Init Task start\n"
  95      49 6E 69 74 20 54 61 73 
  95      6B 20 73 74 61 72 74 0A 
  95      00 
  96 006b 00                      		.section P,"ax"
  98                             	_init_task_main:
  99                             	.LFB21:
 105:../kernel/inittask/inittask.c **** 
 106:../kernel/inittask/inittask.c **** 
 107:../kernel/inittask/inittask.c **** /*
 108:../kernel/inittask/inittask.c ****  * Initial task main
 109:../kernel/inittask/inittask.c ****  */
 110:../kernel/inittask/inittask.c **** LOCAL void init_task_main(void)
 111:../kernel/inittask/inittask.c **** {
 100                             		.loc 1 111 1
 101 0054 7E AA                   		push.l	r10
 102                             	.LCFI4:
 103 0056 71 0A F8                		add	#-8, r0, r10
 104                             	.LCFI5:
 105 0059 71 A0 F4                		add	#-12, r10, r0
 106                             	.LCFI6:
 112:../kernel/inittask/inittask.c **** 	INT	fin = 1;
 107                             		.loc 1 112 6
 108 005c F8 A6 01                		mov.L	#1, [r10]
 113:../kernel/inittask/inittask.c **** 	ER	ercd;
 114:../kernel/inittask/inittask.c **** 
 115:../kernel/inittask/inittask.c **** 	ercd = start_system();		/* Start Sub-system & device driver */
 109                             		.loc 1 115 9
 110 005f 39 A1 FF                		bsr	_start_system
 111 0062 E7 A1 01                		mov.L	r1, 4[r10]
 116:../kernel/inittask/inittask.c **** 	if(ercd  >= E_OK) {
 112                             		.loc 1 116 4
 113 0065 ED A5 01                		mov.L	4[r10], r5
 114 0068 61 05                   		cmp	#0, r5
 115 006a 29 20                   		blt	.L8
 117:../kernel/inittask/inittask.c **** 
 118:../kernel/inittask/inittask.c **** #if (USE_SYSTEM_MESSAGE && USE_TMONITOR)
 119:../kernel/inittask/inittask.c **** 		tm_printf((UB*)"\n\nmicroT-Kernel Version %x.%02x\n\n", VER_MAJOR, VER_MINOR);
 116                             		.loc 1 119 3
 117 006c 3E 02 00                		mov.L	#0, 8[r0]
 118 006f 3E 01 03                		mov.L	#3, 4[r0]
 119 0072 F8 02 30 00 00 00       		mov.L	#.LC1, [r0]
 120 0078 05 00 00 00             		bsr	_tm_printf
 120:../kernel/inittask/inittask.c **** #endif
 121:../kernel/inittask/inittask.c **** 
 122:../kernel/inittask/inittask.c **** #if USE_USERINIT
 123:../kernel/inittask/inittask.c **** 		/* Perform user defined initialization sequence */
 124:../kernel/inittask/inittask.c **** 		fin = (*(MAIN_FP)RI_USERINIT)(0, NULL);
 125:../kernel/inittask/inittask.c **** #endif
 126:../kernel/inittask/inittask.c **** 		if ( fin > 0 ) {
 121                             		.loc 1 126 6
 122 007c EC A5                   		mov.L	[r10], r5
 123 007e 61 05                   		cmp	#0, r5
 124 0080 2B 14                   		ble	.L10
 127:../kernel/inittask/inittask.c **** 			fin = usermain();	/* User Main Program */
 125                             		.loc 1 127 10
 126 0082 05 00 00 00             		bsr	_usermain
 127 0086 E3 A1                   		mov.L	r1, [r10]
 128 0088 2E 0C                   		bra	.L10
 129                             	.L8:
 128:../kernel/inittask/inittask.c **** 		}
 129:../kernel/inittask/inittask.c **** #if USE_USERINIT
 130:../kernel/inittask/inittask.c **** 		/* Perform user defined finalization sequence */
 131:../kernel/inittask/inittask.c **** 		(*(MAIN_FP)RI_USERINIT)(-1, NULL);
 132:../kernel/inittask/inittask.c **** #endif
 133:../kernel/inittask/inittask.c **** 
 134:../kernel/inittask/inittask.c **** 	} else {
 135:../kernel/inittask/inittask.c **** 		SYSTEM_MESSAGE("!ERROR! Init Task start\n");	/* Start message */
 130                             		.loc 1 135 3
 131 008a FB 12 52 00 00 00       		mov.L	#.LC2, r1
 132 0090 05 00 00 00             		bsr	_tm_putstring
 133                             	.L10:
 136:../kernel/inittask/inittask.c **** 	}
 137:../kernel/inittask/inittask.c **** 
 138:../kernel/inittask/inittask.c **** 	shutdown_system(fin);	/* Never return */
 134                             		.loc 1 138 2
 135 0094 EC A1                   		mov.L	[r10], r1
 136 0096 39 8D FF                		bsr	_shutdown_system
 139:../kernel/inittask/inittask.c **** }
 137                             		.loc 1 139 1
 138 0099 03                      		nop
 139 009a 3F AA 06                		rtsd	#24, r10-r10
 140                             	.LFE21:
 222                             	.Letext0:
 223                             		.file 2 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\include/tk/typedef.h"
 224                             		.file 3 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\include/tk/syscall.h"
 225                             		.file 4 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\include/sys/queue.h"
 226                             		.file 5 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\kernel\\knlinc/kernel.h"
 227                             		.file 6 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\kernel\\tkernel\\timer.h"
 228                             		.file 7 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\kernel\\tkernel\\winfo.h"
 229                             		.file 8 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\kernel\\tkernel\\mutex.h"
 230                             		.file 9 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\kernel\\sysdepend\\cpu\\core\\rxv2\\sysde
 231                             		.file 10 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\kernel\\sysdepend\\cpu\\core\\rxv2\\cpu_
