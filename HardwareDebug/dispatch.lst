   1                             	# 1 "../kernel/sysdepend/cpu/core/rxv2/dispatch.S"
   1                             	ï»¿/*
   0                             	
   0                             	
   0                             	
   2                             	 *----------------------------------------------------------------------
   3                             	 *    micro T-Kernel 3.00.01
   4                             	 *
   5                             	 *    Copyright (C) 2006-2020 by Ken Sakamura.
   6                             	 *    This software is distributed under the T-License 2.2.
   7                             	 *----------------------------------------------------------------------
   8                             	 *
   9                             	 *    Released by TRON Forum(http://www.tron.org) at 2020/05/29.
  10                             	 *
  11                             	 *----------------------------------------------------------------------
  12                             	 */
  13                             	
  14                             	#include <sys/machine.h>
   1                             	/*
   2                             	 *----------------------------------------------------------------------
   3                             	 *    micro T-Kernel 3.0 BSP
   4                             	 *
   5                             	 *    Copyright (C) 2021-2022 by Ken Sakamura.
   6                             	 *    This software is distributed under the T-License 2.2.
   7                             	 *----------------------------------------------------------------------
   8                             	 *
   9                             	 *    Released by TRON Forum(http://www.tron.org) at 2022/04.
  10                             	 *
  11                             	 *----------------------------------------------------------------------
  12                             	 */
  13                             	
  14                             	/*
  15                             	 *	machine.h
  16                             	 *	Machine type definition 
  17                             	 */
  18                             	
  19                             	#ifndef __SYS_MACHINE_H__
  20                             	#define __SYS_MACHINE_H__
  21                             	
  22                             	/* ===== System dependencies definitions ================================ */
  23                             	#include <config.h>
   1                             	/*
   2                             	 *----------------------------------------------------------------------
   3                             	 *    micro T-Kernel 3.00.05
   4                             	 *
   5                             	 *    Copyright (C) 2006-2021 by Ken Sakamura.
   6                             	 *    This software is distributed under the T-License 2.2.
   7                             	 *----------------------------------------------------------------------
   8                             	 *
   9                             	 *    Released by TRON Forum(http://www.tron.org) at 2021/11.
  10                             	 *
  11                             	 *----------------------------------------------------------------------
  12                             	 */
  13                             	
  14                             	/*
  15                             	 *	config.h
  16                             	 *	User Configuration Definition
  17                             	 */
  18                             	
  19                             	#ifndef __TK_CONFIG__
  20                             	#define __TK_CONFIG__
  21                             	
  22                             	/*---------------------------------------------------------------------- */
  23                             	/*  Target Name
  24                             		Define the system target name. Alternatively, define the target name 
  25                             		in the development environment.
  26                             	 */
  27                             	//#define _IOTE_M367_
  28                             	//#define _IOTE_RX231_
  29                             	//#define _IOTE_STM32L4_
  30                             	//#define _IOTE_RZA2M_
  31                             	
  32                             	/*---------------------------------------------------------------------- */
  33                             	/* SYSCONF : micro T-Kernel system configuration
  34                             	 */
  35                             	
  36                             	#define	CNF_SYSTEMAREA_TOP	0	/* 0: Use system default address */
  37                             	#define CNF_SYSTEMAREA_END	0	/* 0: Use system default address */
  38                             	
  39                             	#define	CNF_MAX_TSKPRI		32	/* Task Max priority */
  40                             	
  41                             	#define CNF_TIMER_PERIOD	10	/* System timer period */
  42                             	
  43                             	/* Maximum number of kernel objects */
  44                             	#define CNF_MAX_TSKID		32	/* Task */
  45                             	#define CNF_MAX_SEMID		16	/* Semaphore */
  46                             	#define CNF_MAX_FLGID		16	/* Event flag */
  47                             	#define CNF_MAX_MBXID		8	/* Mailbox*/
  48                             	#define CNF_MAX_MTXID		4	/* Mutex */
  49                             	#define CNF_MAX_MBFID		8	/* Message buffer */
  50                             	#define CNF_MAX_MPLID		4	/* Memory pool */
  51                             	#define CNF_MAX_MPFID		8	/* Fixed size memory pool */
  52                             	#define CNF_MAX_CYCID		4	/* Cyclic handler */
  53                             	#define CNF_MAX_ALMID		8	/* Alarm handler */
  54                             	
  55                             	/* Device configuration */
  56                             	#define CNF_MAX_REGDEV		(8)	/* Max registered device */
  57                             	#define CNF_MAX_OPNDEV		(16)	/* Max open device */
  58                             	#define CNF_MAX_REQDEV		(16)	/* Max request device */
  59                             	#define CNF_DEVT_MBFSZ0		(-1)	/* message buffer size for event notification */
  60                             	#define CNF_DEVT_MBFSZ1		(-1)	/* message max size for event notification */
  61                             	
  62                             	/* Version Number */
  63                             	#define CNF_VER_MAKER		0
  64                             	#define CNF_VER_PRID		0
  65                             	#define CNF_VER_PRVER		3
  66                             	#define CNF_VER_PRNO1		0
  67                             	#define CNF_VER_PRNO2		0
  68                             	#define CNF_VER_PRNO3		0
  69                             	#define CNF_VER_PRNO4		0
  70                             	
  71                             	
  72                             	/*---------------------------------------------------------------------- */
  73                             	/* Backwards compatible api support 
  74                             	 *      micro T-Kernel2.0 API support (Rendezvous)
  75                             	 */
  76                             	#define USE_LEGACY_API		(0)	/* 1: Valid  0: Invalid */
  77                             	#define CNF_MAX_PORID		(0)	/* Maximum number of Rendezvous */
  78                             	
  79                             	
  80                             	/*---------------------------------------------------------------------- */
  81                             	/* Stack size definition
  82                             	 */
  83                             	#define CNF_EXC_STACK_SIZE	(2048)	/* Exception stack size */
  84                             	#define	CNF_TMP_STACK_SIZE	(256)	/* Temporary stack size */
  85                             	
  86                             	
  87                             	/*---------------------------------------------------------------------- */
  88                             	/* System function selection
  89                             		1: Use function.  0: No use function.
  90                             	 */
  91                             	#define USE_NOINIT		(0)	/* Use zero-clear bss section */
  92                             	#define USE_IMALLOC		(1)	/* Use dynamic memory allocation */
  93                             	#define USE_SHUTDOWN		(1)	/* Use System shutdown */
  94                             	#define USE_STATIC_IVT		(0)	/* Use static interrupt vector table */
  95                             	
  96                             	
  97                             	/*---------------------------------------------------------------------- */
  98                             	/* Check API parameter
  99                             	 *   1: Check parameter  0: Do not check parameter
 100                             	 */
 101                             	#define CHK_NOSPT		(1)	/* Check unsupported function (E_NOSPT) */
 102                             	#define CHK_RSATR		(1)	/* Check reservation attribute error (E_RSATR) */
 103                             	#define CHK_PAR			(1)	/* Check parameter (E_PAR) */
 104                             	#define CHK_ID			(1)	/* Check object ID range (E_ID) */
 105                             	#define CHK_OACV		(1)	/* Check Object Access Violation (E_OACV) */
 106                             	#define CHK_CTX			(1)	/* Check whether task-independent part is running (E_CTX) */
 107                             	#define CHK_CTX1		(1)	/* Check dispatch disable part */
 108                             	#define CHK_CTX2		(1)	/* Check task independent part */
 109                             	#define CHK_SELF		(1)	/* Check if its own task is specified (E_OBJ) */
 110                             	
 111                             	#define	CHK_TKERNEL_CONST	(1)	/* Check const-type parameter */
 112                             	
 113                             	/*---------------------------------------------------------------------- */
 114                             	/* User initialization program (UserInit)
 115                             	 *
 116                             	 */
 117                             	#define	USE_USERINIT		(0)	/*  1: Use UserInit  0: Do not use UserInit */
 118                             	#define RI_USERINIT		(0)	/* UserInit start address */
 119                             	
 120                             	
 121                             	/*---------------------------------------------------------------------- */
 122                             	/* Debugger support function
 123                             	 *   1: Valid  0: Invalid
 124                             	 */
 125                             	#define USE_DBGSPT		(0)	/* Use mT-Kernel/DS */
 126                             	#define USE_OBJECT_NAME		(0)	/* Use DS object name */
 127                             	
 128                             	#define OBJECT_NAME_LENGTH	(8)	/* DS Object name length */
 129                             	
 130                             	/*---------------------------------------------------------------------- */
 131                             	/* Use T-Monitor Compatible API Library  & Message to terminal.
 132                             	ã*  1: Valid  0: Invalid
 133                             	 */
 134                             	#define	USE_TMONITOR		(1)	/* T-Monitor API */
 135                             	#define USE_SYSTEM_MESSAGE	(1)	/* System Message */
 136                             	#define USE_EXCEPTION_DBG_MSG	(1)	/* Excepttion debug message */
 137                             	#define USE_TASK_DBG_MSG	(0)	/* Tsak debug message */
 138                             	
 139                             	/*---------------------------------------------------------------------- */
 140                             	/* Use Co-Processor.
 141                             	ã*  1: Valid  0: Invalid
 142                             	 */
 143                             	#define	USE_FPU			(0)	/* Use FPU */
 144                             	#define	USE_DSP			(0)	/* Use DSP */
 145                             	
 146                             	/*---------------------------------------------------------------------- */
 147                             	/* Use Physical timer.
 148                             	ã*  1: Valid  0: Invalid
 149                             	 */
 150                             	#define USE_PTMR		(1)	/* Use Physical timer */
 151                             	
 152                             	/*---------------------------------------------------------------------- */
 153                             	/* Use Sample device driver.
 154                             	ã*  1: Valid  0: Invalid
 155                             	 */
 156                             	#define USE_SDEV_DRV		(1)	/* Use Sample device driver */
 157                             	
 158                             	/*---------------------------------------------------------------------- */
 159                             	/*
 160                             	 *	Use function Definition
 161                             	 */
 162                             	#include "config_func.h"
   1                             	/*
 163                             	
  24                             	
  25                             	#ifdef _IOTE_M367_
  26                             	#include "sysdepend/iote_m367/machine.h"
  27                             	#define Csym(sym) sym
  28                             	#endif
  29                             	
  30                             	#ifdef _IOTE_STM32L4_
  31                             	#include "sysdepend/iote_stm32l4/machine.h"
  32                             	#define Csym(sym) sym
  33                             	#endif
  34                             	
  35                             	#ifdef _IOTE_RX231_
  36                             	#include "sysdepend/iote_rx231/machine.h"
  37                             	#define Csym(sym) _##sym
  38                             	#endif
  39                             	
  40                             	#ifdef _IOTE_RZA2M_
  41                             	#include "sysdepend/iote_rza2m/machine.h"
  42                             	#define Csym(sym) sym
  43                             	#endif
  44                             	
  45                             	/* ----- Î¼T-Kernel BSP ------------------------------------------------- */
  46                             	#ifdef _NUCLEO_L476_
  47                             	#include "sysdepend/nucleo_l476/machine.h"
  48                             	#define Csym(sym) sym
  49                             	#endif
  50                             	
  51                             	#ifdef _NUCLEO_H723_
  52                             	#include "sysdepend/nucleo_h723/machine.h"
  53                             	#define Csym(sym) sym
  54                             	#endif
  55                             	
  56                             	#ifdef _RTB_RX65N_
  57                             	#include "sysdepend/rtb_rx65n/machine.h"
   1                             	/*
   2                             	 *----------------------------------------------------------------------
   3                             	 *    micro T-Kernel 3.0 BSP
   4                             	 *
   5                             	 *    Copyright (C) 2022 by Ken Sakamura.
   6                             	 *    This software is distributed under the T-License 2.2.
   7                             	 *----------------------------------------------------------------------
   8                             	 *
   9                             	 *    Released by TRON Forum(http://www.tron.org) at 2022/04.
  10                             	 *
  11                             	 *----------------------------------------------------------------------
  12                             	 */
  13                             	
  14                             	/*
  15                             	 *	machine.h
  16                             	 *
  17                             	 *	Machine type definition (Renesas Target Board for RX65N depended)
  18                             	 */
  19                             	
  20                             	#ifndef __SYS_SYSDEPEND_MACHINE_H__
  21                             	#define __SYS_SYSDEPEND_MACHINE_H__
  22                             	
  23                             	/*
  24                             	 * [TYPE]_[CPU]		TARGET SYSTEM
  25                             	 * CPU_xxxx		CPU type
  26                             	 * CPU_CORE_xxx		CPU core type
  27                             	 */
  28                             	
  29                             	/* ----- Renesas Target Board for RX65N (CPU: RX65N) definition ----- */
  30                             	
  31                             	#define RTB_RX65N		1		/* Target system : Target Board */
  32                             	#define CPU_RX65N		1		/* Target CPU : Renesas RX65N */
  33                             	#define CPU_CORE_RXV2		1		/* Target CPU-Core : RX200 series*/
  34                             	
  35                             	#define TARGET_DIR		rtb_rx65n	/* Sysdepend-Directory name */
  36                             	
  37                             	/*
  38                             	 **** CPU-depeneded profile (RX65N)
  39                             	 */
  40                             	#include "../cpu/rx65n/machine.h"
   1                             	/*
   2                             	 *----------------------------------------------------------------------
   3                             	 *    micro T-Kernel 3.00.06.B0
   4                             	 *
   5                             	 *    Copyright (C) 2022 by Ken Sakamura.
   6                             	 *    This software is distributed under the T-License 2.2.
   7                             	 *----------------------------------------------------------------------
   8                             	 *
   9                             	 *    Released by TRON Forum(http://www.tron.org) at 2022/04.
  10                             	 *
  11                             	 *----------------------------------------------------------------------
  12                             	 */
  13                             	
  14                             	/*
  15                             	 *	machine_depend.h
  16                             	 *
  17                             	 *	Machine type definition (RX65N depended)
  18                             	 */
  19                             	
  20                             	#ifndef __SYS_SYSDEPEND_MACHINE_CPU_H__
  21                             	#define __SYS_SYSDEPEND_MACHINE_CPU_H__
  22                             	
  23                             	/*
  24                             	 **** CPU core-depeneded profile (RXv2)
  25                             	 */
  26                             	
  27                             	#include "../core/rxv2/machine.h"
   1                             	/*
  28                             	
  41                             	
  58                             	#define Csym(sym) _##sym
  15                             	#ifdef CPU_CORE_RXV2
  16                             	
  17                             	/*
  18                             	 *	dispatch.S (RXv2 core)
  19                             	 *	Dispatcher
  20                             	 */
  21                             	
  22                             	#define	_in_asm_source_
  23                             	
  24                             	#include <sys/machine.h>
  25                             	#include <tk/errno.h>
   1                             	/*
  26                             	#include <sys/sysdef.h>
   1                             	/*
   2                             	 *----------------------------------------------------------------------
   3                             	 *    micro T-Kernel 3.00.00
   4                             	 *
   5                             	 *    Copyright (C) 2006-2019 by Ken Sakamura.
   6                             	 *    This software is distributed under the T-License 2.1.
   7                             	 *----------------------------------------------------------------------
   8                             	 *
   9                             	 *    Released by TRON Forum(http://www.tron.org) at 2019/12/11.
  10                             	 *
  11                             	 *----------------------------------------------------------------------
  12                             	 */
  13                             	
  14                             	/*
  15                             	 *	sysdef.h
  16                             	 *
  17                             	 *	System dependencies definition.
  18                             	 *	Included also from assembler program.
  19                             	 */
  20                             	
  21                             	#ifndef __SYS_SYSDEF_H__
  22                             	#define __SYS_SYSDEF_H__
  23                             	
  24                             	/* System dependencies */
  25                             	#define SYSDEF_PATH_(a)		#a
  26                             	#define SYSDEF_PATH(a)		SYSDEF_PATH_(a)
  27                             	#define SYSDEF_SYSDEP()		SYSDEF_PATH(sysdepend/TARGET_DIR/sysdef.h)
  28                             	#include SYSDEF_SYSDEP()
   1                             	/*
   2                             	 *----------------------------------------------------------------------
   3                             	 *    micro T-Kernel 3.0 BSP
   4                             	 *
   5                             	 *    Copyright (C) 2022 by Ken Sakamura.
   6                             	 *    This software is distributed under the T-License 2.2.
   7                             	 *----------------------------------------------------------------------
   8                             	 *
   9                             	 *    Released by TRON Forum(http://www.tron.org) at 2022/04.
  10                             	 *
  11                             	 *----------------------------------------------------------------------
  12                             	 */
  13                             	
  14                             	/*
  15                             	 *	sysdef.h
  16                             	 *
  17                             	 *	System dependencies definition (Renesas Target Board for RX65N depended)
  18                             	 *	Included also from assembler program.
  19                             	 */
  20                             	
  21                             	#ifndef __SYS_SYSDEF_DEPEND_H__
  22                             	#define __SYS_SYSDEF_DEPEND_H__
  23                             	
  24                             	
  25                             	/* CPU-dependent definition */
  26                             	#include "../cpu/rx65n/sysdef.h"
   1                             	ï»¿/*
   2                             	 *----------------------------------------------------------------------
   3                             	 *    micro T-Kernel 3.00.06.B0
   4                             	 *
   5                             	 *    Copyright (C) 2022 by Ken Sakamura.
   6                             	 *    This software is distributed under the T-License 2.2.
   7                             	 *----------------------------------------------------------------------
   8                             	 *
   9                             	 *    Released by TRON Forum(http://www.tron.org) at 2022/04.
  10                             	 *
  11                             	 *----------------------------------------------------------------------
  12                             	 */
  13                             	
  14                             	/*
  15                             	 *	sysdef.h
  16                             	 *
  17                             	 *	System dependencies definition (RX65N CPU depended)
  18                             	 *	Included also from assembler program.
  19                             	 */
  20                             	
  21                             	#ifndef __TK_SYSDEF_DEPEND_CPU_H__
  22                             	#define __TK_SYSDEF_DEPEND_CPU_H__
  23                             	
  24                             	
  25                             	/* CPU Core-dependent definition */
  26                             	#include "../core/rxv2/sysdef.h"
   1                             	/*
  27                             	
  27                             	
  29                             	
  27                             	#include <sys/knldef.h>
   1                             	/*
  28                             	
  29                             	#include "offset.h"
   1                             	/*
  30                             	
  31                             		.extern	Csym(knl_tmp_stack)
  32                             		.extern	Csym(knl_dispatch_disabled)
  33                             		.extern	Csym(knl_ctxtsk)
  34                             		.extern	Csym(knl_schedtsk)
  35                             		.extern	Csym(knl_lowpow_discnt)
  36                             		.extern	Csym(low_pow)
  37                             	
  38                             	/* ------------------------------------------------------------------------*/
  39                             	/*
  40                             	 * Dispatcher
  41                             	 *	dispatch_to_schedtsk:
  42                             	 *		Destroys the current context and forces dispatch to "schedtsk".
  43                             	 *			Called directly by a jump (jmp), but does not return.
  44                             	 *			Called with an undefined stack state (undefined 'ssp').
  45                             	 *			Called when interrupts are disabled.
  46                             	 *	dispatch_entry:
  47                             	 *		Normal dispatch processing.
  48                             	 *	ret_int_dispatch:
  49                             	 *		Called when dispatch is required with "tk_ret_int ()".
  50                             	 *
  51                             	 *	Contexts to save
  52                             	 *		Saves registers other than SP to the stack. Save the SP to TCB.
  53                             	 *
  54                             	 *		   High Address	+---------------+
  55                             	 *				| SPSW(32bit)	| Saved by interrupt entry
  56                             	 *				| SPC(32bit)	| routines until here.
  57                             	 *				+---------------+
  58                             	 *				| R15		|
  59                             	 *				| R14		|
  60                             	 *				| R13		|
  61                             	 *				|  :		|
  62                             	 *				| R3		|
  63                             	 *				| R2		|
  64                             	 *	Saved to TCB  SP =>	| R1		|-> If USE_FPU,	  | R1		  |-> If USE_DSP,  | R1		   |
  65                             	 *		    Low Address	+---------------+	 SP =>	  | FPSW	  |		   | ACC1	   |
  66                             	 *						      Low Address +---------------+	SP =>	   | ACC0	   |
  67                             	 *										       Low Address +---------------+
  68                             	 */
  69                             		.globl Csym(knl_dispatch_to_schedtsk)
  70                             		.globl Csym(knl_dispatch_entry)
  71                             		.globl Csym(ret_int_dispatch)
  72                             	
  73                             		.section .text
  74                             	Csym(knl_dispatch_to_schedtsk):				// Forces dispatch entry
  75                             		; During interrupt disable (PSW.I=0)
  76 0000 FB 02 00 00 00 00       		mov.l	#(Csym(knl_tmp_stack) + TMP_STACK_SIZE), r0	// Set temporal stack
  77                             	
  78 0006 FB 12 00 00 00 00       		mov.l	#Csym(knl_dispatch_disabled), r1
  79 000c F8 16 01                		mov.l	#1, [r1]				// Dispatch disable
  80                             	
  81 000f FB 72 00 00 00 00       		mov.l	#Csym(knl_ctxtsk), r7			
  82                             	#if USE_DBGSPT != 0
  83                             		mov.l	[r7], r2				// r2 := ctxtsk
  84                             	#endif
  85 0015 F8 76 00                		mov.l	#0, [r7]				// ctxtsk = NULL
  86 0018 75 70 00                		mvtipl	#0					// IPL = 0 (Lowest level)
  87 001b 2E 27                   		bra	l_dispatch1
  88                             	
  89                             	Csym(knl_dispatch_entry):				// Normal dispatch entry
  90                             		// During interrupt disable (PSW.I=0).
  91 001d FD 6A 01                		mvfc	psw, r1
  92 0020 79 01                   		bset	#16, r1					// PSW compensation (I=1)
  93 0022 06 A0 10 01             		xchg	[r0], r1
  94 0026 7E A1                   		push.l	r1
  95                             	
  96                             	Csym(ret_int_dispatch):					// tk_ret_int() dispatch entry
  97                             		// During interrupt disable (PSW.I=0).
  98 0028 6E EF                   		pushm	r14-r15
  99 002a FB F2 00 00 00 00       		mov.l	#Csym(knl_dispatch_disabled), r15
 100 0030 F8 F6 01                		mov.l	#1, [r15]				// Dispatch disable
 101 0033 6E 1D                   		pushm	r1-r13					// Context save
 102                             	
 103                             	#if USE_FPU						// Save FPU registers
 104                             		mvfc	fpsw, r1
 105                             		push.l	r1
 106                             	#endif
 107                             	
 108                             	#if USE_DSP						// Save DSP registers
 109                             		mvfaclo #0,a1,r2
 110                             		mvfachi #0,a1,r3
 111                             		mvfacgu	#0,a1,r4
 112                             		pushm	r2-r4
 113                             		mvfaclo #0,a0,r2
 114                             		mvfachi #0,a0,r3
 115                             		mvfacgu	#0,a0,r4
 116                             		pushm	r2-r4
 117                             	#endif
 118 0035 FB 72 00 00 00 00       		mov.l	#Csym(knl_ctxtsk), r7
 119 003b EC 72                   		mov.l	[r7], r2
 120 003d A1 A0                   		mov.l	r0, (TCB_tskctxb + CTXB_ssp)[r2]	// Save SSP to ctxtsk's TCB
 121                             	
 122 003f 75 70 00                		mvtipl	#0				// IPL = 0 (Lowest level)
 123                             	l_dispatch1:
 124 0042 7F B8                   		clrpsw	I				// Interrupt disable
 125                             	
 126 0044 FB 22 00 00 00 00       		mov.l	#Csym(knl_schedtsk), r2
 127 004a EC 26                   		mov.l	[r2], r6
 128 004c 61 06                   		cmp	#0, r6				// ? schedtsk == NULL
 129 004e 21 19                   		bne	l_dispatch2			//	No. goto l_dispatch2
 130                             							//	Yes.
 131                             		// Move to power saving mode because there are no tasks to perform.
 132 0050 FB 12 00 00 00 00       		mov.l	#Csym(knl_lowpow_discnt), r1 
 133 0056 EC 11                   		mov.l	[r1], r1			// Is 'low_pow' disabled?
 134 0058 61 01                   		cmp	#0, r1
 135 005a 19                      		bne	l_dispatch11
 136                             	
 137 005b FB 12 00 00 00 00       		mov.l	#Csym(low_pow), r1
 138 0061 7F 11                   		jsr	r1				// Move to power saving mode. call low_pow().
 139                             	l_dispatch11:
 140                             	
 141 0063 7F A8                   		setpsw	I				// Interrupt enable
 142 0065 2E DD                   		bra	l_dispatch1
 143                             	
 144                             	l_dispatch2:					// Switch to 'schedtsk'
 145                             		// During interrupt disable (PSW.I=0).
 146 0067 E3 76                   		mov.l	r6, [r7]				// ctxtsk := schedtsk
 147 0069 A9 E0                   		mov.l	(TCB_tskctxb + CTXB_ssp)[r6], r0	// Restore SSP from TCB
 148                             	
 149 006b FB 22 00 00 00 00       		mov.l	#Csym(knl_dispatch_disabled), r2
 150 0071 F8 26 00                		mov.l	#0, [r2]				// Dispatch enable
 151                             		
 152                             	#if USE_DSP					// Restore DSP register.
 153                             		popm	r2-r4
 154                             		mvtacgu	r4,a0
 155                             		mvtachi r3,a0
 156                             		mvtaclo r2,a0
 157                             		popm	r2-r4
 158                             		mvtacgu	r4,a1
 159                             		mvtachi r3,a1
 160                             		mvtaclo r2,a1
 161                             	#endif
 162                             	
 163                             	#if USE_FPU					// Restore FPU register.
 164                             		pop	r1
 165                             		mvtc	r1, fpsw
 166                             	#endif
 167                             	
 168 0074 6F 1F                   		popm	r1-r15				// Restore context.
 169 0076 7F 95                   		rte
 170                             	
 171                             		.end
