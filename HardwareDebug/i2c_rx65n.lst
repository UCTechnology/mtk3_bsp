   1                             		.file	"i2c_rx65n.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   5                             	_out_w:
   6                             	.LFB0:
   7                             		.file 1 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\include\\tk\\sysdepend\\cpu\\rx65n\\sysli
   1:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /*
   2:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *----------------------------------------------------------------------
   3:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *    micro T-Kernel 3.00.06.B0
   4:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *
   5:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *    Copyright (C) 2022 by Ken Sakamura.
   6:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *    This software is distributed under the T-License 2.2.
   7:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *----------------------------------------------------------------------
   8:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *
   9:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *    Released by TRON Forum(http://www.tron.org) at 2022/04.
  10:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *
  11:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *----------------------------------------------------------------------
  12:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  */
  13:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /*
  14:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *	syslib.h
  15:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *
  16:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *	micro T-Kernel System Library  (RX65N depended)
  17:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  */
  18:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  19:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #ifndef __TK_SYSLIB_CPU_DEPEND_H__
  20:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define __TK_SYSLIB_CPU_DEPEND_H__
  21:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  22:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #include "../core/rxv2/syslib.h"
  23:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  24:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /*----------------------------------------------------------------------*/
  25:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /*
  26:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  * Interrupt controller Control
  27:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *
  28:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  */
  29:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define IM_LEVEL	0x0004		/* Level trigger */
  30:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define IM_EDGE		0x0000		/* Edge trigger */
  31:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  32:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define IM_HI		0x0000		/* H level/Interrupt at rising edge */
  33:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define IM_LOW		0x0001		/* L level/Interrupt at falling edge */
  34:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define IM_BOTH		0x0003		/* L level/Interrupt at both edge */
  35:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  36:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  37:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /* 
  38:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  * Set Software Configurable Interrupt (PERIA & PERIB)
  39:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  */
  40:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** IMPORT ER SetPERI(UINT intno, UINT fctno);
  41:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  42:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  43:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /* ------------------------------------------------------------------------ */
  44:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /*
  45:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  * I/O port access
  46:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *	for memory mapped I/O
  47:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  */
  48:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline void out_w( UW port, UW data )
  49:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
   8                             		.loc 1 49 1
   9 0000 7E AA                   		push.l	r10
  10                             	.LCFI0:
  11 0002 71 0A F8                		add	#-8, r0, r10
  12                             	.LCFI1:
  13 0005 EF A0                   		mov.L	r10, r0
  14 0007 E3 A1                   		mov.L	r1, [r10]
  15 0009 E7 A2 01                		mov.L	r2, 4[r10]
  50:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	*(_UW*)port = data;
  16                             		.loc 1 50 3
  17 000c EC A5                   		mov.L	[r10], r5
  18                             		.loc 1 50 14
  19 000e ED A4 01                		mov.L	4[r10], r4
  20 0011 E3 54                   		mov.L	r4, [r5]
  51:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  21                             		.loc 1 51 1
  22 0013 03                      		nop
  23 0014 3F AA 03                		rtsd	#12, r10-r10
  24                             	.LFE0:
  27                             	_out_b:
  28                             	.LFB2:
  52:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline void out_h( UW port, UH data )
  53:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
  54:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	*(_UH*)port = data;
  55:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  56:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline void out_b( UW port, UB data )
  57:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
  29                             		.loc 1 57 1
  30 0017 7E AA                   		push.l	r10
  31                             	.LCFI2:
  32 0019 71 0A F8                		add	#-8, r0, r10
  33                             	.LCFI3:
  34 001c EF A0                   		mov.L	r10, r0
  35 001e E3 A1                   		mov.L	r1, [r10]
  36 0020 C7 A2 04                		mov.B	r2, 4[r10]
  58:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	*(_UB*)port = data;
  37                             		.loc 1 58 3
  38 0023 EC A5                   		mov.L	[r10], r5
  39                             		.loc 1 58 14
  40 0025 CD A4 04                		mov.B	4[r10], r4
  41 0028 C3 54                   		mov.B	r4, [r5]
  59:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  42                             		.loc 1 59 1
  43 002a 03                      		nop
  44 002b 3F AA 03                		rtsd	#12, r10-r10
  45                             	.LFE2:
  48                             	_in_w:
  49                             	.LFB3:
  60:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  61:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline UW in_w( UW port )
  62:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
  50                             		.loc 1 62 1
  51 002e 7E AA                   		push.l	r10
  52                             	.LCFI4:
  53 0030 71 0A FC                		add	#-4, r0, r10
  54                             	.LCFI5:
  55 0033 EF A0                   		mov.L	r10, r0
  56 0035 E3 A1                   		mov.L	r1, [r10]
  63:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	return *(_UW*)port;
  57                             		.loc 1 63 10
  58 0037 EC A5                   		mov.L	[r10], r5
  59                             		.loc 1 63 9
  60 0039 EC 55                   		mov.L	[r5], r5
  64:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  61                             		.loc 1 64 1
  62 003b EF 51                   		mov.L	r5, r1
  63 003d 3F AA 02                		rtsd	#8, r10-r10
  64                             	.LFE3:
  67                             	_in_b:
  68                             	.LFB5:
  65:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline UH in_h( UW port )
  66:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
  67:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	return *(_UH*)port;
  68:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  69:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline UB in_b( UW port )
  70:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
  69                             		.loc 1 70 1
  70 0040 7E AA                   		push.l	r10
  71                             	.LCFI6:
  72 0042 71 0A FC                		add	#-4, r0, r10
  73                             	.LCFI7:
  74 0045 EF A0                   		mov.L	r10, r0
  75 0047 E3 A1                   		mov.L	r1, [r10]
  71:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	return *(_UB*)port;
  76                             		.loc 1 71 10
  77 0049 EC A5                   		mov.L	[r10], r5
  78                             		.loc 1 71 9
  79 004b CC 55                   		mov.B	[r5], r5
  80 004d 5B 55                   		movu.B	r5, r5
  72:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_rskrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  81                             		.loc 1 72 1
  82 004f EF 51                   		mov.L	r5, r1
  83 0051 3F AA 02                		rtsd	#8, r10-r10
  84                             	.LFE5:
  86                             		.section C,"a",@progbits
  87                             		.p2align 2
  88                             		.balign 4
  91                             	_ba:
  92 0000 00 83 08 00             		.long	0x88300
  93 0004 20 83 08 00             		.long	0x88320
  94 0008 40 83 08 00             		.long	0x88340
  95                             		.balign 4
  98                             	_ll_devdat:
  99 000c 34 00 00 00             		.long	52
 100 0010 35 00 00 00             		.long	53
 101 0014 05 00 00 00             		.long	5
 102 0018 E8 03 00 00             		.long	0x3e8
 103 001c 32 00 00 00             		.long	50
 104 0020 33 00 00 00             		.long	51
 105 0024 05 00 00 00             		.long	5
 106 0028 E8 03 00 00             		.long	0x3e8
 107 002c 36 00 00 00             		.long	54
 108 0030 37 00 00 00             		.long	55
 109 0034 05 00 00 00             		.long	5
 110 0038 E8 03 00 00             		.long	0x3e8
 111                             		.comm	_ll_devcb,96,4
 112                             		.section P,"ax"
 114                             	_i2c_txi_inthdr:
 115                             	.LFB6:
 116                             		.file 2 "../device/i2c/sysdepend/rx65n/i2c_rx65n.c"
   1:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** ﻿/*
   2:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  *----------------------------------------------------------------------
   3:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  *    Device Driver for μT-Kernel 3.0
   4:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  *
   5:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  *    Copyright (C) 2020-2022 by Ken Sakamura.
   6:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  *    This software is distributed under the T-License 2.2.
   7:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  *----------------------------------------------------------------------
   8:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  *
   9:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  *    Released by TRON Forum(http://www.tron.org) at 2022/04.
  10:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  *
  11:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  *----------------------------------------------------------------------
  12:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  */
  13:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
  14:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #include <sys/machine.h>
  15:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #ifdef CPU_RX65N
  16:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
  17:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #include <tk/tkernel.h>
  18:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #include "../../i2c.h"
  19:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #include "../../../include/dev_def.h"
  20:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #if DEV_IIC_ENABLE
  21:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** /*
  22:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  *	i2c_rx65n.c
  23:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****   *	I2C device driver
  24:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  *	System-dependent definition for RX65N
  25:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  */
  26:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
  27:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** /*----------------------------------------------------------------------
  28:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  * Device register base address
  29:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** */
  30:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** const LOCAL UW ba[DEV_I2C_UNITNM] = { RIIC0_BASE, RIIC1_BASE, RIIC2_BASE };
  31:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
  32:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #define	RIIC_ICCR1(x)		(ba[x] + RIICx_ICCR1)	/* I2C bus cintrol reg. 1 */
  33:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #define	RIIC_ICCR2(x)		(ba[x] + RIICx_ICCR2)	/* I2C bus cintrol reg. 2 */
  34:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #define RIIC_ICMR1(x)		(ba[x] + RIICx_ICMR1)	/* I2C bus mode reg. 1 */
  35:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #define RIIC_ICMR2(x)		(ba[x] + RIICx_ICMR2)	/* I2C bus mode reg. 2 */
  36:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #define RIIC_ICMR3(x)		(ba[x] + RIICx_ICMR3)	/* I2C bus mode reg. 3 */
  37:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #define	RIIC_ICFER(x)		(ba[x] + RIICx_ICFER)	/* I2C bus function enable reg */
  38:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #define	RIIC_ICSER(x)		(ba[x] + RIICx_ICSER)	/* I2C bus Status enable reg. */
  39:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #define	RIIC_ICIER(x)		(ba[x] + RIICx_ICIER)	/* I2C bus Interrupt enable reg. */
  40:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #define	RIIC_ICSR1(x)		(ba[x] + RIICx_ICSR1)	/* I2C bus Status reg. 1 */
  41:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #define	RIIC_ICSR2(x)		(ba[x] + RIICx_ICSR2)	/* I2C bus Status reg. 2 */
  42:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
  43:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #define	RIIC_SARL(x,y)		(ba[x] + RIICx_SARL(y))	/* Slave address reg. L0~2 */
  44:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #define	RIIC_SARU(x,y)		(ba[x] + RIICx_SARU(y))	/* Slave address reg. U0~2 */
  45:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
  46:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #define	RIIC_ICBRL(x)		(ba[x] + RIICx_ICBRL)	/* I2C bus bit rate Low reg. */
  47:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #define	RIIC_ICBRH(x)		(ba[x] + RIICx_ICBRH)	/* I2C bus bit rate High reg. */
  48:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #define	RIIC_ICDRT(x)		(ba[x] + RIICx_ICDRT)	/* I2C bus transmit data reg. */
  49:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #define	RIIC_ICDRR(x)		(ba[x] + RIICx_ICDRR)	/* I2C bus receive data reg. */
  50:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
  51:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** /*----------------------------------------------------------------------
  52:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  * Device data
  53:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** */
  54:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** const LOCAL struct {
  55:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	UINT	intno_rxi;	// Interrupt number (RXI)
  56:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	UINT	intno_txi;	// Interrupt number (TXI)
  57:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	PRI	intpri;		// Interrupt priority
  58:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	TMO	timout;		// I2C timeout time
  59:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** } ll_devdat[DEV_I2C_UNITNM] = {
  60:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	{
  61:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		.intno_rxi	= INTNO_RIIC0_RXI,
  62:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		.intno_txi	= INTNO_RIIC0_TXI,
  63:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		.intpri		= DEVCNF_I2C0_INTPRI,
  64:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		.timout		= DEVCNF_I2C0_TMO,
  65:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	},
  66:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	{
  67:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		.intno_rxi	= INTNO_RIIC1_RXI,
  68:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		.intno_txi	= INTNO_RIIC1_TXI,
  69:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		.intpri		= DEVCNF_I2C1_INTPRI,
  70:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		.timout		= DEVCNF_I2C1_TMO,
  71:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	},
  72:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	{
  73:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		.intno_rxi	= INTNO_RIIC2_RXI,
  74:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		.intno_txi	= INTNO_RIIC2_TXI,
  75:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		.intpri		= DEVCNF_I2C2_INTPRI,
  76:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		.timout		= DEVCNF_I2C2_TMO,
  77:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	},
  78:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** };
  79:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
  80:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** /*----------------------------------------------------------------------
  81:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  * Device control data
  82:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** */
  83:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** typedef struct {
  84:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	ID	wait_tskid;	/* Wait Task ID */
  85:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	UW	state;		/* Operating state */
  86:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	UW	sadr;		/* Slave address */
  87:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	ER	ioerr;		/* Communication error */
  88:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	UW	sdat_num;	/* Number of send data */
  89:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	UW	rdat_num;	/* Number of receive data */
  90:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	UB	*sbuf;		/* Send buffer */
  91:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	UB	*rbuf;		/* Receive buffer */
  92:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** } T_I2C_LLDCB;
  93:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
  94:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** T_I2C_LLDCB	ll_devcb[DEV_I2C_UNITNM];
  95:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
  96:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** /*-------------------------------------------------------
  97:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  * Interrupt handler
  98:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  *-------------------------------------------------------
  99:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  */
 100:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** /*
 101:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  * TXI: Transmit data empty interrupt
 102:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  */
 103:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** LOCAL void i2c_txi_inthdr( UINT intno )
 104:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** {
 117                             		.loc 2 104 1
 118 0054 7E AA                   		push.l	r10
 119                             	.LCFI8:
 120 0056 71 0A F0                		add	#-16, r0, r10
 121                             	.LCFI9:
 122 0059 EF A0                   		mov.L	r10, r0
 123 005b E7 A1 03                		mov.L	r1, 12[r10]
 105:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	T_I2C_LLDCB	*p_cb;
 106:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	INT		unit;
 107:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	UB		reg;
 108:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 109:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	for ( unit = 0; unit < DEV_I2C_UNITNM; unit++ ) {
 124                             		.loc 2 109 13
 125 005e F9 A6 01 00             		mov.L	#0, 4[r10]
 126                             		.loc 2 109 2
 127 0062 2E 31                   		bra	.L8
 128                             	.L11:
 110:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		if ( ll_devdat[unit].intno_txi == intno ) {
 129                             		.loc 2 110 23
 130 0064 FB 42 0C 00 00 00       		mov.L	#_ll_devdat, r4
 131 006a ED A5 01                		mov.L	4[r10], r5
 132 006d 6C 45                   		shll	#4, r5
 133 006f 4B 45                   		add	r4, r5
 134 0071 62 45                   		add	#4, r5
 135 0073 EC 55                   		mov.L	[r5], r5
 136                             		.loc 2 110 6
 137 0075 ED A4 03                		mov.L	12[r10], r4
 138 0078 47 54                   		cmp	r5, r4
 139 007a 21 11                   		bne	.L9
 111:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			p_cb = &ll_devcb[unit];
 140                             		.loc 2 111 9
 141 007c ED A5 01                		mov.L	4[r10], r5
 142 007f 6C 55                   		shll	#5, r5
 143 0081 70 55 00 00 00 00       		add	#_ll_devcb, r5
 144 0087 E3 A5                   		mov.L	r5, [r10]
 112:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			break;
 145                             		.loc 2 112 4
 146 0089 2E 11                   		bra	.L10
 147                             	.L9:
 109:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		if ( ll_devdat[unit].intno_txi == intno ) {
 148                             		.loc 2 109 45 discriminator 2
 149 008b ED A5 01                		mov.L	4[r10], r5
 150 008e 62 15                   		add	#1, r5
 151 0090 E7 A5 01                		mov.L	r5, 4[r10]
 152                             	.L8:
 109:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		if ( ll_devdat[unit].intno_txi == intno ) {
 153                             		.loc 2 109 2 discriminator 1
 154 0093 ED A5 01                		mov.L	4[r10], r5
 155 0096 61 25                   		cmp	#2, r5
 156 0098 2B CC                   		ble	.L11
 157                             	.L10:
 113:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		}
 114:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	}
 115:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	if(unit >= DEV_I2C_UNITNM) {
 158                             		.loc 2 115 4
 159 009a ED A5 01                		mov.L	4[r10], r5
 160 009d 61 25                   		cmp	#2, r5
 161 009f 2B 0C                   		ble	.L12
 116:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		ClearInt(intno);	// Clear interrupt
 162                             		.loc 2 116 3
 163 00a1 ED A1 03                		mov.L	12[r10], r1
 164 00a4 05 00 00 00             		bsr	_ClearInt
 117:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		return;
 165                             		.loc 2 117 3
 166 00a8 38 28 01                		bra	.L7
 167                             	.L12:
 118:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	}
 119:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 120:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	switch(p_cb->state) {
 168                             		.loc 2 120 13
 169 00ab EC A5                   		mov.L	[r10], r5
 170 00ad A8 5D                   		mov.L	4[r5], r5
 171                             		.loc 2 120 2
 172 00af 61 05                   		cmp	#0, r5
 173 00b1 11                      		beq	.L14
 174 00b2 61 45                   		cmp	#4, r5
 175 00b4 3A 9B 00                		beq	.L15
 176 00b7 38 19 01                		bra	.L7
 177                             	.L14:
 121:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	case I2C_STS_START:
 122:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		if(p_cb->sdat_num > 0 ) {	/* Send */
 178                             		.loc 2 122 10
 179 00ba EC A5                   		mov.L	[r10], r5
 180 00bc A9 55                   		mov.L	16[r5], r5
 181                             		.loc 2 122 5
 182 00be 61 05                   		cmp	#0, r5
 183 00c0 20 31                   		beq	.L16
 123:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			out_b(RIIC_ICDRT(unit), ll_devcb[unit].sadr);
 184                             		.loc 2 123 10
 185 00c2 FB 52 00 00 00 00       		mov.L	#_ba, r5
 186 00c8 ED A4 01                		mov.L	4[r10], r4
 187 00cb FE 64 55                		mov.L	[r4,r5], r5
 188                             		.loc 2 123 4
 189 00ce 71 53 12                		add	#18, r5, r3
 190                             		.loc 2 123 42
 191 00d1 FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 192 00d7 ED A5 01                		mov.L	4[r10], r5
 193 00da 6C 55                   		shll	#5, r5
 194 00dc 4B 45                   		add	r4, r5
 195 00de 62 85                   		add	#8, r5
 196 00e0 EC 55                   		mov.L	[r5], r5
 197                             		.loc 2 123 4
 198 00e2 CF 52                   		mov.B	r5, r2
 199 00e4 EF 31                   		mov.L	r3, r1
 200 00e6 39 31 FF                		bsr	_out_b
 124:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			p_cb->state = I2C_STS_SEND;
 201                             		.loc 2 124 16
 202 00e9 EC A5                   		mov.L	[r10], r5
 203 00eb 3E 51 04                		mov.L	#4, 4[r5]
 125:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		} else {			/* Receive */
 126:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			out_b(RIIC_ICDRT(unit), (p_cb->sadr|1));
 127:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			reg = in_b(RIIC_ICIER(unit));
 128:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			out_b(RIIC_ICIER(unit), (reg | RIIC_ICIER_RIE) & ~RIIC_ICIER_TIE);
 129:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			p_cb->state = I2C_STS_RECV | I2C_STS_TOP;
 130:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		}
 131:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		break;
 204                             		.loc 2 131 3
 205 00ee 38 E2 00                		bra	.L7
 206                             	.L16:
 126:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			reg = in_b(RIIC_ICIER(unit));
 207                             		.loc 2 126 10
 208 00f1 FB 52 00 00 00 00       		mov.L	#_ba, r5
 209 00f7 ED A4 01                		mov.L	4[r10], r4
 210 00fa FE 64 55                		mov.L	[r4,r5], r5
 126:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			reg = in_b(RIIC_ICIER(unit));
 211                             		.loc 2 126 4
 212 00fd 71 54 12                		add	#18, r5, r4
 126:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			reg = in_b(RIIC_ICIER(unit));
 213                             		.loc 2 126 33
 214 0100 EC A5                   		mov.L	[r10], r5
 215 0102 A8 D5                   		mov.L	8[r5], r5
 126:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			reg = in_b(RIIC_ICIER(unit));
 216                             		.loc 2 126 4
 217 0104 65 15                   		or	#1, r5
 218 0106 CF 52                   		mov.B	r5, r2
 219 0108 EF 41                   		mov.L	r4, r1
 220 010a 39 0D FF                		bsr	_out_b
 127:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			out_b(RIIC_ICIER(unit), (reg | RIIC_ICIER_RIE) & ~RIIC_ICIER_TIE);
 221                             		.loc 2 127 15
 222 010d FB 52 00 00 00 00       		mov.L	#_ba, r5
 223 0113 ED A4 01                		mov.L	4[r10], r4
 224 0116 FE 64 55                		mov.L	[r4,r5], r5
 127:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			out_b(RIIC_ICIER(unit), (reg | RIIC_ICIER_RIE) & ~RIIC_ICIER_TIE);
 225                             		.loc 2 127 10
 226 0119 62 75                   		add	#7, r5
 227 011b EF 51                   		mov.L	r5, r1
 228 011d 39 23 FF                		bsr	_in_b
 229 0120 EF 15                   		mov.L	r1, r5
 230 0122 C7 A5 08                		mov.B	r5, 8[r10]
 128:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			p_cb->state = I2C_STS_RECV | I2C_STS_TOP;
 231                             		.loc 2 128 10
 232 0125 FB 52 00 00 00 00       		mov.L	#_ba, r5
 233 012b ED A4 01                		mov.L	4[r10], r4
 234 012e FE 64 55                		mov.L	[r4,r5], r5
 128:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			p_cb->state = I2C_STS_RECV | I2C_STS_TOP;
 235                             		.loc 2 128 4
 236 0131 71 54 07                		add	#7, r5, r4
 128:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			p_cb->state = I2C_STS_RECV | I2C_STS_TOP;
 237                             		.loc 2 128 51
 238 0134 CD A5 08                		mov.B	8[r10], r5
 239 0137 75 35 20                		or	#32, r5
 128:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			p_cb->state = I2C_STS_RECV | I2C_STS_TOP;
 240                             		.loc 2 128 4
 241 013a 75 25 7F                		and	#0x7f, r5
 242 013d CF 52                   		mov.B	r5, r2
 243 013f EF 41                   		mov.L	r4, r1
 244 0141 39 D6 FE                		bsr	_out_b
 129:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		}
 245                             		.loc 2 129 16
 246 0144 EC A5                   		mov.L	[r10], r5
 247 0146 F9 5E 01 05 80 00       		mov.L	#0x8005, 4[r5]
 248                             		.loc 2 131 3
 249 014c 38 84 00                		bra	.L7
 250                             	.L15:
 132:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 133:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	case I2C_STS_SEND:
 134:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		if(--(p_cb->sdat_num) <= 0) {
 251                             		.loc 2 134 13
 252 014f EC A5                   		mov.L	[r10], r5
 253 0151 A9 55                   		mov.L	16[r5], r5
 254                             		.loc 2 134 6
 255 0153 71 54 FF                		add	#-1, r5, r4
 256                             		.loc 2 134 5
 257 0156 EC A5                   		mov.L	[r10], r5
 258 0158 A1 54                   		mov.L	r4, 16[r5]
 259                             		.loc 2 134 13
 260 015a EC A5                   		mov.L	[r10], r5
 261 015c A9 55                   		mov.L	16[r5], r5
 262                             		.loc 2 134 5
 263 015e 61 05                   		cmp	#0, r5
 264 0160 21 4B                   		bne	.L18
 135:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			if(p_cb->rdat_num == 0) {
 265                             		.loc 2 135 11
 266 0162 EC A5                   		mov.L	[r10], r5
 267 0164 A9 5D                   		mov.L	20[r5], r5
 268                             		.loc 2 135 6
 269 0166 61 05                   		cmp	#0, r5
 270 0168 1F                      		bne	.L19
 136:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 				p_cb->state = I2C_STS_STOP;
 271                             		.loc 2 136 17
 272 0169 EC A5                   		mov.L	[r10], r5
 273 016b 3E 51 03                		mov.L	#3, 4[r5]
 274 016e 0E                      		bra	.L20
 275                             	.L19:
 137:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			} else {
 138:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 				p_cb->state = I2C_STS_RESTART;
 276                             		.loc 2 138 17
 277 016f EC A5                   		mov.L	[r10], r5
 278 0171 3E 51 01                		mov.L	#1, 4[r5]
 279                             	.L20:
 139:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			}
 140:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			reg = in_b(RIIC_ICIER(unit));
 280                             		.loc 2 140 15
 281 0174 FB 52 00 00 00 00       		mov.L	#_ba, r5
 282 017a ED A4 01                		mov.L	4[r10], r4
 283 017d FE 64 55                		mov.L	[r4,r5], r5
 284                             		.loc 2 140 10
 285 0180 62 75                   		add	#7, r5
 286 0182 EF 51                   		mov.L	r5, r1
 287 0184 39 BC FE                		bsr	_in_b
 288 0187 EF 15                   		mov.L	r1, r5
 289 0189 C7 A5 08                		mov.B	r5, 8[r10]
 141:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			out_b(RIIC_ICIER(unit), (reg | RIIC_ICIER_TEIE) & ~RIIC_ICIER_TIE);
 290                             		.loc 2 141 10
 291 018c FB 52 00 00 00 00       		mov.L	#_ba, r5
 292 0192 ED A4 01                		mov.L	4[r10], r4
 293 0195 FE 64 55                		mov.L	[r4,r5], r5
 294                             		.loc 2 141 4
 295 0198 71 54 07                		add	#7, r5, r4
 296                             		.loc 2 141 52
 297 019b CD A5 08                		mov.B	8[r10], r5
 298 019e 75 35 40                		or	#0x40, r5
 299                             		.loc 2 141 4
 300 01a1 75 25 7F                		and	#0x7f, r5
 301 01a4 CF 52                   		mov.B	r5, r2
 302 01a6 EF 41                   		mov.L	r4, r1
 303 01a8 39 6F FE                		bsr	_out_b
 304                             	.L18:
 142:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		}
 143:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		out_b(RIIC_ICDRT(unit), *(p_cb->sbuf)++);
 305                             		.loc 2 143 9
 306 01ab FB 52 00 00 00 00       		mov.L	#_ba, r5
 307 01b1 ED A4 01                		mov.L	4[r10], r4
 308 01b4 FE 64 55                		mov.L	[r4,r5], r5
 309                             		.loc 2 143 3
 310 01b7 71 53 12                		add	#18, r5, r3
 311                             		.loc 2 143 33
 312 01ba EC A5                   		mov.L	[r10], r5
 313 01bc A9 D5                   		mov.L	24[r5], r5
 314                             		.loc 2 143 40
 315 01be 71 52 01                		add	#1, r5, r2
 316 01c1 EC A4                   		mov.L	[r10], r4
 317 01c3 A1 C2                   		mov.L	r2, 24[r4]
 318                             		.loc 2 143 3
 319 01c5 CC 55                   		mov.B	[r5], r5
 320 01c7 CF 52                   		mov.B	r5, r2
 321 01c9 EF 31                   		mov.L	r3, r1
 322 01cb 39 4C FE                		bsr	_out_b
 144:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		break;
 323                             		.loc 2 144 3
 324 01ce 03                      		nop
 325 01cf 03                      		.balign 8,3,2
 326                             	.L7:
 145:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	}
 146:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** }
 327                             		.loc 2 146 1
 328 01d0 3F AA 05                		rtsd	#20, r10-r10
 329                             	.LFE6:
 332                             	_i2c_rxi_inthdr:
 333                             	.LFB7:
 147:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 148:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** LOCAL void i2c_rxi_inthdr( UINT intno )
 149:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** {
 334                             		.loc 2 149 1
 335 01d3 7E AA                   		push.l	r10
 336                             	.LCFI10:
 337 01d5 7E A6                   		push.l	r6
 338                             	.LCFI11:
 339 01d7 71 0A F0                		add	#-16, r0, r10
 340                             	.LCFI12:
 341 01da EF A0                   		mov.L	r10, r0
 342 01dc E7 A1 03                		mov.L	r1, 12[r10]
 150:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	T_I2C_LLDCB	*p_cb;
 151:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	INT		unit;
 152:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	UB		reg;
 153:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 154:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	for ( unit = 0; unit < DEV_I2C_UNITNM; unit++ ) {
 343                             		.loc 2 154 13
 344 01df F9 A6 01 00             		mov.L	#0, 4[r10]
 345                             		.loc 2 154 2
 346 01e3 2E 2F                   		bra	.L22
 347                             	.L25:
 155:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		if ( ll_devdat[unit].intno_rxi == intno ) {
 348                             		.loc 2 155 23
 349 01e5 FB 42 0C 00 00 00       		mov.L	#_ll_devdat, r4
 350 01eb ED A5 01                		mov.L	4[r10], r5
 351 01ee 6C 45                   		shll	#4, r5
 352 01f0 4B 45                   		add	r4, r5
 353 01f2 EC 55                   		mov.L	[r5], r5
 354                             		.loc 2 155 6
 355 01f4 ED A4 03                		mov.L	12[r10], r4
 356 01f7 47 54                   		cmp	r5, r4
 357 01f9 21 11                   		bne	.L23
 156:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			p_cb = &ll_devcb[unit];
 358                             		.loc 2 156 9
 359 01fb ED A5 01                		mov.L	4[r10], r5
 360 01fe 6C 55                   		shll	#5, r5
 361 0200 70 55 00 00 00 00       		add	#_ll_devcb, r5
 362 0206 E3 A5                   		mov.L	r5, [r10]
 157:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			break;
 363                             		.loc 2 157 4
 364 0208 2E 11                   		bra	.L24
 365                             	.L23:
 154:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		if ( ll_devdat[unit].intno_rxi == intno ) {
 366                             		.loc 2 154 45 discriminator 2
 367 020a ED A5 01                		mov.L	4[r10], r5
 368 020d 62 15                   		add	#1, r5
 369 020f E7 A5 01                		mov.L	r5, 4[r10]
 370                             	.L22:
 154:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		if ( ll_devdat[unit].intno_rxi == intno ) {
 371                             		.loc 2 154 2 discriminator 1
 372 0212 ED A5 01                		mov.L	4[r10], r5
 373 0215 61 25                   		cmp	#2, r5
 374 0217 2B CE                   		ble	.L25
 375                             	.L24:
 158:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		}
 159:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	}
 160:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	if(unit >= DEV_I2C_UNITNM) {
 376                             		.loc 2 160 4
 377 0219 ED A5 01                		mov.L	4[r10], r5
 378 021c 61 25                   		cmp	#2, r5
 379 021e 2B 0C                   		ble	.L26
 161:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		ClearInt(intno);	// Clear interrupt
 380                             		.loc 2 161 3
 381 0220 ED A1 03                		mov.L	12[r10], r1
 382 0223 05 00 00 00             		bsr	_ClearInt
 162:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		return;
 383                             		.loc 2 162 3
 384 0227 38 E9 01                		bra	.L21
 385                             	.L26:
 163:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	}
 164:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 165:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	switch(p_cb->state) {
 386                             		.loc 2 165 13
 387 022a EC A5                   		mov.L	[r10], r5
 388 022c A8 5D                   		mov.L	4[r5], r5
 389                             		.loc 2 165 2
 390 022e 76 05 05 08             		cmp	#0x805, r5
 391 0232 3A 16 01                		beq	.L28
 392 0235 77 05 05 80 00          		cmp	#0x8005, r5
 393 023a 10                      		beq	.L29
 394 023b 61 55                   		cmp	#5, r5
 395 023d 20 7E                   		beq	.L30
 396 023f 38 D1 01                		bra	.L21
 397                             	.L29:
 166:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	case I2C_STS_RECV | I2C_STS_TOP:
 167:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		if(p_cb->rdat_num <= 2) {	// Last data -2
 398                             		.loc 2 167 10
 399 0242 EC A5                   		mov.L	[r10], r5
 400 0244 A9 5D                   		mov.L	20[r5], r5
 401                             		.loc 2 167 5
 402 0246 61 25                   		cmp	#2, r5
 403 0248 24 25                   		bgtu	.L31
 168:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			*(UB*)RIIC_ICMR3(unit) |= RIIC_ICMR3_WAIT;
 404                             		.loc 2 168 10
 405 024a FB 52 00 00 00 00       		mov.L	#_ba, r5
 406 0250 ED A4 01                		mov.L	4[r10], r4
 407 0253 FE 64 55                		mov.L	[r4,r5], r5
 408 0256 62 45                   		add	#4, r5
 409                             		.loc 2 168 27
 410 0258 CC 54                   		mov.B	[r5], r4
 411                             		.loc 2 168 10
 412 025a FB 52 00 00 00 00       		mov.L	#_ba, r5
 413 0260 ED A3 01                		mov.L	4[r10], r3
 414 0263 FE 63 55                		mov.L	[r3,r5], r5
 415 0266 62 45                   		add	#4, r5
 416                             		.loc 2 168 27
 417 0268 75 34 40                		or	#0x40, r4
 418 026b C3 54                   		mov.B	r4, [r5]
 419                             	.L31:
 169:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		}
 170:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		if(p_cb->rdat_num == 1) {	//Next is the final data
 420                             		.loc 2 170 10
 421 026d EC A5                   		mov.L	[r10], r5
 422 026f A9 5D                   		mov.L	20[r5], r5
 423                             		.loc 2 170 5
 424 0271 61 15                   		cmp	#1, r5
 425 0273 21 2C                   		bne	.L32
 171:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			*(UB*)RIIC_ICMR3(unit) |= RIIC_ICMR3_ACKBT;
 426                             		.loc 2 171 10
 427 0275 FB 52 00 00 00 00       		mov.L	#_ba, r5
 428 027b ED A4 01                		mov.L	4[r10], r4
 429 027e FE 64 55                		mov.L	[r4,r5], r5
 430 0281 62 45                   		add	#4, r5
 431                             		.loc 2 171 27
 432 0283 CC 54                   		mov.B	[r5], r4
 433                             		.loc 2 171 10
 434 0285 FB 52 00 00 00 00       		mov.L	#_ba, r5
 435 028b ED A3 01                		mov.L	4[r10], r3
 436 028e FE 63 55                		mov.L	[r3,r5], r5
 437 0291 62 45                   		add	#4, r5
 438                             		.loc 2 171 27
 439 0293 65 84                   		or	#8, r4
 440 0295 C3 54                   		mov.B	r4, [r5]
 172:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			p_cb->state = I2C_STS_RECV | I2C_STS_LAST;
 441                             		.loc 2 172 16
 442 0297 EC A5                   		mov.L	[r10], r5
 443 0299 F9 5A 01 05 08          		mov.L	#0x805, 4[r5]
 444 029e 0E                      		bra	.L33
 445                             	.L32:
 173:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		} else {
 174:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			p_cb->state = I2C_STS_RECV;
 446                             		.loc 2 174 16
 447 029f EC A5                   		mov.L	[r10], r5
 448 02a1 3E 51 05                		mov.L	#5, 4[r5]
 449                             	.L33:
 175:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		}
 176:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		in_b(RIIC_ICDRR(unit));	// Dummy read
 450                             		.loc 2 176 8
 451 02a4 FB 52 00 00 00 00       		mov.L	#_ba, r5
 452 02aa ED A4 01                		mov.L	4[r10], r4
 453 02ad FE 64 55                		mov.L	[r4,r5], r5
 454                             		.loc 2 176 3
 455 02b0 71 55 13                		add	#19, r5
 456 02b3 EF 51                   		mov.L	r5, r1
 457 02b5 39 8B FD                		bsr	_in_b
 177:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		break;
 458                             		.loc 2 177 3
 459 02b8 38 58 01                		bra	.L21
 460                             	.L30:
 178:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 179:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	case I2C_STS_RECV:
 180:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		if(p_cb->rdat_num == 3) {	// Last data -2
 461                             		.loc 2 180 10
 462 02bb EC A5                   		mov.L	[r10], r5
 463 02bd A9 5D                   		mov.L	20[r5], r5
 464                             		.loc 2 180 5
 465 02bf 61 35                   		cmp	#3, r5
 466 02c1 21 25                   		bne	.L34
 181:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			*(UB*)RIIC_ICMR3(unit) |= RIIC_ICMR3_WAIT;
 467                             		.loc 2 181 10
 468 02c3 FB 52 00 00 00 00       		mov.L	#_ba, r5
 469 02c9 ED A4 01                		mov.L	4[r10], r4
 470 02cc FE 64 55                		mov.L	[r4,r5], r5
 471 02cf 62 45                   		add	#4, r5
 472                             		.loc 2 181 27
 473 02d1 CC 54                   		mov.B	[r5], r4
 474                             		.loc 2 181 10
 475 02d3 FB 52 00 00 00 00       		mov.L	#_ba, r5
 476 02d9 ED A3 01                		mov.L	4[r10], r3
 477 02dc FE 63 55                		mov.L	[r3,r5], r5
 478 02df 62 45                   		add	#4, r5
 479                             		.loc 2 181 27
 480 02e1 75 34 40                		or	#0x40, r4
 481 02e4 C3 54                   		mov.B	r4, [r5]
 482                             	.L34:
 182:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		}
 183:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		if(p_cb->rdat_num == 2) {	//Next is the final data
 483                             		.loc 2 183 10
 484 02e6 EC A5                   		mov.L	[r10], r5
 485 02e8 A9 5D                   		mov.L	20[r5], r5
 486                             		.loc 2 183 5
 487 02ea 61 25                   		cmp	#2, r5
 488 02ec 21 2B                   		bne	.L35
 184:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			*(UB*)RIIC_ICMR3(unit) |= RIIC_ICMR3_ACKBT;
 489                             		.loc 2 184 10
 490 02ee FB 52 00 00 00 00       		mov.L	#_ba, r5
 491 02f4 ED A4 01                		mov.L	4[r10], r4
 492 02f7 FE 64 55                		mov.L	[r4,r5], r5
 493 02fa 62 45                   		add	#4, r5
 494                             		.loc 2 184 27
 495 02fc CC 54                   		mov.B	[r5], r4
 496                             		.loc 2 184 10
 497 02fe FB 52 00 00 00 00       		mov.L	#_ba, r5
 498 0304 ED A3 01                		mov.L	4[r10], r3
 499 0307 FE 63 55                		mov.L	[r3,r5], r5
 500 030a 62 45                   		add	#4, r5
 501                             		.loc 2 184 27
 502 030c 65 84                   		or	#8, r4
 503 030e C3 54                   		mov.B	r4, [r5]
 185:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			p_cb->state = I2C_STS_RECV | I2C_STS_LAST;
 504                             		.loc 2 185 16
 505 0310 EC A5                   		mov.L	[r10], r5
 506 0312 F9 5A 01 05 08          		mov.L	#0x805, 4[r5]
 507                             	.L35:
 186:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		}
 187:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		*(p_cb->rbuf)++ = in_b(RIIC_ICDRR(unit));
 508                             		.loc 2 187 26
 509 0317 FB 52 00 00 00 00       		mov.L	#_ba, r5
 510 031d ED A4 01                		mov.L	4[r10], r4
 511 0320 FE 64 55                		mov.L	[r4,r5], r5
 512                             		.loc 2 187 21
 513 0323 71 54 13                		add	#19, r5, r4
 514                             		.loc 2 187 9
 515 0326 EC A5                   		mov.L	[r10], r5
 516 0328 A9 DE                   		mov.L	28[r5], r6
 517                             		.loc 2 187 16
 518 032a 71 63 01                		add	#1, r6, r3
 519 032d EC A5                   		mov.L	[r10], r5
 520 032f A1 DB                   		mov.L	r3, 28[r5]
 521                             		.loc 2 187 21
 522 0331 EF 41                   		mov.L	r4, r1
 523 0333 39 0D FD                		bsr	_in_b
 524 0336 EF 15                   		mov.L	r1, r5
 525                             		.loc 2 187 19
 526 0338 C3 65                   		mov.B	r5, [r6]
 188:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		p_cb->rdat_num--;
 527                             		.loc 2 188 7
 528 033a EC A5                   		mov.L	[r10], r5
 529 033c A9 5D                   		mov.L	20[r5], r5
 530                             		.loc 2 188 17
 531 033e 71 54 FF                		add	#-1, r5, r4
 532 0341 EC A5                   		mov.L	[r10], r5
 533 0343 A1 5C                   		mov.L	r4, 20[r5]
 189:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		break;
 534                             		.loc 2 189 3
 535 0345 38 CB 00                		bra	.L21
 536                             	.L28:
 190:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 191:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	case I2C_STS_RECV | I2C_STS_LAST:
 192:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		*(UB*)RIIC_ICSR2(unit) &= ~RIIC_ICSR2_STOP;
 537                             		.loc 2 192 9
 538 0348 FB 52 00 00 00 00       		mov.L	#_ba, r5
 539 034e ED A4 01                		mov.L	4[r10], r4
 540 0351 FE 64 55                		mov.L	[r4,r5], r5
 541 0354 62 95                   		add	#9, r5
 542                             		.loc 2 192 26
 543 0356 CC 54                   		mov.B	[r5], r4
 544                             		.loc 2 192 9
 545 0358 FB 52 00 00 00 00       		mov.L	#_ba, r5
 546 035e ED A3 01                		mov.L	4[r10], r3
 547 0361 FE 63 55                		mov.L	[r3,r5], r5
 548 0364 62 95                   		add	#9, r5
 549                             		.loc 2 192 26
 550 0366 75 24 F7                		and	#-9, r4
 551 0369 C3 54                   		mov.B	r4, [r5]
 193:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		reg = in_b(RIIC_ICIER(unit));
 552                             		.loc 2 193 14
 553 036b FB 52 00 00 00 00       		mov.L	#_ba, r5
 554 0371 ED A4 01                		mov.L	4[r10], r4
 555 0374 FE 64 55                		mov.L	[r4,r5], r5
 556                             		.loc 2 193 9
 557 0377 62 75                   		add	#7, r5
 558 0379 EF 51                   		mov.L	r5, r1
 559 037b 39 C5 FC                		bsr	_in_b
 560 037e EF 15                   		mov.L	r1, r5
 561 0380 C7 A5 08                		mov.B	r5, 8[r10]
 194:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		out_b(RIIC_ICIER(unit), (reg | RIIC_ICIER_SPIE) & ~RIIC_ICIER_RIE);
 562                             		.loc 2 194 9
 563 0383 FB 52 00 00 00 00       		mov.L	#_ba, r5
 564 0389 ED A4 01                		mov.L	4[r10], r4
 565 038c FE 64 55                		mov.L	[r4,r5], r5
 566                             		.loc 2 194 3
 567 038f 71 54 07                		add	#7, r5, r4
 568                             		.loc 2 194 51
 569 0392 CD A5 08                		mov.B	8[r10], r5
 570 0395 65 85                   		or	#8, r5
 571                             		.loc 2 194 3
 572 0397 75 25 DF                		and	#-33, r5
 573 039a CF 52                   		mov.B	r5, r2
 574 039c EF 41                   		mov.L	r4, r1
 575 039e 39 79 FC                		bsr	_out_b
 195:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		*(UB*)RIIC_ICCR2(unit) |= RIIC_IICR2_SP;
 576                             		.loc 2 195 9
 577 03a1 FB 52 00 00 00 00       		mov.L	#_ba, r5
 578 03a7 ED A4 01                		mov.L	4[r10], r4
 579 03aa FE 64 55                		mov.L	[r4,r5], r5
 580 03ad 62 15                   		add	#1, r5
 581                             		.loc 2 195 26
 582 03af CC 54                   		mov.B	[r5], r4
 583                             		.loc 2 195 9
 584 03b1 FB 52 00 00 00 00       		mov.L	#_ba, r5
 585 03b7 ED A3 01                		mov.L	4[r10], r3
 586 03ba FE 63 55                		mov.L	[r3,r5], r5
 587 03bd 62 15                   		add	#1, r5
 588                             		.loc 2 195 26
 589 03bf 65 84                   		or	#8, r4
 590 03c1 C3 54                   		mov.B	r4, [r5]
 196:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		*(p_cb->rbuf)++ = in_b(RIIC_ICDRR(unit));
 591                             		.loc 2 196 26
 592 03c3 FB 52 00 00 00 00       		mov.L	#_ba, r5
 593 03c9 ED A4 01                		mov.L	4[r10], r4
 594 03cc FE 64 55                		mov.L	[r4,r5], r5
 595                             		.loc 2 196 21
 596 03cf 71 54 13                		add	#19, r5, r4
 597                             		.loc 2 196 9
 598 03d2 EC A5                   		mov.L	[r10], r5
 599 03d4 A9 DE                   		mov.L	28[r5], r6
 600                             		.loc 2 196 16
 601 03d6 71 63 01                		add	#1, r6, r3
 602 03d9 EC A5                   		mov.L	[r10], r5
 603 03db A1 DB                   		mov.L	r3, 28[r5]
 604                             		.loc 2 196 21
 605 03dd EF 41                   		mov.L	r4, r1
 606 03df 39 61 FC                		bsr	_in_b
 607 03e2 EF 15                   		mov.L	r1, r5
 608                             		.loc 2 196 19
 609 03e4 C3 65                   		mov.B	r5, [r6]
 197:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		*(UB*)RIIC_ICMR3(unit) &= ~RIIC_ICMR3_WAIT;
 610                             		.loc 2 197 9
 611 03e6 FB 52 00 00 00 00       		mov.L	#_ba, r5
 612 03ec ED A4 01                		mov.L	4[r10], r4
 613 03ef FE 64 55                		mov.L	[r4,r5], r5
 614 03f2 62 45                   		add	#4, r5
 615                             		.loc 2 197 26
 616 03f4 CC 54                   		mov.B	[r5], r4
 617                             		.loc 2 197 9
 618 03f6 FB 52 00 00 00 00       		mov.L	#_ba, r5
 619 03fc ED A3 01                		mov.L	4[r10], r3
 620 03ff FE 63 55                		mov.L	[r3,r5], r5
 621 0402 62 45                   		add	#4, r5
 622                             		.loc 2 197 26
 623 0404 75 24 BF                		and	#-65, r4
 624 0407 C3 54                   		mov.B	r4, [r5]
 198:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		p_cb->state = I2C_STS_STOP;
 625                             		.loc 2 198 15
 626 0409 EC A5                   		mov.L	[r10], r5
 627 040b 3E 51 03                		mov.L	#3, 4[r5]
 199:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		break;
 628                             		.loc 2 199 3
 629 040e 03                      		nop
 630 040f 03                      		.balign 8,3,2
 631                             	.L21:
 200:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	}
 201:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** }
 632                             		.loc 2 201 1
 633 0410 71 00 10                		add	#16, r0
 634 0413 7E B6                   		pop	r6
 635 0415 7E BA                   		pop	r10
 636 0417 02                      		rts
 637                             	.LFE7:
 640                             	_i2c_tei_inthdr:
 641                             	.LFB8:
 202:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 203:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** /*
 204:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  * TEI: Transmission end interrupt
 205:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  */
 206:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** LOCAL void i2c_tei_inthdr( UINT unit )
 207:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** {
 642                             		.loc 2 207 1
 643 0418 7E AA                   		push.l	r10
 644                             	.LCFI13:
 645 041a 71 0A F8                		add	#-8, r0, r10
 646                             	.LCFI14:
 647 041d EF A0                   		mov.L	r10, r0
 648 041f E7 A1 01                		mov.L	r1, 4[r10]
 208:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	UB	reg;
 209:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 210:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	switch(ll_devcb[unit].state) {
 649                             		.loc 2 210 23
 650 0422 FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 651 0428 ED A5 01                		mov.L	4[r10], r5
 652 042b 6C 55                   		shll	#5, r5
 653 042d 4B 45                   		add	r4, r5
 654 042f 62 45                   		add	#4, r5
 655 0431 EC 55                   		mov.L	[r5], r5
 656                             		.loc 2 210 2
 657 0433 61 15                   		cmp	#1, r5
 658 0435 20 5F                   		beq	.L37
 659 0437 61 35                   		cmp	#3, r5
 660 0439 3B A6 00                		bne	.L39
 211:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	case I2C_STS_STOP:
 212:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		reg = in_b(RIIC_ICIER(unit));
 661                             		.loc 2 212 14
 662 043c FB 52 00 00 00 00       		mov.L	#_ba, r5
 663 0442 ED A4 01                		mov.L	4[r10], r4
 664 0445 FE 64 55                		mov.L	[r4,r5], r5
 665                             		.loc 2 212 9
 666 0448 62 75                   		add	#7, r5
 667 044a EF 51                   		mov.L	r5, r1
 668 044c 39 F4 FB                		bsr	_in_b
 669 044f EF 15                   		mov.L	r1, r5
 670 0451 C3 A5                   		mov.B	r5, [r10]
 213:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		out_b(RIIC_ICIER(unit), (reg & ~RIIC_ICIER_TEIE) |RIIC_ICIER_SPIE);
 671                             		.loc 2 213 9
 672 0453 FB 52 00 00 00 00       		mov.L	#_ba, r5
 673 0459 ED A4 01                		mov.L	4[r10], r4
 674 045c FE 64 55                		mov.L	[r4,r5], r5
 675                             		.loc 2 213 3
 676 045f 71 54 07                		add	#7, r5, r4
 677                             		.loc 2 213 52
 678 0462 CC A5                   		mov.B	[r10], r5
 679 0464 75 25 B7                		and	#-73, r5
 680 0467 65 85                   		or	#8, r5
 681                             		.loc 2 213 3
 682 0469 CF 52                   		mov.B	r5, r2
 683 046b EF 41                   		mov.L	r4, r1
 684 046d 39 AA FB                		bsr	_out_b
 214:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		*(UB*)RIIC_ICCR2(unit) |= RIIC_IICR2_SP;	// Stop condition
 685                             		.loc 2 214 9
 686 0470 FB 52 00 00 00 00       		mov.L	#_ba, r5
 687 0476 ED A4 01                		mov.L	4[r10], r4
 688 0479 FE 64 55                		mov.L	[r4,r5], r5
 689 047c 62 15                   		add	#1, r5
 690                             		.loc 2 214 26
 691 047e CC 54                   		mov.B	[r5], r4
 692                             		.loc 2 214 9
 693 0480 FB 52 00 00 00 00       		mov.L	#_ba, r5
 694 0486 ED A3 01                		mov.L	4[r10], r3
 695 0489 FE 63 55                		mov.L	[r3,r5], r5
 696 048c 62 15                   		add	#1, r5
 697                             		.loc 2 214 26
 698 048e 65 84                   		or	#8, r4
 699 0490 C3 54                   		mov.B	r4, [r5]
 215:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		break;
 700                             		.loc 2 215 3
 701 0492 2E 4D                   		bra	.L38
 702                             	.L37:
 216:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	
 217:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	case I2C_STS_RESTART:
 218:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		out_b( RIIC_ICIER(unit) , RIIC_ICIER_TIE | RIIC_ICIER_NAKIE);	/* Enable TXI & NAKI */
 703                             		.loc 2 218 10
 704 0494 FB 52 00 00 00 00       		mov.L	#_ba, r5
 705 049a ED A4 01                		mov.L	4[r10], r4
 706 049d FE 64 55                		mov.L	[r4,r5], r5
 707                             		.loc 2 218 3
 708 04a0 62 75                   		add	#7, r5
 709 04a2 FB 26 90                		mov	#-112, r2
 710 04a5 EF 51                   		mov.L	r5, r1
 711 04a7 39 70 FB                		bsr	_out_b
 219:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		*(UB*)RIIC_ICCR2(unit) |= RIIC_IICR2_RS;	// Rester condition
 712                             		.loc 2 219 9
 713 04aa FB 52 00 00 00 00       		mov.L	#_ba, r5
 714 04b0 ED A4 01                		mov.L	4[r10], r4
 715 04b3 FE 64 55                		mov.L	[r4,r5], r5
 716 04b6 62 15                   		add	#1, r5
 717                             		.loc 2 219 26
 718 04b8 CC 54                   		mov.B	[r5], r4
 719                             		.loc 2 219 9
 720 04ba FB 52 00 00 00 00       		mov.L	#_ba, r5
 721 04c0 ED A3 01                		mov.L	4[r10], r3
 722 04c3 FE 63 55                		mov.L	[r3,r5], r5
 723 04c6 62 15                   		add	#1, r5
 724                             		.loc 2 219 26
 725 04c8 65 44                   		or	#4, r4
 726 04ca C3 54                   		mov.B	r4, [r5]
 220:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		ll_devcb[unit].state = I2C_STS_START;
 727                             		.loc 2 220 24
 728 04cc FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 729 04d2 ED A5 01                		mov.L	4[r10], r5
 730 04d5 6C 55                   		shll	#5, r5
 731 04d7 4B 45                   		add	r4, r5
 732 04d9 62 45                   		add	#4, r5
 733 04db F8 56 00                		mov.L	#0, [r5]
 221:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		break;
 734                             		.loc 2 221 3
 735 04de 03                      		nop
 736                             	.L38:
 737                             	.L39:
 222:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	}
 223:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** }
 738                             		.loc 2 223 1
 739 04df 03                      		nop
 740 04e0 3F AA 03                		rtsd	#12, r10-r10
 741                             	.LFE8:
 744                             	_i2c_eei_inthdr:
 745                             	.LFB9:
 224:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 225:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** LOCAL void i2c_eei_inthdr( UINT unit )
 226:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** {
 746                             		.loc 2 226 1
 747 04e3 7E AA                   		push.l	r10
 748                             	.LCFI15:
 749 04e5 71 0A F8                		add	#-8, r0, r10
 750                             	.LCFI16:
 751 04e8 EF A0                   		mov.L	r10, r0
 752 04ea E7 A1 01                		mov.L	r1, 4[r10]
 227:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	UB	reg;
 228:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 229:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	reg = in_b(RIIC_ICSR2(unit));
 753                             		.loc 2 229 13
 754 04ed FB 52 00 00 00 00       		mov.L	#_ba, r5
 755 04f3 ED A4 01                		mov.L	4[r10], r4
 756 04f6 FE 64 55                		mov.L	[r4,r5], r5
 757                             		.loc 2 229 8
 758 04f9 62 95                   		add	#9, r5
 759 04fb EF 51                   		mov.L	r5, r1
 760 04fd 39 43 FB                		bsr	_in_b
 761 0500 EF 15                   		mov.L	r1, r5
 762 0502 C3 A5                   		mov.B	r5, [r10]
 230:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 231:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	if(reg & RIIC_ICSR2_STOP) {		/* Detects stop condition */
 763                             		.loc 2 231 9
 764 0504 58 A5                   		movu.B	[r10], r5
 765 0506 64 85                   		and	#8, r5
 766                             		.loc 2 231 4
 767 0508 61 05                   		cmp	#0, r5
 768 050a 20 7A                   		beq	.L41
 232:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		if (ll_devcb[unit].state != I2C_STS_STOP) {
 769                             		.loc 2 232 21
 770 050c FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 771 0512 ED A5 01                		mov.L	4[r10], r5
 772 0515 6C 55                   		shll	#5, r5
 773 0517 4B 45                   		add	r4, r5
 774 0519 62 45                   		add	#4, r5
 775 051b EC 55                   		mov.L	[r5], r5
 776                             		.loc 2 232 6
 777 051d 61 35                   		cmp	#3, r5
 778 051f 20 14                   		beq	.L42
 233:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			ll_devcb[unit].ioerr = E_IO;
 779                             		.loc 2 233 25
 780 0521 FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 781 0527 ED A5 01                		mov.L	4[r10], r5
 782 052a 6C 55                   		shll	#5, r5
 783 052c 4B 45                   		add	r4, r5
 784 052e 62 C5                   		add	#12, r5
 785 0530 F8 56 C7                		mov.L	#-57, [r5]
 786                             	.L42:
 234:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		}
 235:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		out_b( RIIC_ICIER(unit), 0);
 787                             		.loc 2 235 10
 788 0533 FB 52 00 00 00 00       		mov.L	#_ba, r5
 789 0539 ED A4 01                		mov.L	4[r10], r4
 790 053c FE 64 55                		mov.L	[r4,r5], r5
 791                             		.loc 2 235 3
 792 053f 62 75                   		add	#7, r5
 793 0541 66 02                   		mov	#0, r2
 794 0543 EF 51                   		mov.L	r5, r1
 795 0545 39 D2 FA                		bsr	_out_b
 236:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		if(ll_devcb[unit].wait_tskid) {
 796                             		.loc 2 236 20
 797 0548 FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 798 054e ED A5 01                		mov.L	4[r10], r5
 799 0551 6C 55                   		shll	#5, r5
 800 0553 4B 45                   		add	r4, r5
 801 0555 EC 55                   		mov.L	[r5], r5
 802                             		.loc 2 236 5
 803 0557 61 05                   		cmp	#0, r5
 804 0559 3A A9 00                		beq	.L45
 237:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			tk_wup_tsk(ll_devcb[unit].wait_tskid);
 805                             		.loc 2 237 4
 806 055c FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 807 0562 ED A5 01                		mov.L	4[r10], r5
 808 0565 6C 55                   		shll	#5, r5
 809 0567 4B 45                   		add	r4, r5
 810 0569 EC 55                   		mov.L	[r5], r5
 811 056b EF 51                   		mov.L	r5, r1
 812 056d 05 00 00 00             		bsr	_tk_wup_tsk
 238:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			ll_devcb[unit].wait_tskid = 0;
 813                             		.loc 2 238 30
 814 0571 FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 815 0577 ED A5 01                		mov.L	4[r10], r5
 816 057a 6C 55                   		shll	#5, r5
 817 057c 4B 45                   		add	r4, r5
 818 057e F8 56 00                		mov.L	#0, [r5]
 239:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		}
 240:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	} else {
 241:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		ll_devcb[unit].ioerr = E_IO;
 242:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		ll_devcb[unit].state = I2C_STS_STOP;
 243:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		*(UB*)RIIC_ICSR2(unit) &= ~RIIC_ICSR2_STOP;
 244:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		out_b( RIIC_ICIER(unit), RIIC_ICIER_SPIE);
 245:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		*(UB*)RIIC_ICCR2(unit) |= RIIC_IICR2_SP;	/* Stop condition */
 246:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	}
 247:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** }
 819                             		.loc 2 247 1
 820 0581 38 81 00                		bra	.L45
 821                             	.L41:
 241:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		ll_devcb[unit].state = I2C_STS_STOP;
 822                             		.loc 2 241 24
 823 0584 FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 824 058a ED A5 01                		mov.L	4[r10], r5
 825 058d 6C 55                   		shll	#5, r5
 826 058f 4B 45                   		add	r4, r5
 827 0591 62 C5                   		add	#12, r5
 828 0593 F8 56 C7                		mov.L	#-57, [r5]
 242:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		*(UB*)RIIC_ICSR2(unit) &= ~RIIC_ICSR2_STOP;
 829                             		.loc 2 242 24
 830 0596 FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 831 059c ED A5 01                		mov.L	4[r10], r5
 832 059f 6C 55                   		shll	#5, r5
 833 05a1 4B 45                   		add	r4, r5
 834 05a3 62 45                   		add	#4, r5
 835 05a5 F8 56 03                		mov.L	#3, [r5]
 243:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		out_b( RIIC_ICIER(unit), RIIC_ICIER_SPIE);
 836                             		.loc 2 243 9
 837 05a8 FB 52 00 00 00 00       		mov.L	#_ba, r5
 838 05ae ED A4 01                		mov.L	4[r10], r4
 839 05b1 FE 64 55                		mov.L	[r4,r5], r5
 840 05b4 62 95                   		add	#9, r5
 243:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		out_b( RIIC_ICIER(unit), RIIC_ICIER_SPIE);
 841                             		.loc 2 243 26
 842 05b6 CC 54                   		mov.B	[r5], r4
 243:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		out_b( RIIC_ICIER(unit), RIIC_ICIER_SPIE);
 843                             		.loc 2 243 9
 844 05b8 FB 52 00 00 00 00       		mov.L	#_ba, r5
 845 05be ED A3 01                		mov.L	4[r10], r3
 846 05c1 FE 63 55                		mov.L	[r3,r5], r5
 847 05c4 62 95                   		add	#9, r5
 243:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		out_b( RIIC_ICIER(unit), RIIC_ICIER_SPIE);
 848                             		.loc 2 243 26
 849 05c6 75 24 F7                		and	#-9, r4
 850 05c9 C3 54                   		mov.B	r4, [r5]
 244:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		*(UB*)RIIC_ICCR2(unit) |= RIIC_IICR2_SP;	/* Stop condition */
 851                             		.loc 2 244 10
 852 05cb FB 52 00 00 00 00       		mov.L	#_ba, r5
 853 05d1 ED A4 01                		mov.L	4[r10], r4
 854 05d4 FE 64 55                		mov.L	[r4,r5], r5
 244:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		*(UB*)RIIC_ICCR2(unit) |= RIIC_IICR2_SP;	/* Stop condition */
 855                             		.loc 2 244 3
 856 05d7 62 75                   		add	#7, r5
 857 05d9 66 82                   		mov	#8, r2
 858 05db EF 51                   		mov.L	r5, r1
 859 05dd 39 3A FA                		bsr	_out_b
 245:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	}
 860                             		.loc 2 245 9
 861 05e0 FB 52 00 00 00 00       		mov.L	#_ba, r5
 862 05e6 ED A4 01                		mov.L	4[r10], r4
 863 05e9 FE 64 55                		mov.L	[r4,r5], r5
 864 05ec 62 15                   		add	#1, r5
 245:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	}
 865                             		.loc 2 245 26
 866 05ee CC 54                   		mov.B	[r5], r4
 245:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	}
 867                             		.loc 2 245 9
 868 05f0 FB 52 00 00 00 00       		mov.L	#_ba, r5
 869 05f6 ED A3 01                		mov.L	4[r10], r3
 870 05f9 FE 63 55                		mov.L	[r3,r5], r5
 871 05fc 62 15                   		add	#1, r5
 245:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	}
 872                             		.loc 2 245 26
 873 05fe 65 84                   		or	#8, r4
 874 0600 C3 54                   		mov.B	r4, [r5]
 875                             	.L45:
 876                             		.loc 2 247 1
 877 0602 03                      		nop
 878 0603 3F AA 03                		rtsd	#12, r10-r10
 879                             	.LFE9:
 882                             	_i2c_xei_inthdr:
 883                             	.LFB10:
 248:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 249:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** LOCAL void i2c_xei_inthdr( UINT intno )
 250:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** {
 884                             		.loc 2 250 1
 885 0606 7E AA                   		push.l	r10
 886                             	.LCFI17:
 887 0608 71 0A F8                		add	#-8, r0, r10
 888                             	.LCFI18:
 889 060b EF A0                   		mov.L	r10, r0
 890 060d E7 A1 01                		mov.L	r1, 4[r10]
 251:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	UW	reg;
 252:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 253:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	reg = in_w(ICU_GRPBL1);
 891                             		.loc 2 253 8
 892 0610 FB 1E 34 76 08          		mov.L	#0x87634, r1
 893 0615 39 19 FA                		bsr	_in_w
 894 0618 E3 A1                   		mov.L	r1, [r10]
 254:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	if(reg & (1<<13)) {
 895                             		.loc 2 254 9
 896 061a EC A5                   		mov.L	[r10], r5
 897 061c 76 25 00 20             		and	#0x2000, r5
 898                             		.loc 2 254 4
 899 0620 61 05                   		cmp	#0, r5
 900 0622 10                      		beq	.L47
 255:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		i2c_tei_inthdr(DEV_I2C_UNIT0);
 901                             		.loc 2 255 3
 902 0623 66 01                   		mov.L	#0, r1
 903 0625 39 F3 FD                		bsr	_i2c_tei_inthdr
 904 0628 2E 56                   		bra	.L48
 905                             	.L47:
 256:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	} else if(reg & (1<<14)) {
 906                             		.loc 2 256 16
 907 062a EC A5                   		mov.L	[r10], r5
 908 062c 76 25 00 40             		and	#0x4000, r5
 909                             		.loc 2 256 11
 910 0630 61 05                   		cmp	#0, r5
 911 0632 10                      		beq	.L49
 257:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		i2c_eei_inthdr(DEV_I2C_UNIT0);
 912                             		.loc 2 257 3
 913 0633 66 01                   		mov.L	#0, r1
 914 0635 39 AE FE                		bsr	_i2c_eei_inthdr
 915 0638 2E 46                   		bra	.L48
 916                             	.L49:
 258:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	} else if(reg & (1<<28)) {
 917                             		.loc 2 258 16
 918 063a EC A5                   		mov.L	[r10], r5
 919 063c 74 25 00 00 00 10       		and	#0x10000000, r5
 920                             		.loc 2 258 11
 921 0642 61 05                   		cmp	#0, r5
 922 0644 10                      		beq	.L50
 259:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		i2c_tei_inthdr(DEV_I2C_UNIT1);
 923                             		.loc 2 259 3
 924 0645 66 11                   		mov.L	#1, r1
 925 0647 39 D1 FD                		bsr	_i2c_tei_inthdr
 926 064a 2E 34                   		bra	.L48
 927                             	.L50:
 260:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	} else if(reg & (1<<29)) {
 928                             		.loc 2 260 16
 929 064c EC A5                   		mov.L	[r10], r5
 930 064e 74 25 00 00 00 20       		and	#0x20000000, r5
 931                             		.loc 2 260 11
 932 0654 61 05                   		cmp	#0, r5
 933 0656 10                      		beq	.L51
 261:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		i2c_eei_inthdr(DEV_I2C_UNIT1);
 934                             		.loc 2 261 3
 935 0657 66 11                   		mov.L	#1, r1
 936 0659 39 8A FE                		bsr	_i2c_eei_inthdr
 937 065c 2E 22                   		bra	.L48
 938                             	.L51:
 262:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	} else if(reg & (1<<15)) {
 939                             		.loc 2 262 16
 940 065e EC A5                   		mov.L	[r10], r5
 941 0660 77 25 00 80 00          		and	#0x8000, r5
 942                             		.loc 2 262 11
 943 0665 61 05                   		cmp	#0, r5
 944 0667 10                      		beq	.L52
 263:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		i2c_tei_inthdr(DEV_I2C_UNIT2);
 945                             		.loc 2 263 3
 946 0668 66 21                   		mov.L	#2, r1
 947 066a 39 AE FD                		bsr	_i2c_tei_inthdr
 948 066d 2E 11                   		bra	.L48
 949                             	.L52:
 264:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	} else if(reg & (1<<16)) {
 950                             		.loc 2 264 16
 951 066f EC A5                   		mov.L	[r10], r5
 952 0671 77 25 00 00 01          		and	#0x10000, r5
 953                             		.loc 2 264 11
 954 0676 61 05                   		cmp	#0, r5
 955 0678 16                      		beq	.L48
 265:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		i2c_eei_inthdr(DEV_I2C_UNIT2);
 956                             		.loc 2 265 3
 957 0679 66 21                   		mov.L	#2, r1
 958 067b 39 68 FE                		bsr	_i2c_eei_inthdr
 959                             		.balign 8,3,1
 960                             	.L48:
 266:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	}
 267:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	ClearInt(intno);
 961                             		.loc 2 267 2
 962 067e ED A1 01                		mov.L	4[r10], r1
 963 0681 05 00 00 00             		bsr	_ClearInt
 268:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** }
 964                             		.loc 2 268 1
 965 0685 03                      		nop
 966 0686 3F AA 03                		rtsd	#12, r10-r10
 967                             	.LFE10:
 970                             	_i2c_trans:
 971                             	.LFB11:
 269:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 270:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** /*----------------------------------------------------------------------
 271:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  * Execution of communication
 272:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  */
 273:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** LOCAL ER i2c_trans( UW unit)
 274:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** {
 972                             		.loc 2 274 1
 973 0689 7E AA                   		push.l	r10
 974                             	.LCFI19:
 975 068b 71 0A F4                		add	#-12, r0, r10
 976                             	.LCFI20:
 977 068e EF A0                   		mov.L	r10, r0
 978 0690 E7 A1 02                		mov.L	r1, 8[r10]
 275:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	UB		reg;
 276:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	ER		err;
 277:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 278:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	if( in_b(RIIC_ICCR2(unit)) & RIIC_IICR2_BBSY) {
 979                             		.loc 2 278 11
 980 0693 FB 52 00 00 00 00       		mov.L	#_ba, r5
 981 0699 ED A4 02                		mov.L	8[r10], r4
 982 069c FE 64 55                		mov.L	[r4,r5], r5
 983                             		.loc 2 278 6
 984 069f 62 15                   		add	#1, r5
 985 06a1 EF 51                   		mov.L	r5, r1
 986 06a3 39 9D F9                		bsr	_in_b
 987 06a6 EF 15                   		mov.L	r1, r5
 988                             		.loc 2 278 4
 989 06a8 CF 55                   		mov.B	r5, r5
 990 06aa 61 05                   		cmp	#0, r5
 991 06ac 28 1A                   		bge	.L54
 279:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		ll_devcb[unit].ioerr = E_BUSY;		/* I2C bus busy */
 992                             		.loc 2 279 24
 993 06ae FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 994 06b4 ED A5 02                		mov.L	8[r10], r5
 995 06b7 6C 55                   		shll	#5, r5
 996 06b9 4B 45                   		add	r4, r5
 997 06bb 62 C5                   		add	#12, r5
 998 06bd F8 56 BF                		mov.L	#-65, [r5]
 280:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		return E_BUSY;
 999                             		.loc 2 280 10
 1000 06c0 FB 56 BF                		mov.L	#-65, r5
 1001 06c3 38 EE 00                		bra	.L55
 1002                             	.L54:
 281:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	}
 282:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 283:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	ll_devcb[unit].ioerr		= E_OK;
 1003                             		.loc 2 283 24
 1004 06c6 FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 1005 06cc ED A5 02                		mov.L	8[r10], r5
 1006 06cf 6C 55                   		shll	#5, r5
 1007 06d1 4B 45                   		add	r4, r5
 1008 06d3 62 C5                   		add	#12, r5
 1009 06d5 F8 56 00                		mov.L	#0, [r5]
 284:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	ll_devcb[unit].wait_tskid 	= tk_get_tid();
 1010                             		.loc 2 284 31
 1011 06d8 05 00 00 00             		bsr	_tk_get_tid
 1012 06dc EF 13                   		mov.L	r1, r3
 1013                             		.loc 2 284 29
 1014 06de FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 1015 06e4 ED A5 02                		mov.L	8[r10], r5
 1016 06e7 6C 55                   		shll	#5, r5
 1017 06e9 4B 45                   		add	r4, r5
 1018 06eb E3 53                   		mov.L	r3, [r5]
 285:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 286:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	out_b( RIIC_ICIER(unit) , RIIC_ICIER_TIE | RIIC_ICIER_NAKIE);	/* Enable TXI & NAKI */
 1019                             		.loc 2 286 9
 1020 06ed FB 52 00 00 00 00       		mov.L	#_ba, r5
 1021 06f3 ED A4 02                		mov.L	8[r10], r4
 1022 06f6 FE 64 55                		mov.L	[r4,r5], r5
 1023                             		.loc 2 286 2
 1024 06f9 62 75                   		add	#7, r5
 1025 06fb FB 26 90                		mov	#-112, r2
 1026 06fe EF 51                   		mov.L	r5, r1
 1027 0700 39 17 F9                		bsr	_out_b
 287:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** //	out_b( RIIC_ICIER , 0xFF);	/* Enable TXI & NAKI */
 288:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	*(UB*)RIIC_ICCR2(unit) |= RIIC_IICR2_ST;		/* start condition */
 1028                             		.loc 2 288 8
 1029 0703 FB 52 00 00 00 00       		mov.L	#_ba, r5
 1030 0709 ED A4 02                		mov.L	8[r10], r4
 1031 070c FE 64 55                		mov.L	[r4,r5], r5
 1032 070f 62 15                   		add	#1, r5
 1033                             		.loc 2 288 25
 1034 0711 CC 54                   		mov.B	[r5], r4
 1035                             		.loc 2 288 8
 1036 0713 FB 52 00 00 00 00       		mov.L	#_ba, r5
 1037 0719 ED A3 02                		mov.L	8[r10], r3
 1038 071c FE 63 55                		mov.L	[r3,r5], r5
 1039 071f 62 15                   		add	#1, r5
 1040                             		.loc 2 288 25
 1041 0721 65 24                   		or	#2, r4
 1042 0723 C3 54                   		mov.B	r4, [r5]
 289:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 290:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	err = tk_slp_tsk(ll_devdat[unit].timout);
 1043                             		.loc 2 290 8
 1044 0725 FB 42 0C 00 00 00       		mov.L	#_ll_devdat, r4
 1045 072b ED A5 02                		mov.L	8[r10], r5
 1046 072e 6C 45                   		shll	#4, r5
 1047 0730 4B 45                   		add	r4, r5
 1048 0732 62 C5                   		add	#12, r5
 1049 0734 EC 55                   		mov.L	[r5], r5
 1050 0736 EF 51                   		mov.L	r5, r1
 1051 0738 05 00 00 00             		bsr	_tk_slp_tsk
 1052 073c E3 A1                   		mov.L	r1, [r10]
 291:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	if ( ll_devcb[unit].ioerr != E_OK ) {
 1053                             		.loc 2 291 21
 1054 073e FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 1055 0744 ED A5 02                		mov.L	8[r10], r5
 1056 0747 6C 55                   		shll	#5, r5
 1057 0749 4B 45                   		add	r4, r5
 1058 074b 62 C5                   		add	#12, r5
 1059 074d EC 55                   		mov.L	[r5], r5
 1060                             		.loc 2 291 5
 1061 074f 61 05                   		cmp	#0, r5
 1062 0751 20 15                   		beq	.L56
 292:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		err = ll_devcb[unit].ioerr;
 1063                             		.loc 2 292 7
 1064 0753 FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 1065 0759 ED A5 02                		mov.L	8[r10], r5
 1066 075c 6C 55                   		shll	#5, r5
 1067 075e 4B 45                   		add	r4, r5
 1068 0760 62 C5                   		add	#12, r5
 1069 0762 EC 55                   		mov.L	[r5], r5
 1070 0764 E3 A5                   		mov.L	r5, [r10]
 1071                             	.L56:
 293:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	}
 294:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 295:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	out_b( RIIC_ICIER(unit), 0);
 1072                             		.loc 2 295 9
 1073 0766 FB 52 00 00 00 00       		mov.L	#_ba, r5
 1074 076c ED A4 02                		mov.L	8[r10], r4
 1075 076f FE 64 55                		mov.L	[r4,r5], r5
 1076                             		.loc 2 295 2
 1077 0772 62 75                   		add	#7, r5
 1078 0774 66 02                   		mov	#0, r2
 1079 0776 EF 51                   		mov.L	r5, r1
 1080 0778 39 9F F8                		bsr	_out_b
 296:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	reg = in_b(RIIC_ICSR2(unit));
 1081                             		.loc 2 296 13
 1082 077b FB 52 00 00 00 00       		mov.L	#_ba, r5
 1083 0781 ED A4 02                		mov.L	8[r10], r4
 1084 0784 FE 64 55                		mov.L	[r4,r5], r5
 1085                             		.loc 2 296 8
 1086 0787 62 95                   		add	#9, r5
 1087 0789 EF 51                   		mov.L	r5, r1
 1088 078b 39 B5 F8                		bsr	_in_b
 1089 078e EF 15                   		mov.L	r1, r5
 1090 0790 C7 A5 04                		mov.B	r5, 4[r10]
 297:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	out_b( RIIC_ICSR2(unit), reg & ~RIIC_ICSR2_STOP & ~RIIC_ICSR2_NACKF);
 1091                             		.loc 2 297 9
 1092 0793 FB 52 00 00 00 00       		mov.L	#_ba, r5
 1093 0799 ED A4 02                		mov.L	8[r10], r4
 1094 079c FE 64 55                		mov.L	[r4,r5], r5
 1095                             		.loc 2 297 2
 1096 079f 71 54 09                		add	#9, r5, r4
 1097 07a2 CD A5 04                		mov.B	4[r10], r5
 1098 07a5 75 25 E7                		and	#-25, r5
 1099 07a8 CF 52                   		mov.B	r5, r2
 1100 07aa EF 41                   		mov.L	r4, r1
 1101 07ac 39 6B F8                		bsr	_out_b
 298:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 299:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	return err;
 1102                             		.loc 2 299 9
 1103 07af EC A5                   		mov.L	[r10], r5
 1104                             	.L55:
 300:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** }
 1105                             		.loc 2 300 1
 1106 07b1 EF 51                   		mov.L	r5, r1
 1107 07b3 3F AA 04                		rtsd	#16, r10-r10
 1108                             	.LFE11:
 1111                             	_set_com_start:
 1112                             	.LFB12:
 301:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 302:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** /*----------------------------------------------------------------------
 303:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  * Set communication start parameters
 304:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  */
 305:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** Inline void set_com_start( T_I2C_LLDCB *p_cb, 
 306:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 				UW sadr, UW sdat_num, UW rdat_num, UB *sbuf, UB *rbuf)
 307:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** {
 1113                             		.loc 2 307 1
 1114 07b6 7E AA                   		push.l	r10
 1115                             	.LCFI21:
 1116 07b8 71 0A E8                		add	#-24, r0, r10
 1117                             	.LCFI22:
 1118 07bb EF A0                   		mov.L	r10, r0
 1119 07bd 75 45 20                		mov.L	#32, r5
 1120 07c0 4B A5                   		add	r10, r5
 1121 07c2 E3 A1                   		mov.L	r1, [r10]
 1122 07c4 E7 A2 01                		mov.L	r2, 4[r10]
 1123 07c7 E7 A3 02                		mov.L	r3, 8[r10]
 1124 07ca E7 A4 03                		mov.L	r4, 12[r10]
 308:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	p_cb->state	= I2C_STS_START;
 1125                             		.loc 2 308 14
 1126 07cd EC A4                   		mov.L	[r10], r4
 1127 07cf 3E 41 00                		mov.L	#0, 4[r4]
 309:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	p_cb->sadr	= sadr<<1;	/* Slave address */
 1128                             		.loc 2 309 19
 1129 07d2 ED A4 01                		mov.L	4[r10], r4
 1130 07d5 4B 44                   		add	r4, r4
 1131 07d7 EF 43                   		mov.L	r4, r3
 1132                             		.loc 2 309 13
 1133 07d9 EC A4                   		mov.L	[r10], r4
 1134 07db A0 C3                   		mov.L	r3, 8[r4]
 310:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	p_cb->sdat_num	= sdat_num;	/* Number of send data */
 1135                             		.loc 2 310 17
 1136 07dd EC A4                   		mov.L	[r10], r4
 1137 07df ED A3 02                		mov.L	8[r10], r3
 1138 07e2 A1 43                   		mov.L	r3, 16[r4]
 311:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	p_cb->rdat_num	= rdat_num;	/* Number of receive data */
 1139                             		.loc 2 311 17
 1140 07e4 EC A4                   		mov.L	[r10], r4
 1141 07e6 ED A3 03                		mov.L	12[r10], r3
 1142 07e9 A1 4B                   		mov.L	r3, 20[r4]
 312:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	p_cb->sbuf	= sbuf;		/* Send buffer */
 1143                             		.loc 2 312 13
 1144 07eb EC A4                   		mov.L	[r10], r4
 1145 07ed EC 53                   		mov.L	[r5], r3
 1146 07ef A1 C3                   		mov.L	r3, 24[r4]
 313:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	p_cb->rbuf	= rbuf;		/* Receive buffer */
 1147                             		.loc 2 313 13
 1148 07f1 EC A4                   		mov.L	[r10], r4
 1149 07f3 A8 5D                   		mov.L	4[r5], r5
 1150 07f5 A1 CD                   		mov.L	r5, 28[r4]
 314:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** }
 1151                             		.loc 2 314 1
 1152 07f7 03                      		nop
 1153 07f8 3F AA 07                		rtsd	#28, r10-r10
 1154                             	.LFE12:
 1156                             		.global	_dev_i2c_llctl
 1158                             	_dev_i2c_llctl:
 1159                             	.LFB13:
 315:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 316:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** /*----------------------------------------------------------------------
 317:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  * Low level device control
 318:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  */
 319:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** EXPORT W dev_i2c_llctl( UW unit, INT cmd, UW p1, UW p2, UW *pp)
 320:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** {
 1160                             		.loc 2 320 1
 1161 07fb 7E AA                   		push.l	r10
 1162                             	.LCFI23:
 1163 07fd 7E A6                   		push.l	r6
 1164                             	.LCFI24:
 1165 07ff 71 0A E4                		add	#-28, r0, r10
 1166                             	.LCFI25:
 1167 0802 71 A0 F8                		add	#-8, r10, r0
 1168                             	.LCFI26:
 1169 0805 75 45 28                		mov.L	#40, r5
 1170 0808 4B A5                   		add	r10, r5
 1171 080a E7 A1 02                		mov.L	r1, 8[r10]
 1172 080d E7 A2 03                		mov.L	r2, 12[r10]
 1173 0810 E7 A3 04                		mov.L	r3, 16[r10]
 1174 0813 E7 A4 05                		mov.L	r4, 20[r10]
 321:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	T_I2C_EXEC	*p_ex;
 322:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	ER		err	= E_OK;
 1175                             		.loc 2 322 6
 1176 0816 F8 A6 00                		mov.L	#0, [r10]
 323:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 324:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	switch(cmd) {
 1177                             		.loc 2 324 2
 1178 0819 ED A4 03                		mov.L	12[r10], r4
 1179 081c 61 24                   		cmp	#2, r4
 1180 081e 3A 93 01                		beq	.L59
 1181 0821 ED A4 03                		mov.L	12[r10], r4
 1182 0824 61 24                   		cmp	#2, r4
 1183 0826 2A 14                   		bgt	.L60
 1184 0828 ED A5 03                		mov.L	12[r10], r5
 1185 082b 61 05                   		cmp	#0, r5
 1186 082d 20 20                   		beq	.L61
 1187 082f ED A5 03                		mov.L	12[r10], r5
 1188 0832 61 15                   		cmp	#1, r5
 1189 0834 3A 47 01                		beq	.L62
 1190 0837 38 63 02                		bra	.L63
 1191                             	.L60:
 1192 083a ED A4 03                		mov.L	12[r10], r4
 1193 083d 61 34                   		cmp	#3, r4
 1194 083f 3A BD 01                		beq	.L64
 1195 0842 ED A4 03                		mov.L	12[r10], r4
 1196 0845 61 44                   		cmp	#4, r4
 1197 0847 3A FC 01                		beq	.L65
 1198 084a 38 50 02                		bra	.L63
 1199                             	.L61:
 325:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	case LLD_I2C_OPEN:
 326:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		/* I2C Device reset */
 327:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		out_b( RIIC_ICCR1(unit), RIIC_ICCR1_IICRST | RIIC_ICCR1_SOWP);
 1200                             		.loc 2 327 10
 1201 084d FB 52 00 00 00 00       		mov.L	#_ba, r5
 1202 0853 ED A4 02                		mov.L	8[r10], r4
 1203 0856 FE 64 55                		mov.L	[r4,r5], r5
 1204                             		.loc 2 327 3
 1205 0859 75 42 50                		mov	#0x50, r2
 1206 085c EF 51                   		mov.L	r5, r1
 1207 085e 39 B9 F7                		bsr	_out_b
 328:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		out_b( RIIC_ICCR1(unit), RIIC_ICCR1_IICRST| RIIC_ICCR1_ICE | RIIC_ICCR1_SOWP);
 1208                             		.loc 2 328 10
 1209 0861 FB 52 00 00 00 00       		mov.L	#_ba, r5
 1210 0867 ED A4 02                		mov.L	8[r10], r4
 1211 086a FE 64 55                		mov.L	[r4,r5], r5
 1212                             		.loc 2 328 3
 1213 086d FB 26 D0                		mov	#-48, r2
 1214 0870 EF 51                   		mov.L	r5, r1
 1215 0872 39 A5 F7                		bsr	_out_b
 329:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 330:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		/* I2C Initial setting */
 331:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		out_b( RIIC_ICSER(unit), 0);
 1216                             		.loc 2 331 10
 1217 0875 FB 52 00 00 00 00       		mov.L	#_ba, r5
 1218 087b ED A4 02                		mov.L	8[r10], r4
 1219 087e FE 64 55                		mov.L	[r4,r5], r5
 1220                             		.loc 2 331 3
 1221 0881 62 65                   		add	#6, r5
 1222 0883 66 02                   		mov	#0, r2
 1223 0885 EF 51                   		mov.L	r5, r1
 1224 0887 39 90 F7                		bsr	_out_b
 332:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		out_b( RIIC_ICMR1(unit), DEVCNF_I2C_CKS<<4 );
 1225                             		.loc 2 332 10
 1226 088a FB 52 00 00 00 00       		mov.L	#_ba, r5
 1227 0890 ED A4 02                		mov.L	8[r10], r4
 1228 0893 FE 64 55                		mov.L	[r4,r5], r5
 1229                             		.loc 2 332 3
 1230 0896 62 25                   		add	#2, r5
 1231 0898 75 42 70                		mov	#0x70, r2
 1232 089b EF 51                   		mov.L	r5, r1
 1233 089d 39 7A F7                		bsr	_out_b
 333:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		out_b( RIIC_ICBRH(unit), RIIC_ICBRH_INI);
 1234                             		.loc 2 333 10
 1235 08a0 FB 52 00 00 00 00       		mov.L	#_ba, r5
 1236 08a6 ED A4 02                		mov.L	8[r10], r4
 1237 08a9 FE 64 55                		mov.L	[r4,r5], r5
 1238                             		.loc 2 333 3
 1239 08ac 71 55 11                		add	#17, r5
 1240 08af FB 26 F6                		mov	#-10, r2
 1241 08b2 EF 51                   		mov.L	r5, r1
 1242 08b4 39 63 F7                		bsr	_out_b
 334:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		out_b( RIIC_ICBRL(unit), RIIC_ICBRL_INI);
 1243                             		.loc 2 334 10
 1244 08b7 FB 52 00 00 00 00       		mov.L	#_ba, r5
 1245 08bd ED A4 02                		mov.L	8[r10], r4
 1246 08c0 FE 64 55                		mov.L	[r4,r5], r5
 1247                             		.loc 2 334 3
 1248 08c3 71 55 10                		add	#16, r5
 1249 08c6 FB 26 F6                		mov	#-10, r2
 1250 08c9 EF 51                   		mov.L	r5, r1
 1251 08cb 39 4C F7                		bsr	_out_b
 335:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 336:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		/* Interrupt initialize */
 337:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		out_b( RIIC_ICIER(unit), 0);
 1252                             		.loc 2 337 10
 1253 08ce FB 52 00 00 00 00       		mov.L	#_ba, r5
 1254 08d4 ED A4 02                		mov.L	8[r10], r4
 1255 08d7 FE 64 55                		mov.L	[r4,r5], r5
 1256                             		.loc 2 337 3
 1257 08da 62 75                   		add	#7, r5
 1258 08dc 66 02                   		mov	#0, r2
 1259 08de EF 51                   		mov.L	r5, r1
 1260 08e0 39 37 F7                		bsr	_out_b
 338:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		out_b( RIIC_ICSR2(unit), 0);
 1261                             		.loc 2 338 10
 1262 08e3 FB 52 00 00 00 00       		mov.L	#_ba, r5
 1263 08e9 ED A4 02                		mov.L	8[r10], r4
 1264 08ec FE 64 55                		mov.L	[r4,r5], r5
 1265                             		.loc 2 338 3
 1266 08ef 62 95                   		add	#9, r5
 1267 08f1 66 02                   		mov	#0, r2
 1268 08f3 EF 51                   		mov.L	r5, r1
 1269 08f5 39 22 F7                		bsr	_out_b
 339:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		EnableInt( ll_devdat[unit].intno_rxi, ll_devdat[unit].intpri);
 1270                             		.loc 2 339 3
 1271 08f8 FB 42 0C 00 00 00       		mov.L	#_ll_devdat, r4
 1272 08fe ED A5 02                		mov.L	8[r10], r5
 1273 0901 6C 45                   		shll	#4, r5
 1274 0903 4B 45                   		add	r4, r5
 1275 0905 EC 53                   		mov.L	[r5], r3
 1276 0907 FB 42 0C 00 00 00       		mov.L	#_ll_devdat, r4
 1277 090d ED A5 02                		mov.L	8[r10], r5
 1278 0910 6C 45                   		shll	#4, r5
 1279 0912 4B 45                   		add	r4, r5
 1280 0914 62 85                   		add	#8, r5
 1281 0916 EC 55                   		mov.L	[r5], r5
 1282 0918 EF 52                   		mov.L	r5, r2
 1283 091a EF 31                   		mov.L	r3, r1
 1284 091c 05 00 00 00             		bsr	_EnableInt
 340:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		EnableInt( ll_devdat[unit].intno_txi, ll_devdat[unit].intpri);
 1285                             		.loc 2 340 3
 1286 0920 FB 42 0C 00 00 00       		mov.L	#_ll_devdat, r4
 1287 0926 ED A5 02                		mov.L	8[r10], r5
 1288 0929 6C 45                   		shll	#4, r5
 1289 092b 4B 45                   		add	r4, r5
 1290 092d 62 45                   		add	#4, r5
 1291 092f EC 53                   		mov.L	[r5], r3
 1292 0931 FB 42 0C 00 00 00       		mov.L	#_ll_devdat, r4
 1293 0937 ED A5 02                		mov.L	8[r10], r5
 1294 093a 6C 45                   		shll	#4, r5
 1295 093c 4B 45                   		add	r4, r5
 1296 093e 62 85                   		add	#8, r5
 1297 0940 EC 55                   		mov.L	[r5], r5
 1298 0942 EF 52                   		mov.L	r5, r2
 1299 0944 EF 31                   		mov.L	r3, r1
 1300 0946 05 00 00 00             		bsr	_EnableInt
 341:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		EnableInt( INTNO_GROUPBL1, ll_devdat[unit].intpri);
 1301                             		.loc 2 341 3
 1302 094a FB 42 0C 00 00 00       		mov.L	#_ll_devdat, r4
 1303 0950 ED A5 02                		mov.L	8[r10], r5
 1304 0953 6C 45                   		shll	#4, r5
 1305 0955 4B 45                   		add	r4, r5
 1306 0957 62 85                   		add	#8, r5
 1307 0959 EC 55                   		mov.L	[r5], r5
 1308 095b EF 52                   		mov.L	r5, r2
 1309 095d 75 41 6F                		mov.L	#0x6f, r1
 1310 0960 05 00 00 00             		bsr	_EnableInt
 342:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 343:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		/* Release reset */
 344:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		out_b( RIIC_ICCR1(unit),  RIIC_ICCR1_ICE | RIIC_ICCR1_SOWP);
 1311                             		.loc 2 344 10
 1312 0964 FB 52 00 00 00 00       		mov.L	#_ba, r5
 1313 096a ED A4 02                		mov.L	8[r10], r4
 1314 096d FE 64 55                		mov.L	[r4,r5], r5
 1315                             		.loc 2 344 3
 1316 0970 FB 26 90                		mov	#-112, r2
 1317 0973 EF 51                   		mov.L	r5, r1
 1318 0975 39 A2 F6                		bsr	_out_b
 345:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		break;
 1319                             		.loc 2 345 3
 1320 0978 38 22 01                		bra	.L63
 1321                             	.L62:
 346:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 347:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	case LLD_I2C_CLOSE:
 348:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		/* Disable I2C interrupt */
 349:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		DisableInt(ll_devdat[unit].intno_rxi);
 1322                             		.loc 2 349 3
 1323 097b FB 42 0C 00 00 00       		mov.L	#_ll_devdat, r4
 1324 0981 ED A5 02                		mov.L	8[r10], r5
 1325 0984 6C 45                   		shll	#4, r5
 1326 0986 4B 45                   		add	r4, r5
 1327 0988 EC 55                   		mov.L	[r5], r5
 1328 098a EF 51                   		mov.L	r5, r1
 1329 098c 05 00 00 00             		bsr	_DisableInt
 350:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		DisableInt(ll_devdat[unit].intno_txi);
 1330                             		.loc 2 350 3
 1331 0990 FB 42 0C 00 00 00       		mov.L	#_ll_devdat, r4
 1332 0996 ED A5 02                		mov.L	8[r10], r5
 1333 0999 6C 45                   		shll	#4, r5
 1334 099b 4B 45                   		add	r4, r5
 1335 099d 62 45                   		add	#4, r5
 1336 099f EC 55                   		mov.L	[r5], r5
 1337 09a1 EF 51                   		mov.L	r5, r1
 1338 09a3 05 00 00 00             		bsr	_DisableInt
 351:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		DisableInt(INTNO_GROUPBL1);
 1339                             		.loc 2 351 3
 1340 09a7 75 41 6F                		mov.L	#0x6f, r1
 1341 09aa 05 00 00 00             		bsr	_DisableInt
 352:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		break;
 1342                             		.loc 2 352 3
 1343 09ae 38 EC 00                		bra	.L63
 1344                             	.L59:
 353:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 354:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	case LLD_I2C_READ:
 355:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		set_com_start( &ll_devcb[unit], p1, 0, p2, NULL, (UB*)pp);
 1345                             		.loc 2 355 3
 1346 09b1 ED A4 02                		mov.L	8[r10], r4
 1347 09b4 6C 54                   		shll	#5, r4
 1348 09b6 70 41 00 00 00 00       		add	#_ll_devcb, r4, r1
 1349 09bc EC 55                   		mov.L	[r5], r5
 1350 09be A0 0D                   		mov.L	r5, 4[r0]
 1351 09c0 F8 06 00                		mov.L	#0, [r0]
 1352 09c3 ED A4 05                		mov.L	20[r10], r4
 1353 09c6 66 03                   		mov.L	#0, r3
 1354 09c8 ED A2 04                		mov.L	16[r10], r2
 1355 09cb 39 EB FD                		bsr	_set_com_start
 356:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		err = i2c_trans(unit);
 1356                             		.loc 2 356 9
 1357 09ce ED A1 02                		mov.L	8[r10], r1
 1358 09d1 39 B8 FC                		bsr	_i2c_trans
 1359 09d4 E3 A1                   		mov.L	r1, [r10]
 357:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		if(err >= E_OK) err = p2 - ll_devcb[unit].sdat_num;
 1360                             		.loc 2 357 5
 1361 09d6 EC A5                   		mov.L	[r10], r5
 1362 09d8 61 05                   		cmp	#0, r5
 1363 09da 28 05 38 B8 00          		blt	.L70
 1364                             		.loc 2 357 44 discriminator 1
 1365 09df FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 1366 09e5 ED A5 02                		mov.L	8[r10], r5
 1367 09e8 6C 55                   		shll	#5, r5
 1368 09ea 4B 45                   		add	r4, r5
 1369 09ec 71 55 10                		add	#16, r5
 1370 09ef EC 55                   		mov.L	[r5], r5
 1371                             		.loc 2 357 28 discriminator 1
 1372 09f1 ED A4 05                		mov.L	20[r10], r4
 1373 09f4 FF 05 54                		sub	r5, r4, r5
 1374                             		.loc 2 357 23 discriminator 1
 1375 09f7 E3 A5                   		mov.L	r5, [r10]
 358:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		break;
 1376                             		.loc 2 358 3 discriminator 1
 1377 09f9 38 9B 00                		bra	.L70
 1378                             	.L64:
 359:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 360:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	case LLD_I2C_WRITE:
 361:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		set_com_start( &ll_devcb[unit], p1, p2, 0, (UB*)pp, NULL);
 1379                             		.loc 2 361 3
 1380 09fc ED A4 02                		mov.L	8[r10], r4
 1381 09ff 6C 54                   		shll	#5, r4
 1382 0a01 70 41 00 00 00 00       		add	#_ll_devcb, r4, r1
 1383 0a07 3E 01 00                		mov.L	#0, 4[r0]
 1384 0a0a EC 55                   		mov.L	[r5], r5
 1385 0a0c E3 05                   		mov.L	r5, [r0]
 1386 0a0e 66 04                   		mov.L	#0, r4
 1387 0a10 ED A3 05                		mov.L	20[r10], r3
 1388 0a13 ED A2 04                		mov.L	16[r10], r2
 1389 0a16 39 A0 FD                		bsr	_set_com_start
 362:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		err = i2c_trans(unit);
 1390                             		.loc 2 362 9
 1391 0a19 ED A1 02                		mov.L	8[r10], r1
 1392 0a1c 39 6D FC                		bsr	_i2c_trans
 1393 0a1f E3 A1                   		mov.L	r1, [r10]
 363:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		if(err >= E_OK) err = p2 - ll_devcb[unit].sdat_num;
 1394                             		.loc 2 363 5
 1395 0a21 EC A5                   		mov.L	[r10], r5
 1396 0a23 61 05                   		cmp	#0, r5
 1397 0a25 29 71                   		blt	.L71
 1398                             		.loc 2 363 44 discriminator 1
 1399 0a27 FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 1400 0a2d ED A5 02                		mov.L	8[r10], r5
 1401 0a30 6C 55                   		shll	#5, r5
 1402 0a32 4B 45                   		add	r4, r5
 1403 0a34 71 55 10                		add	#16, r5
 1404 0a37 EC 55                   		mov.L	[r5], r5
 1405                             		.loc 2 363 28 discriminator 1
 1406 0a39 ED A4 05                		mov.L	20[r10], r4
 1407 0a3c FF 05 54                		sub	r5, r4, r5
 1408                             		.loc 2 363 23 discriminator 1
 1409 0a3f E3 A5                   		mov.L	r5, [r10]
 364:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		break;
 1410                             		.loc 2 364 3 discriminator 1
 1411 0a41 2E 55                   		bra	.L71
 1412                             	.L65:
 365:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 366:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	case LLD_I2C_EXEC:
 367:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		p_ex = (T_I2C_EXEC*)pp;
 1413                             		.loc 2 367 8
 1414 0a43 EC 55                   		mov.L	[r5], r5
 1415 0a45 E7 A5 01                		mov.L	r5, 4[r10]
 368:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		set_com_start( &ll_devcb[unit], (p_ex->sadr), p_ex->snd_size, p_ex->rcv_size, p_ex->snd_data, p_e
 1416                             		.loc 2 368 3
 1417 0a48 ED A5 02                		mov.L	8[r10], r5
 1418 0a4b 6C 55                   		shll	#5, r5
 1419 0a4d 70 51 00 00 00 00       		add	#_ll_devcb, r5, r1
 1420 0a53 ED A5 01                		mov.L	4[r10], r5
 1421 0a56 EC 52                   		mov.L	[r5], r2
 1422                             		.loc 2 368 53
 1423 0a58 ED A5 01                		mov.L	4[r10], r5
 1424 0a5b A8 5D                   		mov.L	4[r5], r5
 1425                             		.loc 2 368 3
 1426 0a5d EF 53                   		mov.L	r5, r3
 1427                             		.loc 2 368 69
 1428 0a5f ED A5 01                		mov.L	4[r10], r5
 1429 0a62 A8 DD                   		mov.L	12[r5], r5
 1430                             		.loc 2 368 3
 1431 0a64 EF 54                   		mov.L	r5, r4
 1432 0a66 ED A5 01                		mov.L	4[r10], r5
 1433 0a69 A8 D6                   		mov.L	8[r5], r6
 1434 0a6b ED A5 01                		mov.L	4[r10], r5
 1435 0a6e A9 55                   		mov.L	16[r5], r5
 1436 0a70 A0 0D                   		mov.L	r5, 4[r0]
 1437 0a72 E3 06                   		mov.L	r6, [r0]
 1438 0a74 39 42 FD                		bsr	_set_com_start
 369:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		err = i2c_trans(unit);
 1439                             		.loc 2 369 9
 1440 0a77 ED A1 02                		mov.L	8[r10], r1
 1441 0a7a 39 0F FC                		bsr	_i2c_trans
 1442 0a7d E3 A1                   		mov.L	r1, [r10]
 370:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		if(err >= E_OK) err = p_ex->snd_size + p_ex->rcv_size;
 1443                             		.loc 2 370 5
 1444 0a7f EC A5                   		mov.L	[r10], r5
 1445 0a81 61 05                   		cmp	#0, r5
 1446 0a83 29 16                   		blt	.L72
 1447                             		.loc 2 370 29 discriminator 1
 1448 0a85 ED A5 01                		mov.L	4[r10], r5
 1449 0a88 A8 5C                   		mov.L	4[r5], r4
 1450                             		.loc 2 370 46 discriminator 1
 1451 0a8a ED A5 01                		mov.L	4[r10], r5
 1452 0a8d A8 DD                   		mov.L	12[r5], r5
 1453                             		.loc 2 370 23 discriminator 1
 1454 0a8f 4B 45                   		add	r4, r5
 1455 0a91 E3 A5                   		mov.L	r5, [r10]
 371:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		break;
 1456                             		.loc 2 371 3 discriminator 1
 1457 0a93 0E                      		bra	.L72
 1458                             	.L70:
 358:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 1459                             		.loc 2 358 3
 1460 0a94 03                      		nop
 1461 0a95 0D                      		bra	.L63
 1462                             	.L71:
 364:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 1463                             		.loc 2 364 3
 1464 0a96 03                      		nop
 1465 0a97 2E 03                   		bra	.L63
 1466                             	.L72:
 1467                             		.loc 2 371 3
 1468 0a99 03                      		nop
 1469                             		.balign 8,3,1
 1470                             	.L63:
 372:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	}
 373:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	
 374:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	return (W)err;
 1471                             		.loc 2 374 9
 1472 0a9a EC A5                   		mov.L	[r10], r5
 375:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** }
 1473                             		.loc 2 375 1
 1474 0a9c EF 51                   		mov.L	r5, r1
 1475 0a9e 71 00 24                		add	#36, r0
 1476 0aa1 7E B6                   		pop	r6
 1477 0aa3 7E BA                   		pop	r10
 1478 0aa5 02                      		rts
 1479                             	.LFE13:
 1481                             		.global	_dev_i2c_llinit
 1483                             	_dev_i2c_llinit:
 1484                             	.LFB14:
 376:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 377:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** /*----------------------------------------------------------------------
 378:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  * Device initialization
 379:../device/i2c/sysdepend/rx65n/i2c_rx65n.c ****  */
 380:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** EXPORT ER dev_i2c_llinit( T_I2C_DCB *p_dcb)
 381:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** {
 1485                             		.loc 2 381 1
 1486 0aa6 7E AA                   		push.l	r10
 1487                             	.LCFI27:
 1488 0aa8 7E A6                   		push.l	r6
 1489                             	.LCFI28:
 1490 0aaa 71 0A E8                		add	#-24, r0, r10
 1491                             	.LCFI29:
 1492 0aad EF A0                   		mov.L	r10, r0
 1493 0aaf E7 A1 05                		mov.L	r1, 20[r10]
 382:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	T_DINT	dint = {
 1494                             		.loc 2 382 9
 1495 0ab2 F9 A6 03 00             		mov.L	#0, 12[r10]
 1496 0ab6 F9 A6 04 00             		mov.L	#0, 16[r10]
 1497 0aba F9 A6 03 01             		mov.L	#1, 12[r10]
 383:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		.intatr = TA_HLNG,
 384:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	};
 385:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	UW	unit;
 386:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	ER	err;
 387:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 388:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	unit = p_dcb->unit;
 1498                             		.loc 2 388 7
 1499 0abe ED A5 05                		mov.L	20[r10], r5
 1500 0ac1 EC 55                   		mov.L	[r5], r5
 1501 0ac3 E7 A5 01                		mov.L	r5, 4[r10]
 389:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 390:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #if DEVCONF_I2C_INIT_MSTP		// Initialize module stop
 391:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	UINT	sts;
 392:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 393:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	if(in_w(MSTPCRB) & (1<<21)) {
 394:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		DI(sts);
 395:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		out_h(SYSTEM_PRCR, 0xA502);		// Disable Register Protect
 396:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 397:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		/* Release module stop */
 398:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		switch (unit) {
 399:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		case DEV_I2C_UNIT0:
 400:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			*(UW*)(MSTPCRB) &= ~(1<<21);
 401:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			break;
 402:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		case DEV_I2C_UNIT1:
 403:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			*(UW*)(MSTPCRB) &= ~(1<<20);
 404:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			break;
 405:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		case DEV_I2C_UNIT2:
 406:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			*(UW*)(MSTPCRC) &= ~(1<<17);
 407:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			break;
 408:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		default:
 409:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			return E_SYS;
 410:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 			break;
 411:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		}
 412:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 413:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		out_h(SYSTEM_PRCR, 0xA500);		// Enable Register protect
 414:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		EI(sts);
 415:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	}
 416:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #endif	/* DEVCONF_I2C_INIT_MSTP */
 417:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 418:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	out_b(RIIC_ICCR1(unit), in_b(RIIC_ICCR1(unit))&~RIIC_ICCR1_ICE);	// Disable RIIC
 1502                             		.loc 2 418 8
 1503 0ac6 FB 52 00 00 00 00       		mov.L	#_ba, r5
 1504 0acc ED A4 01                		mov.L	4[r10], r4
 1505 0acf FE 64 56                		mov.L	[r4,r5], r6
 1506                             		.loc 2 418 31
 1507 0ad2 FB 52 00 00 00 00       		mov.L	#_ba, r5
 1508 0ad8 ED A4 01                		mov.L	4[r10], r4
 1509 0adb FE 64 55                		mov.L	[r4,r5], r5
 1510                             		.loc 2 418 26
 1511 0ade EF 51                   		mov.L	r5, r1
 1512 0ae0 39 60 F5                		bsr	_in_b
 1513 0ae3 EF 15                   		mov.L	r1, r5
 1514                             		.loc 2 418 2
 1515 0ae5 75 25 7F                		and	#0x7f, r5
 1516 0ae8 CF 52                   		mov.B	r5, r2
 1517 0aea EF 61                   		mov.L	r6, r1
 1518 0aec 39 2B F5                		bsr	_out_b
 419:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 420:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	/* Interrupt handler definition */
 421:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	dint.inthdr	= i2c_rxi_inthdr;
 1519                             		.loc 2 421 14
 1520 0aef F9 A2 04 D3 01 00 00    		mov.L	#_i2c_rxi_inthdr, 16[r10]
 422:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	err = tk_def_int(ll_devdat[unit].intno_rxi, &dint);
 1521                             		.loc 2 422 8
 1522 0af6 FB 42 0C 00 00 00       		mov.L	#_ll_devdat, r4
 1523 0afc ED A5 01                		mov.L	4[r10], r5
 1524 0aff 6C 45                   		shll	#4, r5
 1525 0b01 4B 45                   		add	r4, r5
 1526 0b03 EC 54                   		mov.L	[r5], r4
 1527 0b05 71 A5 0C                		add	#12, r10, r5
 1528 0b08 EF 52                   		mov.L	r5, r2
 1529 0b0a EF 41                   		mov.L	r4, r1
 1530 0b0c 05 00 00 00             		bsr	_tk_def_int
 1531 0b10 E7 A1 02                		mov.L	r1, 8[r10]
 423:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 424:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	dint.inthdr	= i2c_txi_inthdr;
 1532                             		.loc 2 424 14
 1533 0b13 F9 A2 04 54 00 00 00    		mov.L	#_i2c_txi_inthdr, 16[r10]
 425:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	err = tk_def_int(ll_devdat[unit].intno_txi, &dint);
 1534                             		.loc 2 425 8
 1535 0b1a FB 42 0C 00 00 00       		mov.L	#_ll_devdat, r4
 1536 0b20 ED A5 01                		mov.L	4[r10], r5
 1537 0b23 6C 45                   		shll	#4, r5
 1538 0b25 4B 45                   		add	r4, r5
 1539 0b27 62 45                   		add	#4, r5
 1540 0b29 EC 54                   		mov.L	[r5], r4
 1541 0b2b 71 A5 0C                		add	#12, r10, r5
 1542 0b2e EF 52                   		mov.L	r5, r2
 1543 0b30 EF 41                   		mov.L	r4, r1
 1544 0b32 05 00 00 00             		bsr	_tk_def_int
 1545 0b36 E7 A1 02                		mov.L	r1, 8[r10]
 426:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 427:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	dint.inthdr	= i2c_xei_inthdr;
 1546                             		.loc 2 427 14
 1547 0b39 F9 A2 04 06 06 00 00    		mov.L	#_i2c_xei_inthdr, 16[r10]
 428:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	err = tk_def_int(INTNO_GROUPBL1, &dint);	// GROUPBL1
 1548                             		.loc 2 428 8
 1549 0b40 71 A5 0C                		add	#12, r10, r5
 1550 0b43 EF 52                   		mov.L	r5, r2
 1551 0b45 75 41 6F                		mov.L	#0x6f, r1
 1552 0b48 05 00 00 00             		bsr	_tk_def_int
 1553 0b4c E7 A1 02                		mov.L	r1, 8[r10]
 429:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 430:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #if DEVCONF_I2C_INIT_GRPI
 431:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	UW	reg;
 432:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 433:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	reg = in_w(ICU_GENBL1);
 1554                             		.loc 2 433 8
 1555 0b4f FB 1E 74 76 08          		mov.L	#0x87674, r1
 1556 0b54 39 DA F4                		bsr	_in_w
 1557 0b57 E3 A1                   		mov.L	r1, [r10]
 434:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	switch(unit) {
 1558                             		.loc 2 434 2
 1559 0b59 ED A5 01                		mov.L	4[r10], r5
 1560 0b5c 61 15                   		cmp	#1, r5
 1561 0b5e 20 1B                   		beq	.L74
 1562 0b60 ED A5 01                		mov.L	4[r10], r5
 1563 0b63 61 05                   		cmp	#0, r5
 1564 0b65 12                      		beq	.L75
 1565 0b66 ED A5 01                		mov.L	4[r10], r5
 1566 0b69 61 25                   		cmp	#2, r5
 1567 0b6b 20 1A                   		beq	.L76
 1568 0b6d 2E 23                   		bra	.L77
 1569                             	.L75:
 435:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	case DEV_I2C_UNIT0:
 436:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		reg |= (1<<13)|(1<<14);
 1570                             		.loc 2 436 7
 1571 0b6f EC A5                   		mov.L	[r10], r5
 1572 0b71 76 35 00 60             		or	#0x6000, r5
 1573 0b75 E3 A5                   		mov.L	r5, [r10]
 437:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		break;
 1574                             		.loc 2 437 3
 1575 0b77 2E 19                   		bra	.L77
 1576                             	.L74:
 438:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	case DEV_I2C_UNIT1:
 439:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		reg |= (1<<28)|(1<<29);
 1577                             		.loc 2 439 7
 1578 0b79 EC A5                   		mov.L	[r10], r5
 1579 0b7b 74 35 00 00 00 30       		or	#0x30000000, r5
 1580 0b81 E3 A5                   		mov.L	r5, [r10]
 440:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		break;
 1581                             		.loc 2 440 3
 1582 0b83 2E 0D                   		bra	.L77
 1583                             	.L76:
 441:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	case DEV_I2C_UNIT2:
 442:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		reg |= (1<<15)|(1<<16);
 1584                             		.loc 2 442 7
 1585 0b85 EC A5                   		mov.L	[r10], r5
 1586 0b87 77 35 00 80 01          		or	#0x18000, r5
 1587 0b8c E3 A5                   		mov.L	r5, [r10]
 443:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 		break;
 1588                             		.loc 2 443 3
 1589 0b8e 03                      		nop
 1590 0b8f 03                      		.balign 8,3,1
 1591                             	.L77:
 444:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	}
 445:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	out_w(ICU_GENBL1, reg);
 1592                             		.loc 2 445 2
 1593 0b90 EC A2                   		mov.L	[r10], r2
 1594 0b92 FB 1E 74 76 08          		mov.L	#0x87674, r1
 1595 0b97 39 69 F4                		bsr	_out_w
 446:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** #endif
 447:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 
 448:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** 	return err;
 1596                             		.loc 2 448 9
 1597 0b9a ED A5 02                		mov.L	8[r10], r5
 449:../device/i2c/sysdepend/rx65n/i2c_rx65n.c **** }
 1598                             		.loc 2 449 1
 1599 0b9d EF 51                   		mov.L	r5, r1
 1600 0b9f 71 00 18                		add	#24, r0
 1601 0ba2 7E B6                   		pop	r6
 1602 0ba4 7E BA                   		pop	r10
 1603 0ba6 02                      		rts
 1604                             	.LFE14:
 1894                             	.Letext0:
 1895                             		.file 3 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\include/tk/typedef.h"
 1896                             		.file 4 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\include/tk/syscall.h"
 1897                             		.file 5 "../device/i2c/sysdepend/rx65n/../../../include/dev_i2c.h"
 1898                             		.file 6 "../device/i2c/sysdepend/rx65n/../../i2c.h"
