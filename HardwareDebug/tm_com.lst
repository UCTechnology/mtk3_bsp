   1                             		.file	"tm_com.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   5                             	_out_b:
   6                             	.LFB2:
   7                             		.file 1 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include\\tk\\sysdepend\\cpu\\rx65n\\syslib
   1:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /*
   2:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *----------------------------------------------------------------------
   3:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *    micro T-Kernel 3.00.06.B0
   4:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *
   5:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *    Copyright (C) 2022 by Ken Sakamura.
   6:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *    This software is distributed under the T-License 2.2.
   7:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *----------------------------------------------------------------------
   8:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *
   9:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *    Released by TRON Forum(http://www.tron.org) at 2022/04.
  10:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *
  11:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *----------------------------------------------------------------------
  12:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  */
  13:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /*
  14:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *	syslib.h
  15:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *
  16:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *	micro T-Kernel System Library  (RX65N depended)
  17:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  */
  18:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  19:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #ifndef __TK_SYSLIB_CPU_DEPEND_H__
  20:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define __TK_SYSLIB_CPU_DEPEND_H__
  21:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  22:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #include "../core/rxv2/syslib.h"
  23:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  24:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /*----------------------------------------------------------------------*/
  25:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /*
  26:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  * Interrupt controller Control
  27:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *
  28:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  */
  29:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define IM_LEVEL	0x0004		/* Level trigger */
  30:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define IM_EDGE		0x0000		/* Edge trigger */
  31:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  32:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define IM_HI		0x0000		/* H level/Interrupt at rising edge */
  33:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define IM_LOW		0x0001		/* L level/Interrupt at falling edge */
  34:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define IM_BOTH		0x0003		/* L level/Interrupt at both edge */
  35:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  36:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /* ------------------------------------------------------------------------ */
  37:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /*
  38:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  * I/O port access
  39:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *	for memory mapped I/O
  40:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  */
  41:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline void out_w( UW port, UW data )
  42:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
  43:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	*(_UW*)port = data;
  44:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  45:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline void out_h( UW port, UH data )
  46:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
  47:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	*(_UH*)port = data;
  48:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  49:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline void out_b( UW port, UB data )
  50:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
   8                             		.loc 1 50 1
   9 0000 7E AA                   		push.l	r10
  10                             	.LCFI0:
  11 0002 71 0A F8                		add	#-8, r0, r10
  12                             	.LCFI1:
  13 0005 EF A0                   		mov.L	r10, r0
  14 0007 E3 A1                   		mov.L	r1, [r10]
  15 0009 C7 A2 04                		mov.B	r2, 4[r10]
  51:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	*(_UB*)port = data;
  16                             		.loc 1 51 3
  17 000c EC A5                   		mov.L	[r10], r5
  18                             		.loc 1 51 14
  19 000e CD A4 04                		mov.B	4[r10], r4
  20 0011 C3 54                   		mov.B	r4, [r5]
  52:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  21                             		.loc 1 52 1
  22 0013 03                      		nop
  23 0014 3F AA 03                		rtsd	#12, r10-r10
  24                             	.LFE2:
  27                             	_in_b:
  28                             	.LFB5:
  53:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  54:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline UW in_w( UW port )
  55:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
  56:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	return *(_UW*)port;
  57:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  58:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline UH in_h( UW port )
  59:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
  60:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	return *(_UH*)port;
  61:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  62:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline UB in_b( UW port )
  63:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
  29                             		.loc 1 63 1
  30 0017 7E AA                   		push.l	r10
  31                             	.LCFI2:
  32 0019 71 0A FC                		add	#-4, r0, r10
  33                             	.LCFI3:
  34 001c EF A0                   		mov.L	r10, r0
  35 001e E3 A1                   		mov.L	r1, [r10]
  64:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	return *(_UB*)port;
  36                             		.loc 1 64 10
  37 0020 EC A5                   		mov.L	[r10], r5
  38                             		.loc 1 64 9
  39 0022 CC 55                   		mov.B	[r5], r5
  40 0024 5B 55                   		movu.B	r5, r5
  65:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  41                             		.loc 1 65 1
  42 0026 EF 51                   		mov.L	r5, r1
  43 0028 3F AA 02                		rtsd	#8, r10-r10
  44                             	.LFE5:
  46                             		.global	_tm_snd_dat
  48                             	_tm_snd_dat:
  49                             	.LFB6:
  50                             		.file 2 "../lib/libtm/sysdepend/rtb_rz65n/tm_com.c"
   1:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** /*
   2:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c ****  *----------------------------------------------------------------------
   3:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c ****  *    micro T-Kernel 3.00.06.B0
   4:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c ****  *
   5:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c ****  *    Copyright (C) 2022 by Ken Sakamura.
   6:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c ****  *    This software is distributed under the T-License 2.2.
   7:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c ****  *----------------------------------------------------------------------
   8:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c ****  *
   9:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c ****  *    Released by TRON Forum(http://www.tron.org) at 2022.
  10:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c ****  *
  11:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c ****  *----------------------------------------------------------------------
  12:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c ****  */
  13:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 
  14:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** /*
  15:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c ****  *    tm_com.c
  16:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c ****  *    T-Monitor Communication low-level device driver (Renesas Stsrter Kit+ for RX65N)
  17:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c ****  */
  18:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 
  19:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #include <tk/tkernel.h>
  20:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #include <sys/sysdef.h>
  21:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 
  22:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #if USE_TMONITOR
  23:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #include "../../libtm.h"
  24:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 
  25:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #ifdef RTB_RX65N
  26:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #if TM_COM_SERIAL_DEV
  27:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 
  28:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #define	PCLK		(60000000UL)		/* P Clock(60MHz) */
  29:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #define	ICLK		(120000000UL)		/* I Clock(120MHz) */
  30:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #define RS_BAUD_RATE	(115200)		/* 115.2kbps */
  31:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 
  32:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #define	SCI8_SMR	(0x0008A100UL)		/* Serial mode register */
  33:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #define SCI8_BRR	(0x0008A101UL)		/* Bit rate register */
  34:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #define	SCI8_SCR	(0x0008A102UL)		/* Serial control register */
  35:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #define	SCI8_TDR	(0x0008A103UL)		/* Transmit data register */
  36:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #define	SCI8_SSR	(0x0008A104UL)		/* Serial status register */
  37:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #define	SCI8_RDR	(0x0008A105UL)		/* Receive data register */
  38:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #define	SCI8_SCMR	(0x0008A106UL)		/* Smartcard mode register */
  39:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #define	SCI8_SEMR	(0x0008A107UL)		/* Serial Extended mode register */
  40:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 
  41:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #define	SCR_TIE		(0x80)			/* Transmit interrupt enable */
  42:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #define	SCR_RIE		(0x40)			/* Receive interrupt ebable */
  43:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #define	SCR_TE		(0x20)			/* Transmit enable */
  44:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #define	SCR_RE		(0x10)			/* Receive enable */
  45:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 
  46:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #define	SSR_TDRE	(0x80)			/* Transmit data empty */
  47:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #define SSR_RDRF	(0x40)			/* Receive data full */
  48:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** #define	SSR_ERR		(0x38)			/* Error */
  49:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 
  50:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** EXPORT	void	tm_snd_dat( const UB* buf, INT size )
  51:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** {
  51                             		.loc 2 51 1
  52 002b 7E AA                   		push.l	r10
  53                             	.LCFI4:
  54 002d 71 0A F4                		add	#-12, r0, r10
  55                             	.LCFI5:
  56 0030 EF A0                   		mov.L	r10, r0
  57 0032 E7 A1 01                		mov.L	r1, 4[r10]
  58 0035 E7 A2 02                		mov.L	r2, 8[r10]
  52:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 	UB	*b;
  53:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 
  54:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 	for( b = (UB *)buf; size > 0; size--, b++ ){
  59                             		.loc 2 54 9
  60 0038 ED A5 01                		mov.L	4[r10], r5
  61 003b E3 A5                   		mov.L	r5, [r10]
  62                             		.loc 2 54 2
  63 003d 2E 2F                   		bra	.L5
  64                             	.L7:
  55:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 		while( (in_b(SCI8_SSR) & SSR_TDRE) == 0);
  65                             		.loc 2 55 8
  66 003f 03                      		nop
  67                             	.L6:
  68                             		.loc 2 55 11 discriminator 1
  69 0040 FB 1E 04 A1 08          		mov.L	#0x8a104, r1
  70 0045 39 D2 FF                		bsr	_in_b
  71 0048 EF 15                   		mov.L	r1, r5
  72                             		.loc 2 55 8 discriminator 1
  73 004a CF 55                   		mov.B	r5, r5
  74 004c 61 05                   		cmp	#0, r5
  75 004e 28 F2                   		bge	.L6
  56:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 		out_b( SCI8_TDR, *b );
  76                             		.loc 2 56 3 discriminator 2
  77 0050 EC A5                   		mov.L	[r10], r5
  78 0052 CC 55                   		mov.B	[r5], r5
  79 0054 CF 52                   		mov.B	r5, r2
  80 0056 FB 1E 03 A1 08          		mov.L	#0x8a103, r1
  81 005b 39 A5 FF                		bsr	_out_b
  54:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 		while( (in_b(SCI8_SSR) & SSR_TDRE) == 0);
  82                             		.loc 2 54 36 discriminator 2
  83 005e ED A5 02                		mov.L	8[r10], r5
  84 0061 60 15                   		sub	#1, r5
  85 0063 E7 A5 02                		mov.L	r5, 8[r10]
  54:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 		while( (in_b(SCI8_SSR) & SSR_TDRE) == 0);
  86                             		.loc 2 54 41 discriminator 2
  87 0066 EC A5                   		mov.L	[r10], r5
  88 0068 62 15                   		add	#1, r5
  89 006a E3 A5                   		mov.L	r5, [r10]
  90                             	.L5:
  54:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 		while( (in_b(SCI8_SSR) & SSR_TDRE) == 0);
  91                             		.loc 2 54 2 discriminator 1
  92 006c ED A5 02                		mov.L	8[r10], r5
  93 006f 61 05                   		cmp	#0, r5
  94 0071 2A CE                   		bgt	.L7
  57:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 	}
  58:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** }
  95                             		.loc 2 58 1
  96 0073 03                      		nop
  97 0074 3F AA 04                		rtsd	#16, r10-r10
  98                             	.LFE6:
 100                             		.global	_tm_rcv_dat
 102                             	_tm_rcv_dat:
 103                             	.LFB7:
  59:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 
  60:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** EXPORT	void	tm_rcv_dat( UB* buf, INT size )
  61:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** {
 104                             		.loc 2 61 1
 105 0077 7E AA                   		push.l	r10
 106                             	.LCFI6:
 107 0079 71 0A F4                		add	#-12, r0, r10
 108                             	.LCFI7:
 109 007c EF A0                   		mov.L	r10, r0
 110 007e E7 A1 01                		mov.L	r1, 4[r10]
 111 0081 E7 A2 02                		mov.L	r2, 8[r10]
  62:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 	UB	ssr;
  63:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 
  64:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 	for( ; size > 0; size--, buf++ ){
 112                             		.loc 2 64 2
 113 0084 2E 54                   		bra	.L9
 114                             	.L13:
  65:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 		while(1) {
  66:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 			ssr = in_b(SCI8_SSR);
 115                             		.loc 2 66 10
 116 0086 FB 1E 04 A1 08          		mov.L	#0x8a104, r1
 117 008b 39 8C FF                		bsr	_in_b
 118 008e EF 15                   		mov.L	r1, r5
 119 0090 C3 A5                   		mov.B	r5, [r10]
  67:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 			if( (ssr & SSR_RDRF) != 0) {
 120                             		.loc 2 67 13
 121 0092 58 A5                   		movu.B	[r10], r5
 122 0094 75 25 40                		and	#0x40, r5
 123                             		.loc 2 67 6
 124 0097 61 05                   		cmp	#0, r5
 125 0099 20 15                   		beq	.L10
  68:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 				*buf = in_b( SCI8_RDR );
 126                             		.loc 2 68 12
 127 009b FB 1E 05 A1 08          		mov.L	#0x8a105, r1
 128 00a0 39 77 FF                		bsr	_in_b
 129 00a3 EF 15                   		mov.L	r1, r5
 130 00a5 CF 54                   		mov.B	r5, r4
 131                             		.loc 2 68 10
 132 00a7 ED A5 01                		mov.L	4[r10], r5
 133 00aa C3 54                   		mov.B	r4, [r5]
  69:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 				break;
 134                             		.loc 2 69 5
 135 00ac 2E 1C                   		bra	.L14
 136                             	.L10:
  70:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 			} else if( ssr & SSR_ERR ) {	/* check Communication error */
 137                             		.loc 2 70 19
 138 00ae 58 A5                   		movu.B	[r10], r5
 139 00b0 75 25 38                		and	#56, r5
 140                             		.loc 2 70 13
 141 00b3 61 05                   		cmp	#0, r5
 142 00b5 20 D1                   		beq	.L13
  71:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 				out_b( SCI8_SSR, ssr & ~SSR_ERR);
 143                             		.loc 2 71 5
 144 00b7 CC A5                   		mov.B	[r10], r5
 145 00b9 75 25 C7                		and	#-57, r5
 146 00bc CF 52                   		mov.B	r5, r2
 147 00be FB 1E 04 A1 08          		mov.L	#0x8a104, r1
 148 00c3 39 3D FF                		bsr	_out_b
  66:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 			if( (ssr & SSR_RDRF) != 0) {
 149                             		.loc 2 66 8
 150 00c6 2E C0                   		bra	.L13
 151                             	.L14:
  64:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 		while(1) {
 152                             		.loc 2 64 23
 153 00c8 ED A5 02                		mov.L	8[r10], r5
 154 00cb 60 15                   		sub	#1, r5
 155 00cd E7 A5 02                		mov.L	r5, 8[r10]
  64:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 		while(1) {
 156                             		.loc 2 64 30
 157 00d0 ED A5 01                		mov.L	4[r10], r5
 158 00d3 62 15                   		add	#1, r5
 159 00d5 E7 A5 01                		mov.L	r5, 4[r10]
 160                             	.L9:
  64:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 		while(1) {
 161                             		.loc 2 64 2 discriminator 1
 162 00d8 ED A5 02                		mov.L	8[r10], r5
 163 00db 61 05                   		cmp	#0, r5
 164 00dd 2A A9                   		bgt	.L13
  72:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 			}
  73:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 		}
  74:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 	}
  75:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** }
 165                             		.loc 2 75 1
 166 00df 03                      		nop
 167 00e0 3F AA 04                		rtsd	#16, r10-r10
 168                             	.LFE7:
 170                             		.global	_tm_com_init
 172                             	_tm_com_init:
 173                             	.LFB8:
  76:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 
  77:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** EXPORT	void	tm_com_init(void)
  78:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** {
 174                             		.loc 2 78 1
 175 00e3 7E AA                   		push.l	r10
 176                             	.LCFI8:
 177 00e5 71 0A FC                		add	#-4, r0, r10
 178                             	.LCFI9:
 179 00e8 EF A0                   		mov.L	r10, r0
  79:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 	_UW	dly;
  80:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 
  81:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 	/* Initialize SCI8 */
  82:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 	out_b(SCI8_SCR, 0x00);			// TE = 0 RE = 0
 180                             		.loc 2 82 2
 181 00ea 66 02                   		mov	#0, r2
 182 00ec FB 1E 02 A1 08          		mov.L	#0x8a102, r1
 183 00f1 39 0F FF                		bsr	_out_b
  83:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 	out_b(SCI8_SMR, 0x00);			// Data8 Stop1
 184                             		.loc 2 83 2
 185 00f4 66 02                   		mov	#0, r2
 186 00f6 FB 1E 00 A1 08          		mov.L	#0x8a100, r1
 187 00fb 39 05 FF                		bsr	_out_b
  84:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 	out_b(SCI8_SCMR, 0x72);			// LSB first
 188                             		.loc 2 84 2
 189 00fe 75 42 72                		mov	#0x72, r2
 190 0101 FB 1E 06 A1 08          		mov.L	#0x8a106, r1
 191 0106 39 FA FE                		bsr	_out_b
  85:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 	out_b(SCI8_SEMR, 0x50);			// set ABCS
 192                             		.loc 2 85 2
 193 0109 75 42 50                		mov	#0x50, r2
 194 010c FB 1E 07 A1 08          		mov.L	#0x8a107, r1
 195 0111 39 EF FE                		bsr	_out_b
  86:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 	out_b(SCI8_BRR, 0x40);			// 115.2kbps
 196                             		.loc 2 86 2
 197 0114 75 42 40                		mov	#0x40, r2
 198 0117 FB 1E 01 A1 08          		mov.L	#0x8a101, r1
 199 011c 39 E4 FE                		bsr	_out_b
  87:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 
  88:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 	dly = ICLK/5/RS_BAUD_RATE;
 200                             		.loc 2 88 6
 201 011f F8 AA D0 00             		mov.L	#0xd0, [r10]
  89:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 	while ((dly--) != 0) ;
 202                             		.loc 2 89 8
 203 0123 03                      		nop
 204                             	.L16:
 205                             		.loc 2 89 13 discriminator 1
 206 0124 EC A5                   		mov.L	[r10], r5
 207 0126 71 54 FF                		add	#-1, r5, r4
 208 0129 E3 A4                   		mov.L	r4, [r10]
 209                             		.loc 2 89 8 discriminator 1
 210 012b 61 05                   		cmp	#0, r5
 211 012d 21 F7                   		bne	.L16
  90:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 
  91:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** 	out_b(SCI8_SCR, 0x30);				// TE = 1 RE = 1
 212                             		.loc 2 91 2
 213 012f 75 42 30                		mov	#48, r2
 214 0132 FB 1E 02 A1 08          		mov.L	#0x8a102, r1
 215 0137 39 C9 FE                		bsr	_out_b
  92:../lib/libtm/sysdepend/rtb_rz65n/tm_com.c **** }
 216                             		.loc 2 92 1
 217 013a 03                      		nop
 218 013b 3F AA 02                		rtsd	#8, r10-r10
 219                             	.LFE8:
 334                             	.Letext0:
 335                             		.file 3 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/tk/typedef.h"
