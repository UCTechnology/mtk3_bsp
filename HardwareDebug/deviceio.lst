   1                             		.file	"deviceio.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   5                             	_QueInit:
   6                             	.LFB6:
   7                             		.file 1 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/sys/queue.h"
   1:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** /*
   2:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *----------------------------------------------------------------------
   3:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *    micro T-Kernel 3.00.00
   4:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *
   5:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *    Copyright (C) 2006-2019 by Ken Sakamura.
   6:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *    This software is distributed under the T-License 2.1.
   7:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *----------------------------------------------------------------------
   8:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *
   9:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *    Released by TRON Forum(http://www.tron.org) at 2019/12/11.
  10:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *
  11:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *----------------------------------------------------------------------
  12:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  */
  13:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 
  14:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** /*
  15:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *	queue.h
  16:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *
  17:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *	Queuing operation
  18:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  */
  19:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 
  20:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** #ifndef	__SYS_QUEUE_H__
  21:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** #define __SYS_QUEUE_H__
  22:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 
  23:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** #include <tk/tkernel.h>
  24:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 
  25:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** #ifdef __cplusplus
  26:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** extern "C" {
  27:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** #endif
  28:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 
  29:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** /*
  30:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  * Double-link queue (ring)
  31:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  */
  32:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** typedef struct queue {
  33:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	struct queue	*next;
  34:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	struct queue	*prev;
  35:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** } QUEUE;
  36:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 
  37:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** /*
  38:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  * Queue initialization 
  39:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  */
  40:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** Inline void QueInit( QUEUE *que )
  41:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** {
   8                             		.loc 1 41 1
   9 0000 7E AA                   		push.l	r10
  10                             	.LCFI0:
  11 0002 71 0A FC                		add	#-4, r0, r10
  12                             	.LCFI1:
  13 0005 EF A0                   		mov.L	r10, r0
  14 0007 E3 A1                   		mov.L	r1, [r10]
  42:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	que->next = (struct queue *)que;
  15                             		.loc 1 42 12
  16 0009 EC A5                   		mov.L	[r10], r5
  17 000b EC A4                   		mov.L	[r10], r4
  18 000d E3 54                   		mov.L	r4, [r5]
  43:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	que->prev = (struct queue *)que;
  19                             		.loc 1 43 12
  20 000f EC A5                   		mov.L	[r10], r5
  21 0011 EC A4                   		mov.L	[r10], r4
  22 0013 A0 5C                   		mov.L	r4, 4[r5]
  44:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** }
  23                             		.loc 1 44 1
  24 0015 03                      		nop
  25 0016 3F AA 02                		rtsd	#8, r10-r10
  26                             	.LFE6:
  29                             	_isQueEmpty:
  30                             	.LFB7:
  45:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 
  46:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** /*
  47:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  * TRUE if the queue is empty 
  48:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  */
  49:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** Inline BOOL isQueEmpty( QUEUE *que )
  50:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** {
  31                             		.loc 1 50 1
  32 0019 7E AA                   		push.l	r10
  33                             	.LCFI2:
  34 001b 71 0A FC                		add	#-4, r0, r10
  35                             	.LCFI3:
  36 001e EF A0                   		mov.L	r10, r0
  37 0020 E3 A1                   		mov.L	r1, [r10]
  51:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	return ( que->next == que )? TRUE: FALSE;
  38                             		.loc 1 51 14
  39 0022 EC A5                   		mov.L	[r10], r5
  40 0024 EC 55                   		mov.L	[r5], r5
  41                             		.loc 1 51 35
  42 0026 EC A4                   		mov.L	[r10], r4
  43 0028 47 54                   		cmp	r5, r4
  44 002a FC DB 50                		sceq.L	r5
  45 002d 5B 55                   		movu.B	r5, r5
  52:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** }
  46                             		.loc 1 52 1
  47 002f EF 51                   		mov.L	r5, r1
  48 0031 3F AA 02                		rtsd	#8, r10-r10
  49                             	.LFE7:
  52                             	_QueInsert:
  53                             	.LFB8:
  53:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 
  54:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** /*
  55:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  * Insert in queue 
  56:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *	Inserts entry directly prior to que 
  57:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  */
  58:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** Inline void QueInsert( QUEUE *entry, QUEUE *que )
  59:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** {
  54                             		.loc 1 59 1
  55 0034 7E AA                   		push.l	r10
  56                             	.LCFI4:
  57 0036 71 0A F8                		add	#-8, r0, r10
  58                             	.LCFI5:
  59 0039 EF A0                   		mov.L	r10, r0
  60 003b E3 A1                   		mov.L	r1, [r10]
  61 003d E7 A2 01                		mov.L	r2, 4[r10]
  60:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	entry->prev = (struct queue*) que->prev;
  62                             		.loc 1 60 16
  63 0040 ED A5 01                		mov.L	4[r10], r5
  64 0043 A8 5C                   		mov.L	4[r5], r4
  65                             		.loc 1 60 14
  66 0045 EC A5                   		mov.L	[r10], r5
  67 0047 A0 5C                   		mov.L	r4, 4[r5]
  61:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	entry->next = que;
  68                             		.loc 1 61 14
  69 0049 EC A5                   		mov.L	[r10], r5
  70 004b ED A4 01                		mov.L	4[r10], r4
  71 004e E3 54                   		mov.L	r4, [r5]
  62:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	que->prev->next = entry;
  72                             		.loc 1 62 5
  73 0050 ED A5 01                		mov.L	4[r10], r5
  74 0053 A8 5D                   		mov.L	4[r5], r5
  75                             		.loc 1 62 18
  76 0055 EC A4                   		mov.L	[r10], r4
  77 0057 E3 54                   		mov.L	r4, [r5]
  63:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	que->prev = entry;
  78                             		.loc 1 63 12
  79 0059 ED A5 01                		mov.L	4[r10], r5
  80 005c EC A4                   		mov.L	[r10], r4
  81 005e A0 5C                   		mov.L	r4, 4[r5]
  64:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** }
  82                             		.loc 1 64 1
  83 0060 03                      		nop
  84 0061 3F AA 03                		rtsd	#12, r10-r10
  85                             	.LFE8:
  88                             	_QueRemove:
  89                             	.LFB9:
  65:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 
  66:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** /*
  67:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  * Delete from queue 
  68:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *	Deletes entry from queue 
  69:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *	No action is performed if entry is empty. 
  70:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  */
  71:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** Inline void QueRemove( QUEUE *entry )
  72:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** {
  90                             		.loc 1 72 1
  91 0064 7E AA                   		push.l	r10
  92                             	.LCFI6:
  93 0066 71 0A FC                		add	#-4, r0, r10
  94                             	.LCFI7:
  95 0069 EF A0                   		mov.L	r10, r0
  96 006b E3 A1                   		mov.L	r1, [r10]
  73:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	if ( entry->next != entry ) {
  97                             		.loc 1 73 12
  98 006d EC A5                   		mov.L	[r10], r5
  99 006f EC 55                   		mov.L	[r5], r5
 100                             		.loc 1 73 5
 101 0071 EC A4                   		mov.L	[r10], r4
 102 0073 47 54                   		cmp	r5, r4
 103 0075 20 16                   		beq	.L7
  74:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 		entry->prev->next = (struct queue*) entry->next;
 104                             		.loc 1 74 8
 105 0077 EC A5                   		mov.L	[r10], r5
 106 0079 A8 5D                   		mov.L	4[r5], r5
 107                             		.loc 1 74 23
 108 007b EC A4                   		mov.L	[r10], r4
 109 007d EC 44                   		mov.L	[r4], r4
 110                             		.loc 1 74 21
 111 007f E3 54                   		mov.L	r4, [r5]
  75:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 		entry->next->prev = (struct queue*) entry->prev;
 112                             		.loc 1 75 8
 113 0081 EC A5                   		mov.L	[r10], r5
 114 0083 EC 55                   		mov.L	[r5], r5
 115                             		.loc 1 75 23
 116 0085 EC A4                   		mov.L	[r10], r4
 117 0087 A8 4C                   		mov.L	4[r4], r4
 118                             		.loc 1 75 21
 119 0089 A0 5C                   		mov.L	r4, 4[r5]
 120                             	.L7:
  76:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	}
  77:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** }
 121                             		.loc 1 77 1
 122 008b 03                      		nop
 123 008c 3F AA 02                		rtsd	#8, r10-r10
 124                             	.LFE9:
 127                             	_QueRemoveNext:
 128                             	.LFB10:
  78:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 
  79:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** /*
  80:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  * Remove top entry 
  81:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *	Deletes the entry directly after que from the queue,
  82:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *	and returns the deleted entry.
  83:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  *	Returns NULL if que is empty.
  84:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h ****  */
  85:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** Inline QUEUE* QueRemoveNext( QUEUE *que )
  86:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** {
 129                             		.loc 1 86 1
 130 008f 7E AA                   		push.l	r10
 131                             	.LCFI8:
 132 0091 71 0A F8                		add	#-8, r0, r10
 133                             	.LCFI9:
 134 0094 EF A0                   		mov.L	r10, r0
 135 0096 E7 A1 01                		mov.L	r1, 4[r10]
  87:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	QUEUE	*entry;
  88:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 
  89:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	if ( que->next == que ) {
 136                             		.loc 1 89 10
 137 0099 ED A5 01                		mov.L	4[r10], r5
 138 009c EC 55                   		mov.L	[r5], r5
 139                             		.loc 1 89 5
 140 009e ED A4 01                		mov.L	4[r10], r4
 141 00a1 47 54                   		cmp	r5, r4
 142 00a3 1D                      		bne	.L9
  90:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 		return NULL;
 143                             		.loc 1 90 10
 144 00a4 66 05                   		mov.L	#0, r5
 145 00a6 2E 1D                   		bra	.L10
 146                             	.L9:
  91:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	}
  92:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 
  93:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	entry = que->next;
 147                             		.loc 1 93 8
 148 00a8 ED A5 01                		mov.L	4[r10], r5
 149 00ab EC 55                   		mov.L	[r5], r5
 150 00ad E3 A5                   		mov.L	r5, [r10]
  94:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	que->next = (struct queue*)entry->next;
 151                             		.loc 1 94 14
 152 00af EC A5                   		mov.L	[r10], r5
 153 00b1 EC 54                   		mov.L	[r5], r4
 154                             		.loc 1 94 12
 155 00b3 ED A5 01                		mov.L	4[r10], r5
 156 00b6 E3 54                   		mov.L	r4, [r5]
  95:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	entry->next->prev = que;
 157                             		.loc 1 95 7
 158 00b8 EC A5                   		mov.L	[r10], r5
 159 00ba EC 55                   		mov.L	[r5], r5
 160                             		.loc 1 95 20
 161 00bc ED A4 01                		mov.L	4[r10], r4
 162 00bf A0 5C                   		mov.L	r4, 4[r5]
  96:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 
  97:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** 	return entry;
 163                             		.loc 1 97 9
 164 00c1 EC A5                   		mov.L	[r10], r5
 165                             	.L10:
  98:D:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include/sys\queue.h **** }
 166                             		.loc 1 98 1
 167 00c3 EF 51                   		mov.L	r5, r1
 168 00c5 3F AA 03                		rtsd	#12, r10-r10
 169                             	.LFE10:
 171                             		.global	_knl_OpnCBtbl
 172                             		.section	.noinit,"aw"
 173                             		.balign 4
 176                             	_knl_OpnCBtbl:
 177 0000 00 00 00 00 00 00 00 00 		.zero	1024
 177      00 00 00 00 00 00 00 00 
 177      00 00 00 00 00 00 00 00 
 177      00 00 00 00 00 00 00 00 
 177      00 00 00 00 00 00 00 00 
 178                             		.global	_knl_FreeOpnCB
 179                             		.balign 4
 182                             	_knl_FreeOpnCB:
 183 0400 00 00 00 00 00 00 00 00 		.zero	8
 184                             		.global	_knl_ReqCBtbl
 185                             		.balign 4
 188                             	_knl_ReqCBtbl:
 189 0408 00 00 00 00 00 00 00 00 		.zero	832
 189      00 00 00 00 00 00 00 00 
 189      00 00 00 00 00 00 00 00 
 189      00 00 00 00 00 00 00 00 
 189      00 00 00 00 00 00 00 00 
 190                             		.global	_knl_FreeReqCB
 191                             		.balign 4
 194                             	_knl_FreeReqCB:
 195 0748 00 00 00 00 00 00 00 00 		.zero	8
 196                             		.global	_knl_resource_control_block
 197                             		.balign 4
 200                             	_knl_resource_control_block:
 201 0750 00 00 00 00 00 00 00 00 		.zero	12
 201      00 00 00 00 
 202                             		.section P,"ax"
 203                             		.global	_knl_GetResCB
 205                             	_knl_GetResCB:
 206                             	.LFB21:
 207                             		.file 2 "../kernel/tkernel/deviceio.c"
   1:../kernel/tkernel/deviceio.c **** /*
   2:../kernel/tkernel/deviceio.c ****  *----------------------------------------------------------------------
   3:../kernel/tkernel/deviceio.c ****  *    micro T-Kernel 3.00.00
   4:../kernel/tkernel/deviceio.c ****  *
   5:../kernel/tkernel/deviceio.c ****  *    Copyright (C) 2006-2019 by Ken Sakamura.
   6:../kernel/tkernel/deviceio.c ****  *    This software is distributed under the T-License 2.1.
   7:../kernel/tkernel/deviceio.c ****  *----------------------------------------------------------------------
   8:../kernel/tkernel/deviceio.c ****  *
   9:../kernel/tkernel/deviceio.c ****  *    Released by TRON Forum(http://www.tron.org) at 2019/12/11.
  10:../kernel/tkernel/deviceio.c ****  *
  11:../kernel/tkernel/deviceio.c ****  *----------------------------------------------------------------------
  12:../kernel/tkernel/deviceio.c ****  */
  13:../kernel/tkernel/deviceio.c **** 
  14:../kernel/tkernel/deviceio.c **** /*
  15:../kernel/tkernel/deviceio.c ****  *	deviceio.c
  16:../kernel/tkernel/deviceio.c ****  *	Device Management Function: Input/Output
  17:../kernel/tkernel/deviceio.c ****  */
  18:../kernel/tkernel/deviceio.c **** 
  19:../kernel/tkernel/deviceio.c **** #include "kernel.h"
  20:../kernel/tkernel/deviceio.c **** #include "sysmgr.h"
  21:../kernel/tkernel/deviceio.c **** #include "device.h"
  22:../kernel/tkernel/deviceio.c **** 
  23:../kernel/tkernel/deviceio.c **** #if USE_DEVICE
  24:../kernel/tkernel/deviceio.c **** 
  25:../kernel/tkernel/deviceio.c **** Noinit(EXPORT OpnCB	knl_OpnCBtbl[MAX_OPNDEV]);	/* Open management information table */
  26:../kernel/tkernel/deviceio.c **** Noinit(EXPORT QUEUE	knl_FreeOpnCB);	/* Unused queue */
  27:../kernel/tkernel/deviceio.c **** 
  28:../kernel/tkernel/deviceio.c **** Noinit(EXPORT ReqCB	knl_ReqCBtbl[MAX_REQDEV]);	/* Request management information table */
  29:../kernel/tkernel/deviceio.c **** Noinit(EXPORT QUEUE	knl_FreeReqCB);	/* Unused queue */
  30:../kernel/tkernel/deviceio.c **** 
  31:../kernel/tkernel/deviceio.c **** Noinit(EXPORT ResCB knl_resource_control_block);
  32:../kernel/tkernel/deviceio.c **** 
  33:../kernel/tkernel/deviceio.c **** 
  34:../kernel/tkernel/deviceio.c **** /*
  35:../kernel/tkernel/deviceio.c ****  * Get resource management information
  36:../kernel/tkernel/deviceio.c ****  */
  37:../kernel/tkernel/deviceio.c **** EXPORT ResCB* knl_GetResCB( void )
  38:../kernel/tkernel/deviceio.c **** {
 208                             		.loc 2 38 1
 209 00c8 7E AA                   		push.l	r10
 210                             	.LCFI10:
 211 00ca EF 0A                   		mov.L	r0, r10
 212                             	.LCFI11:
  39:../kernel/tkernel/deviceio.c **** 	LockDM();
 213                             		.loc 2 39 2
 214 00cc 66 02                   		mov.L	#0, r2
 215 00ce FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 216 00d4 05 00 00 00             		bsr	_MLock
  40:../kernel/tkernel/deviceio.c **** 
  41:../kernel/tkernel/deviceio.c **** 	/* If the startup function is not called, initialize at this point */
  42:../kernel/tkernel/deviceio.c **** 	if ( knl_resource_control_block.openq.next == NULL ) {
 217                             		.loc 2 42 39
 218 00d8 FB 52 00 00 00 00       		mov.L	#_knl_resource_control_block, r5
 219 00de EC 55                   		mov.L	[r5], r5
 220                             		.loc 2 42 5
 221 00e0 61 05                   		cmp	#0, r5
 222 00e2 1A                      		bne	.L12
  43:../kernel/tkernel/deviceio.c **** 		/* Initialization of open device management queue */
  44:../kernel/tkernel/deviceio.c **** 		QueInit(&(knl_resource_control_block.openq));
 223                             		.loc 2 44 3
 224 00e3 FB 12 00 00 00 00       		mov.L	#_knl_resource_control_block, r1
 225 00e9 39 17 FF                		bsr	_QueInit
 226                             	.L12:
  45:../kernel/tkernel/deviceio.c **** 	}
  46:../kernel/tkernel/deviceio.c **** 
  47:../kernel/tkernel/deviceio.c **** 	UnlockDM();
 227                             		.loc 2 47 2
 228 00ec 66 02                   		mov.L	#0, r2
 229 00ee FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 230 00f4 05 00 00 00             		bsr	_MUnlock
  48:../kernel/tkernel/deviceio.c **** 
  49:../kernel/tkernel/deviceio.c **** 	return &knl_resource_control_block;
 231                             		.loc 2 49 9
 232 00f8 FB 52 00 00 00 00       		mov.L	#_knl_resource_control_block, r5
  50:../kernel/tkernel/deviceio.c **** }
 233                             		.loc 2 50 1
 234 00fe EF 51                   		mov.L	r5, r1
 235 0100 3F AA 01                		rtsd	#4, r10-r10
 236                             	.LFE21:
 238                             		.global	_knl_check_devdesc
 240                             	_knl_check_devdesc:
 241                             	.LFB22:
  51:../kernel/tkernel/deviceio.c **** 
  52:../kernel/tkernel/deviceio.c **** /*
  53:../kernel/tkernel/deviceio.c ****  * Verify validity of device descriptor
  54:../kernel/tkernel/deviceio.c ****  */
  55:../kernel/tkernel/deviceio.c **** EXPORT ER knl_check_devdesc( ID dd, UINT mode, OpnCB **p_opncb )
  56:../kernel/tkernel/deviceio.c **** {
 242                             		.loc 2 56 1
 243 0103 7E AA                   		push.l	r10
 244                             	.LCFI12:
 245 0105 71 0A F0                		add	#-16, r0, r10
 246                             	.LCFI13:
 247 0108 EF A0                   		mov.L	r10, r0
 248 010a E7 A1 01                		mov.L	r1, 4[r10]
 249 010d E7 A2 02                		mov.L	r2, 8[r10]
 250 0110 E7 A3 03                		mov.L	r3, 12[r10]
  57:../kernel/tkernel/deviceio.c **** 	OpnCB	*opncb;
  58:../kernel/tkernel/deviceio.c **** 
  59:../kernel/tkernel/deviceio.c **** 	if ( dd < 1 || dd > MAX_OPNDEV ) {
 251                             		.loc 2 59 5
 252 0113 ED A5 01                		mov.L	4[r10], r5
 253 0116 61 05                   		cmp	#0, r5
 254 0118 2B 0A                   		ble	.L15
 255                             		.loc 2 59 14 discriminator 1
 256 011a ED A5 01                		mov.L	4[r10], r5
 257 011d 75 55 10                		cmp	#16, r5
 258 0120 2B 07                   		ble	.L16
 259                             	.L15:
  60:../kernel/tkernel/deviceio.c **** 		return E_ID;
 260                             		.loc 2 60 10
 261 0122 FB 56 EE                		mov.L	#-18, r5
 262 0125 2E 41                   		bra	.L17
 263                             	.L16:
  61:../kernel/tkernel/deviceio.c **** 	}
  62:../kernel/tkernel/deviceio.c **** 	opncb = OPNCB(dd);
 264                             		.loc 2 62 10
 265 0127 ED A5 01                		mov.L	4[r10], r5
 266 012a 70 55 FF FF FF 03       		add	#0x3ffffff, r5
 267 0130 6C 65                   		shll	#6, r5
 268                             		.loc 2 62 8
 269 0132 70 55 00 00 00 00       		add	#_knl_OpnCBtbl, r5
 270 0138 E3 A5                   		mov.L	r5, [r10]
  63:../kernel/tkernel/deviceio.c **** 	if ( opncb->resid == 0 ) {
 271                             		.loc 2 63 12
 272 013a EC A5                   		mov.L	[r10], r5
 273 013c A9 55                   		mov.L	16[r5], r5
 274                             		.loc 2 63 5
 275 013e 61 05                   		cmp	#0, r5
 276 0140 1E                      		bne	.L18
  64:../kernel/tkernel/deviceio.c **** 		return E_ID;
 277                             		.loc 2 64 10
 278 0141 FB 56 EE                		mov.L	#-18, r5
 279 0144 2E 22                   		bra	.L17
 280                             	.L18:
  65:../kernel/tkernel/deviceio.c **** 	}
  66:../kernel/tkernel/deviceio.c **** 
  67:../kernel/tkernel/deviceio.c **** 	if ( mode != 0 ) {
 281                             		.loc 2 67 5
 282 0146 ED A5 02                		mov.L	8[r10], r5
 283 0149 61 05                   		cmp	#0, r5
 284 014b 20 12                   		beq	.L19
  68:../kernel/tkernel/deviceio.c **** 		if ( (opncb->omode & mode) == 0 ) {
 285                             		.loc 2 68 14
 286 014d EC A5                   		mov.L	[r10], r5
 287 014f A9 DC                   		mov.L	28[r5], r4
 288                             		.loc 2 68 22
 289 0151 ED A5 02                		mov.L	8[r10], r5
 290 0154 53 45                   		and	r4, r5
 291                             		.loc 2 68 6
 292 0156 61 05                   		cmp	#0, r5
 293 0158 1D                      		bne	.L19
  69:../kernel/tkernel/deviceio.c **** 			return E_OACV;
 294                             		.loc 2 69 11
 295 0159 FB 56 E5                		mov.L	#-27, r5
 296 015c 0A                      		bra	.L17
 297                             	.L19:
  70:../kernel/tkernel/deviceio.c **** 		}
  71:../kernel/tkernel/deviceio.c **** 	}
  72:../kernel/tkernel/deviceio.c **** 
  73:../kernel/tkernel/deviceio.c **** 	*p_opncb = opncb;
 298                             		.loc 2 73 11
 299 015d ED A5 03                		mov.L	12[r10], r5
 300 0160 EC A4                   		mov.L	[r10], r4
 301 0162 E3 54                   		mov.L	r4, [r5]
  74:../kernel/tkernel/deviceio.c **** 	return E_OK;
 302                             		.loc 2 74 9
 303 0164 66 05                   		mov.L	#0, r5
 304                             		.balign 8,3,1
 305                             	.L17:
  75:../kernel/tkernel/deviceio.c **** }
 306                             		.loc 2 75 1
 307 0166 EF 51                   		mov.L	r5, r1
 308 0168 3F AA 05                		rtsd	#20, r10-r10
 309                             	.LFE22:
 311                             		.global	_knl_delOpnCB
 313                             	_knl_delOpnCB:
 314                             	.LFB23:
  76:../kernel/tkernel/deviceio.c **** 
  77:../kernel/tkernel/deviceio.c **** /*
  78:../kernel/tkernel/deviceio.c ****  * Free open management block
  79:../kernel/tkernel/deviceio.c ****  */
  80:../kernel/tkernel/deviceio.c **** EXPORT void knl_delOpnCB( OpnCB *opncb, BOOL free )
  81:../kernel/tkernel/deviceio.c **** {
 315                             		.loc 2 81 1
 316 016b 7E AA                   		push.l	r10
 317                             	.LCFI14:
 318 016d 71 0A F8                		add	#-8, r0, r10
 319                             	.LCFI15:
 320 0170 EF A0                   		mov.L	r10, r0
 321 0172 E3 A1                   		mov.L	r1, [r10]
 322 0174 E7 A2 01                		mov.L	r2, 4[r10]
  82:../kernel/tkernel/deviceio.c **** 	QueRemove(&opncb->q);
 323                             		.loc 2 82 2
 324 0177 EC A5                   		mov.L	[r10], r5
 325 0179 EF 51                   		mov.L	r5, r1
 326 017b 39 E9 FE                		bsr	_QueRemove
  83:../kernel/tkernel/deviceio.c **** 	QueRemove(&opncb->resq);
 327                             		.loc 2 83 2
 328 017e EC A5                   		mov.L	[r10], r5
 329 0180 62 85                   		add	#8, r5
 330 0182 EF 51                   		mov.L	r5, r1
 331 0184 39 E0 FE                		bsr	_QueRemove
  84:../kernel/tkernel/deviceio.c **** 
  85:../kernel/tkernel/deviceio.c **** 	if ( free ) {
 332                             		.loc 2 85 5
 333 0187 ED A5 01                		mov.L	4[r10], r5
 334 018a 61 05                   		cmp	#0, r5
 335 018c 20 0F                   		beq	.L21
  86:../kernel/tkernel/deviceio.c **** 		QueInsert(&opncb->q, &knl_FreeOpnCB);
 336                             		.loc 2 86 3
 337 018e EC A5                   		mov.L	[r10], r5
 338 0190 FB 22 00 00 00 00       		mov.L	#_knl_FreeOpnCB, r2
 339 0196 EF 51                   		mov.L	r5, r1
 340 0198 39 9C FE                		bsr	_QueInsert
 341                             	.L21:
  87:../kernel/tkernel/deviceio.c **** 	}
  88:../kernel/tkernel/deviceio.c **** 	opncb->resid = 0;
 342                             		.loc 2 88 15
 343 019b EC A5                   		mov.L	[r10], r5
 344 019d 3E 54 00                		mov.L	#0, 16[r5]
  89:../kernel/tkernel/deviceio.c **** }
 345                             		.loc 2 89 1
 346 01a0 03                      		nop
 347 01a1 3F AA 03                		rtsd	#12, r10-r10
 348                             	.LFE23:
 350                             		.global	_knl_delReqCB
 352                             	_knl_delReqCB:
 353                             	.LFB24:
  90:../kernel/tkernel/deviceio.c **** 
  91:../kernel/tkernel/deviceio.c **** /*
  92:../kernel/tkernel/deviceio.c ****  * Free request management block
  93:../kernel/tkernel/deviceio.c ****  */
  94:../kernel/tkernel/deviceio.c **** EXPORT void knl_delReqCB( ReqCB *reqcb )
  95:../kernel/tkernel/deviceio.c **** {
 354                             		.loc 2 95 1
 355 01a4 7E AA                   		push.l	r10
 356                             	.LCFI16:
 357 01a6 71 0A FC                		add	#-4, r0, r10
 358                             	.LCFI17:
 359 01a9 EF A0                   		mov.L	r10, r0
 360 01ab E3 A1                   		mov.L	r1, [r10]
  96:../kernel/tkernel/deviceio.c **** 	QueRemove(&reqcb->q);
 361                             		.loc 2 96 2
 362 01ad EC A5                   		mov.L	[r10], r5
 363 01af EF 51                   		mov.L	r5, r1
 364 01b1 39 B3 FE                		bsr	_QueRemove
  97:../kernel/tkernel/deviceio.c **** 
  98:../kernel/tkernel/deviceio.c **** 	QueInsert(&reqcb->q, &knl_FreeReqCB);
 365                             		.loc 2 98 2
 366 01b4 EC A5                   		mov.L	[r10], r5
 367 01b6 FB 22 00 00 00 00       		mov.L	#_knl_FreeReqCB, r2
 368 01bc EF 51                   		mov.L	r5, r1
 369 01be 39 76 FE                		bsr	_QueInsert
  99:../kernel/tkernel/deviceio.c **** 	reqcb->opncb = NULL;
 370                             		.loc 2 99 15
 371 01c1 EC A5                   		mov.L	[r10], r5
 372 01c3 3E 52 00                		mov.L	#0, 8[r5]
 100:../kernel/tkernel/deviceio.c **** }
 373                             		.loc 2 100 1
 374 01c6 03                      		nop
 375 01c7 3F AA 02                		rtsd	#8, r10-r10
 376                             	.LFE24:
 378                             		.global	_knl_chkopen
 380                             	_knl_chkopen:
 381                             	.LFB25:
 101:../kernel/tkernel/deviceio.c **** 
 102:../kernel/tkernel/deviceio.c **** /* ------------------------------------------------------------------------ */
 103:../kernel/tkernel/deviceio.c **** 
 104:../kernel/tkernel/deviceio.c **** /*
 105:../kernel/tkernel/deviceio.c ****  * TRUE if specified device is open.
 106:../kernel/tkernel/deviceio.c ****  */
 107:../kernel/tkernel/deviceio.c **** EXPORT BOOL knl_chkopen( DevCB *devcb, INT unitno )
 108:../kernel/tkernel/deviceio.c **** {
 382                             		.loc 2 108 1
 383 01ca 7E AA                   		push.l	r10
 384                             	.LCFI18:
 385 01cc 71 0A F4                		add	#-12, r0, r10
 386                             	.LCFI19:
 387 01cf EF A0                   		mov.L	r10, r0
 388 01d1 E7 A1 01                		mov.L	r1, 4[r10]
 389 01d4 E7 A2 02                		mov.L	r2, 8[r10]
 109:../kernel/tkernel/deviceio.c **** 	QUEUE	*q;
 110:../kernel/tkernel/deviceio.c **** 
 111:../kernel/tkernel/deviceio.c **** 	for ( q = devcb->openq.next; q != &devcb->openq; q = q->next ) {
 390                             		.loc 2 111 10
 391 01d7 ED A5 01                		mov.L	4[r10], r5
 392 01da AC 55                   		mov.L	64[r5], r5
 393 01dc E3 A5                   		mov.L	r5, [r10]
 394                             		.loc 2 111 2
 395 01de 2E 16                   		bra	.L24
 396                             	.L27:
 112:../kernel/tkernel/deviceio.c **** 		if ( ((OpnCB*)q)->unitno == unitno ) {
 397                             		.loc 2 112 19
 398 01e0 EC A5                   		mov.L	[r10], r5
 399 01e2 A9 D5                   		mov.L	24[r5], r5
 400                             		.loc 2 112 6
 401 01e4 ED A4 02                		mov.L	8[r10], r4
 402 01e7 47 54                   		cmp	r5, r4
 403 01e9 1D                      		bne	.L25
 113:../kernel/tkernel/deviceio.c **** 			return TRUE;
 404                             		.loc 2 113 11
 405 01ea 66 15                   		mov.L	#1, r5
 406 01ec 2E 16                   		bra	.L26
 407                             	.L25:
 111:../kernel/tkernel/deviceio.c **** 		if ( ((OpnCB*)q)->unitno == unitno ) {
 408                             		.loc 2 111 53 discriminator 2
 409 01ee EC A5                   		mov.L	[r10], r5
 410 01f0 EC 55                   		mov.L	[r5], r5
 411 01f2 E3 A5                   		mov.L	r5, [r10]
 412                             	.L24:
 111:../kernel/tkernel/deviceio.c **** 		if ( ((OpnCB*)q)->unitno == unitno ) {
 413                             		.loc 2 111 36 discriminator 1
 414 01f4 ED A5 01                		mov.L	4[r10], r5
 415 01f7 71 55 40                		add	#0x40, r5
 111:../kernel/tkernel/deviceio.c **** 		if ( ((OpnCB*)q)->unitno == unitno ) {
 416                             		.loc 2 111 2 discriminator 1
 417 01fa EC A4                   		mov.L	[r10], r4
 418 01fc 47 54                   		cmp	r5, r4
 419 01fe 21 E2                   		bne	.L27
 114:../kernel/tkernel/deviceio.c **** 		}
 115:../kernel/tkernel/deviceio.c **** 	}
 116:../kernel/tkernel/deviceio.c **** 	return FALSE;
 420                             		.loc 2 116 9
 421 0200 66 05                   		mov.L	#0, r5
 422                             	.L26:
 117:../kernel/tkernel/deviceio.c **** }
 423                             		.loc 2 117 1
 424 0202 EF 51                   		mov.L	r5, r1
 425 0204 3F AA 04                		rtsd	#16, r10-r10
 426                             	.LFE25:
 428                             		.section C,"a",@progbits
 429                             		.p2align 2
 430                             		.balign 4
 433                             	_knl_pk_csem_DM:
 434 0000 00 00 00 00             		.long	0
 435 0004 00 00 00 00             		.long	0
 436 0008 00 00 00 00             		.long	0
 437 000c 01 00 00 00             		.long	1
 438                             		.section P,"ax"
 440                             	_newOpnCB:
 441                             	.LFB26:
 118:../kernel/tkernel/deviceio.c **** 
 119:../kernel/tkernel/deviceio.c **** 
 120:../kernel/tkernel/deviceio.c **** LOCAL CONST T_CSEM knl_pk_csem_DM = {
 121:../kernel/tkernel/deviceio.c **** 	NULL,
 122:../kernel/tkernel/deviceio.c **** 	TA_TFIFO | TA_FIRST,
 123:../kernel/tkernel/deviceio.c **** 	0,
 124:../kernel/tkernel/deviceio.c **** 	1,
 125:../kernel/tkernel/deviceio.c **** };
 126:../kernel/tkernel/deviceio.c **** 
 127:../kernel/tkernel/deviceio.c **** /*
 128:../kernel/tkernel/deviceio.c ****  * Get open management block
 129:../kernel/tkernel/deviceio.c ****  */
 130:../kernel/tkernel/deviceio.c **** LOCAL OpnCB* newOpnCB( DevCB *devcb, INT unitno, UINT omode, ResCB *rescb )
 131:../kernel/tkernel/deviceio.c **** {
 442                             		.loc 2 131 1
 443 0207 7E AA                   		push.l	r10
 444                             	.LCFI20:
 445 0209 71 0A EC                		add	#-20, r0, r10
 446                             	.LCFI21:
 447 020c EF A0                   		mov.L	r10, r0
 448 020e E7 A1 01                		mov.L	r1, 4[r10]
 449 0211 E7 A2 02                		mov.L	r2, 8[r10]
 450 0214 E7 A3 03                		mov.L	r3, 12[r10]
 451 0217 E7 A4 04                		mov.L	r4, 16[r10]
 132:../kernel/tkernel/deviceio.c **** 	OpnCB	*opncb;
 133:../kernel/tkernel/deviceio.c **** 
 134:../kernel/tkernel/deviceio.c **** 	/* Get space in open management block */
 135:../kernel/tkernel/deviceio.c **** 	opncb = (OpnCB*)QueRemoveNext(&knl_FreeOpnCB);
 452                             		.loc 2 135 18
 453 021a FB 12 00 00 00 00       		mov.L	#_knl_FreeOpnCB, r1
 454 0220 39 6F FE                		bsr	_QueRemoveNext
 455 0223 E3 A1                   		mov.L	r1, [r10]
 136:../kernel/tkernel/deviceio.c **** 	if ( opncb == NULL ) {
 456                             		.loc 2 136 5
 457 0225 EC A5                   		mov.L	[r10], r5
 458 0227 61 05                   		cmp	#0, r5
 459 0229 1D                      		bne	.L29
 137:../kernel/tkernel/deviceio.c **** 		return NULL; /* No space */
 460                             		.loc 2 137 10
 461 022a 66 05                   		mov.L	#0, r5
 462 022c 2E 54                   		bra	.L30
 463                             	.L29:
 138:../kernel/tkernel/deviceio.c **** 	}
 139:../kernel/tkernel/deviceio.c **** 
 140:../kernel/tkernel/deviceio.c **** 	/* Register as open device */
 141:../kernel/tkernel/deviceio.c **** 	QueInsert(&opncb->q, &devcb->openq);
 464                             		.loc 2 141 2
 465 022e EC A4                   		mov.L	[r10], r4
 466 0230 ED A5 01                		mov.L	4[r10], r5
 467 0233 71 55 40                		add	#0x40, r5
 468 0236 EF 52                   		mov.L	r5, r2
 469 0238 EF 41                   		mov.L	r4, r1
 470 023a 39 FA FD                		bsr	_QueInsert
 142:../kernel/tkernel/deviceio.c **** 	QueInsert(&opncb->resq, &rescb->openq);
 471                             		.loc 2 142 2
 472 023d EC A5                   		mov.L	[r10], r5
 473 023f 62 85                   		add	#8, r5
 474 0241 ED A4 04                		mov.L	16[r10], r4
 475 0244 EF 42                   		mov.L	r4, r2
 476 0246 EF 51                   		mov.L	r5, r1
 477 0248 39 EC FD                		bsr	_QueInsert
 143:../kernel/tkernel/deviceio.c **** 
 144:../kernel/tkernel/deviceio.c **** 	opncb->devcb  = devcb;
 478                             		.loc 2 144 16
 479 024b EC A5                   		mov.L	[r10], r5
 480 024d ED A4 01                		mov.L	4[r10], r4
 481 0250 A1 5C                   		mov.L	r4, 20[r5]
 145:../kernel/tkernel/deviceio.c **** 	opncb->unitno = unitno;
 482                             		.loc 2 145 16
 483 0252 EC A5                   		mov.L	[r10], r5
 484 0254 ED A4 02                		mov.L	8[r10], r4
 485 0257 A1 D4                   		mov.L	r4, 24[r5]
 146:../kernel/tkernel/deviceio.c **** 	opncb->omode  = omode;
 486                             		.loc 2 146 16
 487 0259 EC A5                   		mov.L	[r10], r5
 488 025b ED A4 03                		mov.L	12[r10], r4
 489 025e A1 DC                   		mov.L	r4, 28[r5]
 147:../kernel/tkernel/deviceio.c **** 	QueInit(&opncb->requestq);
 490                             		.loc 2 147 2
 491 0260 EC A5                   		mov.L	[r10], r5
 492 0262 71 55 20                		add	#32, r5
 493 0265 EF 51                   		mov.L	r5, r1
 494 0267 39 99 FD                		bsr	_QueInit
 148:../kernel/tkernel/deviceio.c **** 	opncb->waitone = 0;
 495                             		.loc 2 148 17
 496 026a EC A5                   		mov.L	[r10], r5
 497 026c 3D D4 00                		mov.W	#0, 40[r5]
 149:../kernel/tkernel/deviceio.c **** 	opncb->nwaireq = 0;
 498                             		.loc 2 149 17
 499 026f EC A5                   		mov.L	[r10], r5
 500 0271 3E 5C 00                		mov.L	#0, 48[r5]
 150:../kernel/tkernel/deviceio.c **** 	opncb->abort_tskid = 0;
 501                             		.loc 2 150 21
 502 0274 EC A5                   		mov.L	[r10], r5
 503 0276 3E 5D 00                		mov.L	#0, 52[r5]
 151:../kernel/tkernel/deviceio.c **** 
 152:../kernel/tkernel/deviceio.c **** 	opncb->resid  = 0; /* Indicate that open processing is not completed */
 504                             		.loc 2 152 16
 505 0279 EC A5                   		mov.L	[r10], r5
 506 027b 3E 54 00                		mov.L	#0, 16[r5]
 153:../kernel/tkernel/deviceio.c **** 
 154:../kernel/tkernel/deviceio.c **** 	return opncb;
 507                             		.loc 2 154 9
 508 027e EC A5                   		mov.L	[r10], r5
 509                             	.L30:
 155:../kernel/tkernel/deviceio.c **** }
 510                             		.loc 2 155 1
 511 0280 EF 51                   		mov.L	r5, r1
 512 0282 3F AA 06                		rtsd	#24, r10-r10
 513                             	.LFE26:
 516                             	_chkopenmode:
 517                             	.LFB27:
 156:../kernel/tkernel/deviceio.c **** 
 157:../kernel/tkernel/deviceio.c **** /*
 158:../kernel/tkernel/deviceio.c ****  * Check open mode
 159:../kernel/tkernel/deviceio.c ****  */
 160:../kernel/tkernel/deviceio.c **** LOCAL ER chkopenmode( DevCB *devcb, INT unitno, UINT omode )
 161:../kernel/tkernel/deviceio.c **** {
 518                             		.loc 2 161 1
 519 0285 7E AA                   		push.l	r10
 520                             	.LCFI22:
 521 0287 71 0A DC                		add	#-36, r0, r10
 522                             	.LCFI23:
 523 028a EF A0                   		mov.L	r10, r0
 524 028c E7 A1 06                		mov.L	r1, 24[r10]
 525 028f E7 A2 07                		mov.L	r2, 28[r10]
 526 0292 E7 A3 08                		mov.L	r3, 32[r10]
 162:../kernel/tkernel/deviceio.c **** 	QUEUE	*q;
 163:../kernel/tkernel/deviceio.c **** 	OpnCB	*opncb;
 164:../kernel/tkernel/deviceio.c **** 	INT	read, write, rexcl, wexcl;
 165:../kernel/tkernel/deviceio.c **** 
 166:../kernel/tkernel/deviceio.c **** 	if ( (omode & TD_UPDATE) == 0 ) {
 527                             		.loc 2 166 14
 528 0295 ED A5 08                		mov.L	32[r10], r5
 529 0298 64 35                   		and	#3, r5
 530                             		.loc 2 166 5
 531 029a 61 05                   		cmp	#0, r5
 532 029c 1F                      		bne	.L32
 167:../kernel/tkernel/deviceio.c **** 		return E_PAR;
 533                             		.loc 2 167 10
 534 029d FB 56 EF                		mov.L	#-17, r5
 535 02a0 38 FA 00                		bra	.L33
 536                             	.L32:
 168:../kernel/tkernel/deviceio.c **** 	}
 169:../kernel/tkernel/deviceio.c **** 
 170:../kernel/tkernel/deviceio.c **** 	/* Check current open state */
 171:../kernel/tkernel/deviceio.c **** 	read = write = rexcl = wexcl = 0;
 537                             		.loc 2 171 31
 538 02a3 F9 A6 04 00             		mov.L	#0, 16[r10]
 539                             		.loc 2 171 23
 540 02a7 ED A5 04                		mov.L	16[r10], r5
 541 02aa E7 A5 03                		mov.L	r5, 12[r10]
 542                             		.loc 2 171 15
 543 02ad ED A5 03                		mov.L	12[r10], r5
 544 02b0 E7 A5 02                		mov.L	r5, 8[r10]
 545                             		.loc 2 171 7
 546 02b3 ED A5 02                		mov.L	8[r10], r5
 547 02b6 E7 A5 01                		mov.L	r5, 4[r10]
 172:../kernel/tkernel/deviceio.c **** 	for ( q = devcb->openq.next; q != &devcb->openq; q = q->next ) {
 548                             		.loc 2 172 10
 549 02b9 ED A5 06                		mov.L	24[r10], r5
 550 02bc AC 55                   		mov.L	64[r5], r5
 551 02be E3 A5                   		mov.L	r5, [r10]
 552                             		.loc 2 172 2
 553 02c0 2E 75                   		bra	.L34
 554                             	.L40:
 173:../kernel/tkernel/deviceio.c **** 		opncb = (OpnCB*)q;
 555                             		.loc 2 173 9
 556 02c2 EC A5                   		mov.L	[r10], r5
 557 02c4 E7 A5 05                		mov.L	r5, 20[r10]
 174:../kernel/tkernel/deviceio.c **** 
 175:../kernel/tkernel/deviceio.c **** 		if ( unitno == 0 || opncb->unitno == 0 || opncb->unitno == unitno ) {
 558                             		.loc 2 175 6
 559 02c7 ED A5 07                		mov.L	28[r10], r5
 560 02ca 61 05                   		cmp	#0, r5
 561 02cc 20 17                   		beq	.L35
 562                             		.loc 2 175 28 discriminator 1
 563 02ce ED A5 05                		mov.L	20[r10], r5
 564 02d1 A9 D5                   		mov.L	24[r5], r5
 565                             		.loc 2 175 20 discriminator 1
 566 02d3 61 05                   		cmp	#0, r5
 567 02d5 20 0E                   		beq	.L35
 568                             		.loc 2 175 50 discriminator 2
 569 02d7 ED A5 05                		mov.L	20[r10], r5
 570 02da A9 D5                   		mov.L	24[r5], r5
 571                             		.loc 2 175 42 discriminator 2
 572 02dc ED A4 07                		mov.L	28[r10], r4
 573 02df 47 54                   		cmp	r5, r4
 574 02e1 21 4E                   		bne	.L36
 575                             	.L35:
 176:../kernel/tkernel/deviceio.c **** 			if ( (opncb->omode & TD_READ)  != 0 ) {
 576                             		.loc 2 176 15
 577 02e3 ED A5 05                		mov.L	20[r10], r5
 578 02e6 A9 DD                   		mov.L	28[r5], r5
 579                             		.loc 2 176 23
 580 02e8 64 15                   		and	#1, r5
 581                             		.loc 2 176 7
 582 02ea 61 05                   		cmp	#0, r5
 583 02ec 11                      		beq	.L37
 177:../kernel/tkernel/deviceio.c **** 				read++;
 584                             		.loc 2 177 9
 585 02ed ED A5 01                		mov.L	4[r10], r5
 586 02f0 62 15                   		add	#1, r5
 587 02f2 E7 A5 01                		mov.L	r5, 4[r10]
 588                             	.L37:
 178:../kernel/tkernel/deviceio.c **** 			}
 179:../kernel/tkernel/deviceio.c **** 			if ( (opncb->omode & TD_WRITE) != 0 ) {
 589                             		.loc 2 179 15
 590 02f5 ED A5 05                		mov.L	20[r10], r5
 591 02f8 A9 DD                   		mov.L	28[r5], r5
 592                             		.loc 2 179 23
 593 02fa 64 25                   		and	#2, r5
 594                             		.loc 2 179 7
 595 02fc 61 05                   		cmp	#0, r5
 596 02fe 11                      		beq	.L38
 180:../kernel/tkernel/deviceio.c **** 				write++;
 597                             		.loc 2 180 10
 598 02ff ED A5 02                		mov.L	8[r10], r5
 599 0302 62 15                   		add	#1, r5
 600 0304 E7 A5 02                		mov.L	r5, 8[r10]
 601                             	.L38:
 181:../kernel/tkernel/deviceio.c **** 			}
 182:../kernel/tkernel/deviceio.c **** 			if ( (opncb->omode & (TD_EXCL|TD_REXCL)) != 0) {
 602                             		.loc 2 182 15
 603 0307 ED A5 05                		mov.L	20[r10], r5
 604 030a A9 DD                   		mov.L	28[r5], r5
 605                             		.loc 2 182 23
 606 030c 76 25 00 05             		and	#0x500, r5
 607                             		.loc 2 182 7
 608 0310 61 05                   		cmp	#0, r5
 609 0312 11                      		beq	.L39
 183:../kernel/tkernel/deviceio.c **** 				rexcl++;
 610                             		.loc 2 183 10
 611 0313 ED A5 03                		mov.L	12[r10], r5
 612 0316 62 15                   		add	#1, r5
 613 0318 E7 A5 03                		mov.L	r5, 12[r10]
 614                             	.L39:
 184:../kernel/tkernel/deviceio.c **** 			}
 185:../kernel/tkernel/deviceio.c **** 			if ( (opncb->omode & (TD_EXCL|TD_WEXCL)) != 0) {
 615                             		.loc 2 185 15
 616 031b ED A5 05                		mov.L	20[r10], r5
 617 031e A9 DD                   		mov.L	28[r5], r5
 618                             		.loc 2 185 23
 619 0320 76 25 00 03             		and	#0x300, r5
 620                             		.loc 2 185 7
 621 0324 61 05                   		cmp	#0, r5
 622 0326 11                      		beq	.L36
 186:../kernel/tkernel/deviceio.c **** 				wexcl++;
 623                             		.loc 2 186 10
 624 0327 ED A5 04                		mov.L	16[r10], r5
 625 032a 62 15                   		add	#1, r5
 626 032c E7 A5 04                		mov.L	r5, 16[r10]
 627                             	.L36:
 172:../kernel/tkernel/deviceio.c **** 		opncb = (OpnCB*)q;
 628                             		.loc 2 172 53 discriminator 2
 629 032f EC A5                   		mov.L	[r10], r5
 630 0331 EC 55                   		mov.L	[r5], r5
 631 0333 E3 A5                   		mov.L	r5, [r10]
 632                             	.L34:
 172:../kernel/tkernel/deviceio.c **** 		opncb = (OpnCB*)q;
 633                             		.loc 2 172 36 discriminator 1
 634 0335 ED A5 06                		mov.L	24[r10], r5
 635 0338 71 55 40                		add	#0x40, r5
 172:../kernel/tkernel/deviceio.c **** 		opncb = (OpnCB*)q;
 636                             		.loc 2 172 2 discriminator 1
 637 033b EC A4                   		mov.L	[r10], r4
 638 033d 47 54                   		cmp	r5, r4
 639 033f 21 83                   		bne	.L40
 187:../kernel/tkernel/deviceio.c **** 			}
 188:../kernel/tkernel/deviceio.c **** 		}
 189:../kernel/tkernel/deviceio.c **** 	}
 190:../kernel/tkernel/deviceio.c **** 
 191:../kernel/tkernel/deviceio.c **** 	/* Is it able to open? */
 192:../kernel/tkernel/deviceio.c **** 	if ( (omode & (TD_EXCL|TD_REXCL)) != 0 && read  > 0 ) {
 640                             		.loc 2 192 14
 641 0341 ED A5 08                		mov.L	32[r10], r5
 642 0344 76 25 00 05             		and	#0x500, r5
 643                             		.loc 2 192 5
 644 0348 61 05                   		cmp	#0, r5
 645 034a 20 0E                   		beq	.L41
 646                             		.loc 2 192 41 discriminator 1
 647 034c ED A5 01                		mov.L	4[r10], r5
 648 034f 61 05                   		cmp	#0, r5
 649 0351 2B 07                   		ble	.L41
 193:../kernel/tkernel/deviceio.c **** 		return E_BUSY;
 650                             		.loc 2 193 10
 651 0353 FB 56 BF                		mov.L	#-65, r5
 652 0356 2E 44                   		bra	.L33
 653                             	.L41:
 194:../kernel/tkernel/deviceio.c **** 	}
 195:../kernel/tkernel/deviceio.c **** 	if ( (omode & (TD_EXCL|TD_WEXCL)) != 0 && write > 0 ) {
 654                             		.loc 2 195 14
 655 0358 ED A5 08                		mov.L	32[r10], r5
 656 035b 76 25 00 03             		and	#0x300, r5
 657                             		.loc 2 195 5
 658 035f 61 05                   		cmp	#0, r5
 659 0361 20 0E                   		beq	.L42
 660                             		.loc 2 195 41 discriminator 1
 661 0363 ED A5 02                		mov.L	8[r10], r5
 662 0366 61 05                   		cmp	#0, r5
 663 0368 2B 07                   		ble	.L42
 196:../kernel/tkernel/deviceio.c **** 		return E_BUSY;
 664                             		.loc 2 196 10
 665 036a FB 56 BF                		mov.L	#-65, r5
 666 036d 2E 2D                   		bra	.L33
 667                             	.L42:
 197:../kernel/tkernel/deviceio.c **** 	}
 198:../kernel/tkernel/deviceio.c **** 	if ( (omode & TD_READ)  != 0 && rexcl > 0 ) {
 668                             		.loc 2 198 14
 669 036f ED A5 08                		mov.L	32[r10], r5
 670 0372 64 15                   		and	#1, r5
 671                             		.loc 2 198 5
 672 0374 61 05                   		cmp	#0, r5
 673 0376 20 0E                   		beq	.L43
 674                             		.loc 2 198 31 discriminator 1
 675 0378 ED A5 03                		mov.L	12[r10], r5
 676 037b 61 05                   		cmp	#0, r5
 677 037d 2B 07                   		ble	.L43
 199:../kernel/tkernel/deviceio.c **** 		return E_BUSY;
 678                             		.loc 2 199 10
 679 037f FB 56 BF                		mov.L	#-65, r5
 680 0382 2E 18                   		bra	.L33
 681                             	.L43:
 200:../kernel/tkernel/deviceio.c **** 	}
 201:../kernel/tkernel/deviceio.c **** 	if ( (omode & TD_WRITE) != 0 && wexcl > 0 ) {
 682                             		.loc 2 201 14
 683 0384 ED A5 08                		mov.L	32[r10], r5
 684 0387 64 25                   		and	#2, r5
 685                             		.loc 2 201 5
 686 0389 61 05                   		cmp	#0, r5
 687 038b 20 0D                   		beq	.L44
 688                             		.loc 2 201 31 discriminator 1
 689 038d ED A5 04                		mov.L	16[r10], r5
 690 0390 61 05                   		cmp	#0, r5
 691 0392 2B 06                   		ble	.L44
 202:../kernel/tkernel/deviceio.c **** 		return E_BUSY;
 692                             		.loc 2 202 10
 693 0394 FB 56 BF                		mov.L	#-65, r5
 694 0397 0B                      		bra	.L33
 695                             	.L44:
 203:../kernel/tkernel/deviceio.c **** 	}
 204:../kernel/tkernel/deviceio.c **** 
 205:../kernel/tkernel/deviceio.c **** 	return E_OK;
 696                             		.loc 2 205 9
 697 0398 66 05                   		mov.L	#0, r5
 698                             		.balign 8,3,1
 699                             	.L33:
 206:../kernel/tkernel/deviceio.c **** }
 700                             		.loc 2 206 1
 701 039a EF 51                   		mov.L	r5, r1
 702 039c 3F AA 0A                		rtsd	#40, r10-r10
 703                             	.LFE27:
 705                             		.global	_tk_opn_dev
 707                             	_tk_opn_dev:
 708                             	.LFB28:
 207:../kernel/tkernel/deviceio.c **** 
 208:../kernel/tkernel/deviceio.c **** /*
 209:../kernel/tkernel/deviceio.c ****  * Device open
 210:../kernel/tkernel/deviceio.c ****  */
 211:../kernel/tkernel/deviceio.c **** SYSCALL ID tk_opn_dev( CONST UB *devnm, UINT omode )
 212:../kernel/tkernel/deviceio.c **** {
 709                             		.loc 2 212 1
 710 039f 6E 7A                   		pushm	r7-r10
 711                             	.LCFI24:
 712 03a1 71 0A CC                		add	#-52, r0, r10
 713                             	.LCFI25:
 714 03a4 EF A0                   		mov.L	r10, r0
 715 03a6 E7 A1 0B                		mov.L	r1, 44[r10]
 716 03a9 E7 A2 0C                		mov.L	r2, 48[r10]
 213:../kernel/tkernel/deviceio.c **** 	OPNFN	openfn;
 214:../kernel/tkernel/deviceio.c **** 	void	*exinf;
 215:../kernel/tkernel/deviceio.c **** 	UB	pdevnm[L_DEVNM + 1];
 216:../kernel/tkernel/deviceio.c **** 	INT	unitno;
 217:../kernel/tkernel/deviceio.c **** 	ResCB	*rescb;
 218:../kernel/tkernel/deviceio.c **** 	DevCB	*devcb;
 219:../kernel/tkernel/deviceio.c **** 	OpnCB	*opncb;
 220:../kernel/tkernel/deviceio.c **** 	ER	ercd;
 221:../kernel/tkernel/deviceio.c **** 	ID	semid;
 222:../kernel/tkernel/deviceio.c **** 
 223:../kernel/tkernel/deviceio.c **** 	unitno = knl_phydevnm(pdevnm, devnm);
 717                             		.loc 2 223 11
 718 03ac 71 A5 20                		add	#32, r10, r5
 719 03af ED A2 0B                		mov.L	44[r10], r2
 720 03b2 EF 51                   		mov.L	r5, r1
 721 03b4 05 00 00 00             		bsr	_knl_phydevnm
 722 03b8 E7 A1 02                		mov.L	r1, 8[r10]
 224:../kernel/tkernel/deviceio.c **** 
 225:../kernel/tkernel/deviceio.c **** 	/* Get resource management information */
 226:../kernel/tkernel/deviceio.c **** 	rescb = knl_GetResCB();
 723                             		.loc 2 226 10
 724 03bb 05 00 00 00             		bsr	_knl_GetResCB
 725 03bf E7 A1 03                		mov.L	r1, 12[r10]
 227:../kernel/tkernel/deviceio.c **** 	if ( rescb == NULL ) {
 726                             		.loc 2 227 5
 727 03c2 ED A5 03                		mov.L	12[r10], r5
 728 03c5 61 05                   		cmp	#0, r5
 729 03c7 18                      		bne	.L46
 228:../kernel/tkernel/deviceio.c **** 		ercd = E_CTX;
 730                             		.loc 2 228 8
 731 03c8 F9 A6 01 E7             		mov.L	#-25, 4[r10]
 229:../kernel/tkernel/deviceio.c **** 		goto err_ret1;
 732                             		.loc 2 229 3
 733 03cc 38 90 01                		bra	.L47
 734                             	.L46:
 230:../kernel/tkernel/deviceio.c **** 	}
 231:../kernel/tkernel/deviceio.c **** 
 232:../kernel/tkernel/deviceio.c **** 	LockDM();
 735                             		.loc 2 232 2
 736 03cf 66 02                   		mov.L	#0, r2
 737 03d1 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 738 03d7 05 00 00 00             		bsr	_MLock
 233:../kernel/tkernel/deviceio.c **** 
 234:../kernel/tkernel/deviceio.c **** 	/* Search device to open */
 235:../kernel/tkernel/deviceio.c **** 	devcb = knl_searchDevCB(pdevnm);
 739                             		.loc 2 235 10
 740 03db 71 A5 20                		add	#32, r10, r5
 741 03de EF 51                   		mov.L	r5, r1
 742 03e0 05 00 00 00             		bsr	_knl_searchDevCB
 743 03e4 E7 A1 04                		mov.L	r1, 16[r10]
 236:../kernel/tkernel/deviceio.c **** 	if ( devcb == NULL || unitno > devcb->ddev.nsub ) {
 744                             		.loc 2 236 5
 745 03e7 ED A5 04                		mov.L	16[r10], r5
 746 03ea 61 05                   		cmp	#0, r5
 747 03ec 20 0E                   		beq	.L48
 748                             		.loc 2 236 44 discriminator 1
 749 03ee ED A5 04                		mov.L	16[r10], r5
 750 03f1 AA 55                   		mov.L	32[r5], r5
 751                             		.loc 2 236 21 discriminator 1
 752 03f3 ED A4 02                		mov.L	8[r10], r4
 753 03f6 47 54                   		cmp	r5, r4
 754 03f8 2B 09                   		ble	.L49
 755                             	.L48:
 237:../kernel/tkernel/deviceio.c **** 		ercd = E_NOEXS;
 756                             		.loc 2 237 8
 757 03fa F9 A6 01 D6             		mov.L	#-42, 4[r10]
 238:../kernel/tkernel/deviceio.c **** 		goto err_ret2;
 758                             		.loc 2 238 3
 759 03fe 38 52 01                		bra	.L50
 760                             	.L49:
 239:../kernel/tkernel/deviceio.c **** 	}
 240:../kernel/tkernel/deviceio.c **** 
 241:../kernel/tkernel/deviceio.c **** 	/* Check open mode */
 242:../kernel/tkernel/deviceio.c **** 	ercd = chkopenmode(devcb, unitno, omode);
 761                             		.loc 2 242 9
 762 0401 ED A3 0C                		mov.L	48[r10], r3
 763 0404 ED A2 02                		mov.L	8[r10], r2
 764 0407 ED A1 04                		mov.L	16[r10], r1
 765 040a 39 7B FE                		bsr	_chkopenmode
 766 040d E7 A1 01                		mov.L	r1, 4[r10]
 243:../kernel/tkernel/deviceio.c **** 	if ( ercd < E_OK ) {
 767                             		.loc 2 243 5
 768 0410 ED A5 01                		mov.L	4[r10], r5
 769 0413 61 05                   		cmp	#0, r5
 770 0415 28 05 38 38 01          		blt	.L61
 244:../kernel/tkernel/deviceio.c **** 		goto err_ret2;
 245:../kernel/tkernel/deviceio.c **** 	}
 246:../kernel/tkernel/deviceio.c **** 
 247:../kernel/tkernel/deviceio.c **** 	openfn = (OPNFN)devcb->ddev.openfn;
 771                             		.loc 2 247 9
 772 041a ED A5 04                		mov.L	16[r10], r5
 773 041d AA D5                   		mov.L	40[r5], r5
 774 041f E3 A5                   		mov.L	r5, [r10]
 248:../kernel/tkernel/deviceio.c **** 	exinf = devcb->ddev.exinf;
 775                             		.loc 2 248 8
 776 0421 ED A5 04                		mov.L	16[r10], r5
 777 0424 A9 5D                   		mov.L	20[r5], r5
 778 0426 E7 A5 05                		mov.L	r5, 20[r10]
 249:../kernel/tkernel/deviceio.c **** 
 250:../kernel/tkernel/deviceio.c **** 	/* Is device driver call required? */
 251:../kernel/tkernel/deviceio.c **** 	if ( knl_chkopen(devcb, unitno) && (devcb->ddev.drvatr & TDA_OPENREQ) == 0 ) {
 779                             		.loc 2 251 7
 780 0429 ED A2 02                		mov.L	8[r10], r2
 781 042c ED A1 04                		mov.L	16[r10], r1
 782 042f 05 00 00 00             		bsr	_knl_chkopen
 783 0433 EF 15                   		mov.L	r1, r5
 784                             		.loc 2 251 5
 785 0435 61 05                   		cmp	#0, r5
 786 0437 20 0F                   		beq	.L52
 787                             		.loc 2 251 49 discriminator 1
 788 0439 ED A5 04                		mov.L	16[r10], r5
 789 043c A9 D5                   		mov.L	24[r5], r5
 790                             		.loc 2 251 57 discriminator 1
 791 043e 64 15                   		and	#1, r5
 792                             		.loc 2 251 34 discriminator 1
 793 0440 61 05                   		cmp	#0, r5
 794 0442 1C                      		bne	.L52
 252:../kernel/tkernel/deviceio.c **** 		openfn = NULL;
 795                             		.loc 2 252 10
 796 0443 F8 A6 00                		mov.L	#0, [r10]
 797                             	.L52:
 253:../kernel/tkernel/deviceio.c **** 	}
 254:../kernel/tkernel/deviceio.c **** 
 255:../kernel/tkernel/deviceio.c **** 	/* Get open management block */
 256:../kernel/tkernel/deviceio.c **** 	opncb = newOpnCB(devcb, unitno, omode, rescb);
 798                             		.loc 2 256 10
 799 0446 ED A4 03                		mov.L	12[r10], r4
 800 0449 ED A3 0C                		mov.L	48[r10], r3
 801 044c ED A2 02                		mov.L	8[r10], r2
 802 044f ED A1 04                		mov.L	16[r10], r1
 803 0452 39 B5 FD                		bsr	_newOpnCB
 804 0455 E7 A1 06                		mov.L	r1, 24[r10]
 257:../kernel/tkernel/deviceio.c **** 	if ( opncb == NULL ) {
 805                             		.loc 2 257 5
 806 0458 ED A5 06                		mov.L	24[r10], r5
 807 045b 61 05                   		cmp	#0, r5
 808 045d 18                      		bne	.L53
 258:../kernel/tkernel/deviceio.c **** 		ercd = E_LIMIT;
 809                             		.loc 2 258 8
 810 045e F9 A6 01 DE             		mov.L	#-34, 4[r10]
 259:../kernel/tkernel/deviceio.c **** 		goto err_ret2;
 811                             		.loc 2 259 3
 812 0462 38 EE 00                		bra	.L50
 813                             	.L53:
 260:../kernel/tkernel/deviceio.c **** 	}
 261:../kernel/tkernel/deviceio.c **** 
 262:../kernel/tkernel/deviceio.c **** 	semid = tk_cre_sem(&knl_pk_csem_DM);
 814                             		.loc 2 262 10
 815 0465 FB 12 00 00 00 00       		mov.L	#_knl_pk_csem_DM, r1
 816 046b 05 00 00 00             		bsr	_tk_cre_sem
 817 046f E7 A1 07                		mov.L	r1, 28[r10]
 263:../kernel/tkernel/deviceio.c **** 	if ( semid < E_OK ) {
 818                             		.loc 2 263 5
 819 0472 ED A5 07                		mov.L	28[r10], r5
 820 0475 61 05                   		cmp	#0, r5
 821 0477 28 09                   		bge	.L54
 264:../kernel/tkernel/deviceio.c **** 		ercd = E_SYS;
 822                             		.loc 2 264 8
 823 0479 F9 A6 01 FB             		mov.L	#-5, 4[r10]
 265:../kernel/tkernel/deviceio.c **** 		goto err_ret2_5;
 824                             		.loc 2 265 3
 825 047d 38 C7 00                		bra	.L55
 826                             	.L54:
 266:../kernel/tkernel/deviceio.c **** 	}
 267:../kernel/tkernel/deviceio.c **** 	opncb->abort_semid = semid;
 827                             		.loc 2 267 21
 828 0480 ED A5 06                		mov.L	24[r10], r5
 829 0483 ED A4 07                		mov.L	28[r10], r4
 830 0486 A3 DC                   		mov.L	r4, 60[r5]
 268:../kernel/tkernel/deviceio.c **** 
 269:../kernel/tkernel/deviceio.c **** 	UnlockDM();
 831                             		.loc 2 269 2
 832 0488 66 02                   		mov.L	#0, r2
 833 048a FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 834 0490 05 00 00 00             		bsr	_MUnlock
 270:../kernel/tkernel/deviceio.c **** 
 271:../kernel/tkernel/deviceio.c **** 	if ( openfn != NULL ) {
 835                             		.loc 2 271 5
 836 0494 EC A5                   		mov.L	[r10], r5
 837 0496 61 05                   		cmp	#0, r5
 838 0498 20 65                   		beq	.L56
 272:../kernel/tkernel/deviceio.c **** 		/* Device driver call */
 273:../kernel/tkernel/deviceio.c **** 		DISABLE_INTERRUPT;
 839                             		.loc 2 273 3
 840 049a 05 00 00 00             		bsr	_disint
 274:../kernel/tkernel/deviceio.c **** 		knl_ctxtsk->sysmode++;
 841                             		.loc 2 274 13
 842 049e FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 843 04a4 EC 55                   		mov.L	[r5], r5
 844 04a6 9C 5C                   		mov.W	34[r5], r4
 845                             		.loc 2 274 22
 846 04a8 62 14                   		add	#1, r4
 847 04aa 94 5C                   		mov.W	r4, 34[r5]
 275:../kernel/tkernel/deviceio.c **** 		ENABLE_INTERRUPT;
 848                             		.loc 2 275 3
 849 04ac 66 01                   		mov.L	#0, r1
 850 04ae 05 00 00 00             		bsr	_setint
 276:../kernel/tkernel/deviceio.c **** 		ercd = (*openfn)(DEVID(devcb, unitno), omode, exinf);
 851                             		.loc 2 276 20
 852 04b2 ED A5 04                		mov.L	16[r10], r5
 853 04b5 FB 72 00 00 00 00       		mov.L	#_knl_DevCBtbl, r7
 854 04bb 43 75                   		sub	r7, r5
 855 04bd 6A 35                   		shar	#3, r5
 856 04bf 74 15 39 8E E3 38       		mul	#0x38e38e39, r5
 857 04c5 62 15                   		add	#1, r5
 858 04c7 6C 85                   		shll	#8, r5
 859 04c9 EF 54                   		mov.L	r5, r4
 860 04cb 06 89 A4 02             		add	8[r10].L, r4
 861                             		.loc 2 276 11
 862 04cf EC A5                   		mov.L	[r10], r5
 863 04d1 ED A3 05                		mov.L	20[r10], r3
 864 04d4 ED A2 0C                		mov.L	48[r10], r2
 865 04d7 EF 41                   		mov.L	r4, r1
 866 04d9 7F 15                   		jsr	r5
 867                             	.LVL0:
 868 04db E7 A1 01                		mov.L	r1, 4[r10]
 277:../kernel/tkernel/deviceio.c **** 		DISABLE_INTERRUPT;
 869                             		.loc 2 277 3
 870 04de 05 00 00 00             		bsr	_disint
 278:../kernel/tkernel/deviceio.c **** 		knl_ctxtsk->sysmode--;
 871                             		.loc 2 278 13
 872 04e2 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 873 04e8 EC 55                   		mov.L	[r5], r5
 874 04ea 9C 5C                   		mov.W	34[r5], r4
 875                             		.loc 2 278 22
 876 04ec 60 14                   		sub	#1, r4
 877 04ee 94 5C                   		mov.W	r4, 34[r5]
 279:../kernel/tkernel/deviceio.c **** 		ENABLE_INTERRUPT;
 878                             		.loc 2 279 3
 879 04f0 66 01                   		mov.L	#0, r1
 880 04f2 05 00 00 00             		bsr	_setint
 280:../kernel/tkernel/deviceio.c **** 
 281:../kernel/tkernel/deviceio.c **** 		if ( ercd < E_OK ) {
 881                             		.loc 2 281 6
 882 04f6 ED A5 01                		mov.L	4[r10], r5
 883 04f9 61 05                   		cmp	#0, r5
 884 04fb 29 31                   		blt	.L62
 885                             	.L56:
 282:../kernel/tkernel/deviceio.c **** 			goto err_ret3;
 283:../kernel/tkernel/deviceio.c **** 		}
 284:../kernel/tkernel/deviceio.c **** 	}
 285:../kernel/tkernel/deviceio.c **** 
 286:../kernel/tkernel/deviceio.c **** 	LockDM();
 886                             		.loc 2 286 2
 887 04fd 66 02                   		mov.L	#0, r2
 888 04ff FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 889 0505 05 00 00 00             		bsr	_MLock
 287:../kernel/tkernel/deviceio.c **** 	opncb->resid = 1; /* Indicate that open processing is completed */
 890                             		.loc 2 287 15
 891 0509 ED A5 06                		mov.L	24[r10], r5
 892 050c 3E 54 01                		mov.L	#1, 16[r5]
 288:../kernel/tkernel/deviceio.c **** 	UnlockDM();
 893                             		.loc 2 288 2
 894 050f 66 02                   		mov.L	#0, r2
 895 0511 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 896 0517 05 00 00 00             		bsr	_MUnlock
 289:../kernel/tkernel/deviceio.c **** 
 290:../kernel/tkernel/deviceio.c **** 	return DD(opncb);
 897                             		.loc 2 290 9
 898 051b ED A5 06                		mov.L	24[r10], r5
 899 051e FB 72 00 00 00 00       		mov.L	#_knl_OpnCBtbl, r7
 900 0524 43 75                   		sub	r7, r5
 901 0526 6A 65                   		shar	#6, r5
 902 0528 62 15                   		add	#1, r5
 903 052a 2E 35                   		bra	.L59
 904                             	.L62:
 282:../kernel/tkernel/deviceio.c **** 		}
 905                             		.loc 2 282 4
 906 052c 03                      		nop
 907                             	.L57:
 291:../kernel/tkernel/deviceio.c **** 
 292:../kernel/tkernel/deviceio.c **** err_ret3:
 293:../kernel/tkernel/deviceio.c **** 	LockDM();
 908                             		.loc 2 293 2
 909 052d 66 02                   		mov.L	#0, r2
 910 052f FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 911 0535 05 00 00 00             		bsr	_MLock
 294:../kernel/tkernel/deviceio.c **** 	tk_del_sem(opncb->abort_semid);
 912                             		.loc 2 294 2
 913 0539 ED A5 06                		mov.L	24[r10], r5
 914 053c AB DD                   		mov.L	60[r5], r5
 915 053e EF 51                   		mov.L	r5, r1
 916 0540 05 00 00 00             		bsr	_tk_del_sem
 917                             	.L55:
 295:../kernel/tkernel/deviceio.c **** err_ret2_5:
 296:../kernel/tkernel/deviceio.c **** 	knl_delOpnCB(opncb, TRUE);
 918                             		.loc 2 296 2
 919 0544 66 12                   		mov.L	#1, r2
 920 0546 ED A1 06                		mov.L	24[r10], r1
 921 0549 05 00 00 00             		bsr	_knl_delOpnCB
 922 054d 2E 03                   		bra	.L50
 923                             	.L61:
 244:../kernel/tkernel/deviceio.c **** 	}
 924                             		.loc 2 244 3
 925 054f 03                      		nop
 926                             		.balign 8,3,1
 927                             	.L50:
 297:../kernel/tkernel/deviceio.c **** err_ret2:
 298:../kernel/tkernel/deviceio.c **** 	UnlockDM();
 928                             		.loc 2 298 2
 929 0550 66 02                   		mov.L	#0, r2
 930 0552 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 931 0558 05 00 00 00             		bsr	_MUnlock
 932                             	.L47:
 299:../kernel/tkernel/deviceio.c **** err_ret1:
 300:../kernel/tkernel/deviceio.c **** 	return ercd;
 933                             		.loc 2 300 9
 934 055c ED A5 01                		mov.L	4[r10], r5
 935                             	.L59:
 301:../kernel/tkernel/deviceio.c **** }
 936                             		.loc 2 301 1 discriminator 1
 937 055f EF 51                   		mov.L	r5, r1
 938 0561 3F 7A 11                		rtsd	#68, r7-r10
 939                             	.LFE28:
 942                             	_abort_allrequest:
 943                             	.LFB29:
 302:../kernel/tkernel/deviceio.c **** 
 303:../kernel/tkernel/deviceio.c **** /*
 304:../kernel/tkernel/deviceio.c ****  * Abort all requests
 305:../kernel/tkernel/deviceio.c ****  */
 306:../kernel/tkernel/deviceio.c **** LOCAL void abort_allrequest( OpnCB *opncb )
 307:../kernel/tkernel/deviceio.c **** {
 944                             		.loc 2 307 1
 945 0564 7E AA                   		push.l	r10
 946                             	.LCFI26:
 947 0566 71 0A E4                		add	#-28, r0, r10
 948                             	.LCFI27:
 949 0569 EF A0                   		mov.L	r10, r0
 950 056b E7 A1 06                		mov.L	r1, 24[r10]
 308:../kernel/tkernel/deviceio.c **** 	ABTFN	abortfn;
 309:../kernel/tkernel/deviceio.c **** 	WAIFN	waitfn;
 310:../kernel/tkernel/deviceio.c **** 	void	*exinf;
 311:../kernel/tkernel/deviceio.c **** 	DevCB	*devcb;
 312:../kernel/tkernel/deviceio.c **** 	ReqCB	*reqcb;
 313:../kernel/tkernel/deviceio.c **** 	QUEUE	*q;
 314:../kernel/tkernel/deviceio.c **** 
 315:../kernel/tkernel/deviceio.c **** 	/* If 'execfn' and 'waitfn' are called, execute abort request. */
 316:../kernel/tkernel/deviceio.c **** 	LockDM();
 951                             		.loc 2 316 2
 952 056e 66 02                   		mov.L	#0, r2
 953 0570 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 954 0576 05 00 00 00             		bsr	_MLock
 317:../kernel/tkernel/deviceio.c **** 
 318:../kernel/tkernel/deviceio.c **** 	devcb = opncb->devcb;
 955                             		.loc 2 318 8
 956 057a ED A5 06                		mov.L	24[r10], r5
 957 057d A9 5D                   		mov.L	20[r5], r5
 958 057f E7 A5 01                		mov.L	r5, 4[r10]
 319:../kernel/tkernel/deviceio.c **** 	abortfn = (ABTFN)devcb->ddev.abortfn;
 959                             		.loc 2 319 10
 960 0582 ED A5 01                		mov.L	4[r10], r5
 961 0585 AB D5                   		mov.L	56[r5], r5
 962 0587 E7 A5 02                		mov.L	r5, 8[r10]
 320:../kernel/tkernel/deviceio.c **** 	waitfn  = (WAIFN)devcb->ddev.waitfn;
 963                             		.loc 2 320 10
 964 058a ED A5 01                		mov.L	4[r10], r5
 965 058d AB 5D                   		mov.L	52[r5], r5
 966 058f E7 A5 03                		mov.L	r5, 12[r10]
 321:../kernel/tkernel/deviceio.c **** 	exinf   = devcb->ddev.exinf;
 967                             		.loc 2 321 10
 968 0592 ED A5 01                		mov.L	4[r10], r5
 969 0595 A9 5D                   		mov.L	20[r5], r5
 970 0597 E7 A5 04                		mov.L	r5, 16[r10]
 322:../kernel/tkernel/deviceio.c **** 
 323:../kernel/tkernel/deviceio.c **** 	opncb->abort_tskid = tk_get_tid();
 971                             		.loc 2 323 23
 972 059a 05 00 00 00             		bsr	_tk_get_tid
 973 059e EF 14                   		mov.L	r1, r4
 974                             		.loc 2 323 21
 975 05a0 ED A5 06                		mov.L	24[r10], r5
 976 05a3 A3 5C                   		mov.L	r4, 52[r5]
 324:../kernel/tkernel/deviceio.c **** 	opncb->abort_cnt = 0;
 977                             		.loc 2 324 19
 978 05a5 ED A5 06                		mov.L	24[r10], r5
 979 05a8 3E 5E 00                		mov.L	#0, 56[r5]
 325:../kernel/tkernel/deviceio.c **** 
 326:../kernel/tkernel/deviceio.c **** 	if ( opncb->nwaireq > 0 ) {
 980                             		.loc 2 326 12
 981 05ab ED A5 06                		mov.L	24[r10], r5
 982 05ae AB 55                   		mov.L	48[r5], r5
 983                             		.loc 2 326 5
 984 05b0 61 05                   		cmp	#0, r5
 985 05b2 2B 64                   		ble	.L64
 327:../kernel/tkernel/deviceio.c **** 		/* Multiple requests wait */
 328:../kernel/tkernel/deviceio.c **** 		reqcb = DEVREQ_REQCB(opncb->waireqlst);
 986                             		.loc 2 328 11
 987 05b4 ED A5 06                		mov.L	24[r10], r5
 988 05b7 AA DD                   		mov.L	44[r5], r5
 989                             		.loc 2 328 9
 990 05b9 71 55 F0                		add	#-16, r5
 991 05bc E7 A5 05                		mov.L	r5, 20[r10]
 329:../kernel/tkernel/deviceio.c **** 
 330:../kernel/tkernel/deviceio.c **** 		/* Device driver call */
 331:../kernel/tkernel/deviceio.c **** 		DISABLE_INTERRUPT;
 992                             		.loc 2 331 3
 993 05bf 05 00 00 00             		bsr	_disint
 332:../kernel/tkernel/deviceio.c **** 		knl_ctxtsk->sysmode++;
 994                             		.loc 2 332 13
 995 05c3 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 996 05c9 EC 55                   		mov.L	[r5], r5
 997 05cb 9C 5C                   		mov.W	34[r5], r4
 998                             		.loc 2 332 22
 999 05cd 62 14                   		add	#1, r4
 1000 05cf 94 5C                   		mov.W	r4, 34[r5]
 333:../kernel/tkernel/deviceio.c **** 		ENABLE_INTERRUPT;
 1001                             		.loc 2 333 3
 1002 05d1 66 01                   		mov.L	#0, r1
 1003 05d3 05 00 00 00             		bsr	_setint
 334:../kernel/tkernel/deviceio.c **** 		(*abortfn)(reqcb->tskid, opncb->waireqlst, opncb->nwaireq, exinf);
 1004                             		.loc 2 334 4
 1005 05d7 ED A5 05                		mov.L	20[r10], r5
 1006 05da A8 D9                   		mov.L	12[r5], r1
 1007 05dc ED A5 06                		mov.L	24[r10], r5
 1008 05df AA DA                   		mov.L	44[r5], r2
 1009 05e1 ED A5 06                		mov.L	24[r10], r5
 1010 05e4 AB 53                   		mov.L	48[r5], r3
 1011 05e6 ED A5 02                		mov.L	8[r10], r5
 1012 05e9 ED A4 04                		mov.L	16[r10], r4
 1013 05ec 7F 15                   		jsr	r5
 1014                             	.LVL1:
 335:../kernel/tkernel/deviceio.c **** 		DISABLE_INTERRUPT;
 1015                             		.loc 2 335 3
 1016 05ee 05 00 00 00             		bsr	_disint
 336:../kernel/tkernel/deviceio.c **** 		knl_ctxtsk->sysmode--;
 1017                             		.loc 2 336 13
 1018 05f2 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 1019 05f8 EC 55                   		mov.L	[r5], r5
 1020 05fa 9C 5C                   		mov.W	34[r5], r4
 1021                             		.loc 2 336 22
 1022 05fc 60 14                   		sub	#1, r4
 1023 05fe 94 5C                   		mov.W	r4, 34[r5]
 337:../kernel/tkernel/deviceio.c **** 		ENABLE_INTERRUPT;
 1024                             		.loc 2 337 3
 1025 0600 66 01                   		mov.L	#0, r1
 1026 0602 05 00 00 00             		bsr	_setint
 338:../kernel/tkernel/deviceio.c **** 
 339:../kernel/tkernel/deviceio.c **** 		opncb->abort_cnt++;
 1027                             		.loc 2 339 8
 1028 0606 ED A5 06                		mov.L	24[r10], r5
 1029 0609 AB D5                   		mov.L	56[r5], r5
 1030                             		.loc 2 339 19
 1031 060b 71 54 01                		add	#1, r5, r4
 1032 060e ED A5 06                		mov.L	24[r10], r5
 1033 0611 A3 D4                   		mov.L	r4, 56[r5]
 1034 0613 38 8A 00                		bra	.L65
 1035                             	.L64:
 340:../kernel/tkernel/deviceio.c **** 	} else {
 341:../kernel/tkernel/deviceio.c **** 		/* Start request or single request wait */
 342:../kernel/tkernel/deviceio.c **** 		for ( q = opncb->requestq.next; q != &opncb->requestq; q = q->next ) {
 1036                             		.loc 2 342 11
 1037 0616 ED A5 06                		mov.L	24[r10], r5
 1038 0619 AA 55                   		mov.L	32[r5], r5
 1039 061b E3 A5                   		mov.L	r5, [r10]
 1040                             		.loc 2 342 3
 1041 061d 2E 74                   		bra	.L66
 1042                             	.L69:
 343:../kernel/tkernel/deviceio.c **** 			reqcb = (ReqCB*)q;
 1043                             		.loc 2 343 10
 1044 061f EC A5                   		mov.L	[r10], r5
 1045 0621 E7 A5 05                		mov.L	r5, 20[r10]
 344:../kernel/tkernel/deviceio.c **** 			if ( reqcb->tskid == 0 ) {
 1046                             		.loc 2 344 14
 1047 0624 ED A5 05                		mov.L	20[r10], r5
 1048 0627 A8 DD                   		mov.L	12[r5], r5
 1049                             		.loc 2 344 7
 1050 0629 61 05                   		cmp	#0, r5
 1051 062b 20 5F                   		beq	.L73
 345:../kernel/tkernel/deviceio.c **** 				continue;
 346:../kernel/tkernel/deviceio.c **** 			}
 347:../kernel/tkernel/deviceio.c **** 
 348:../kernel/tkernel/deviceio.c **** 			reqcb->req.abort = TRUE;
 1052                             		.loc 2 348 21
 1053 062d ED A4 05                		mov.L	20[r10], r4
 1054 0630 8F 45                   		mov.B	28[r4], r5
 1055 0632 78 45                   		bset	#4, r5
 1056 0634 87 45                   		mov.B	r5, 28[r4]
 349:../kernel/tkernel/deviceio.c **** 
 350:../kernel/tkernel/deviceio.c **** 			/* Device driver call */
 351:../kernel/tkernel/deviceio.c **** 			DISABLE_INTERRUPT;
 1057                             		.loc 2 351 4
 1058 0636 05 00 00 00             		bsr	_disint
 352:../kernel/tkernel/deviceio.c **** 			knl_ctxtsk->sysmode++;
 1059                             		.loc 2 352 14
 1060 063a FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 1061 0640 EC 55                   		mov.L	[r5], r5
 1062 0642 9C 5C                   		mov.W	34[r5], r4
 1063                             		.loc 2 352 23
 1064 0644 62 14                   		add	#1, r4
 1065 0646 94 5C                   		mov.W	r4, 34[r5]
 353:../kernel/tkernel/deviceio.c **** 			ENABLE_INTERRUPT;
 1066                             		.loc 2 353 4
 1067 0648 66 01                   		mov.L	#0, r1
 1068 064a 05 00 00 00             		bsr	_setint
 354:../kernel/tkernel/deviceio.c **** 			(*abortfn)(reqcb->tskid, &reqcb->req, 1, exinf);
 1069                             		.loc 2 354 5
 1070 064e ED A5 05                		mov.L	20[r10], r5
 1071 0651 A8 D9                   		mov.L	12[r5], r1
 1072 0653 ED A5 05                		mov.L	20[r10], r5
 1073 0656 71 52 10                		add	#16, r5, r2
 1074 0659 ED A5 02                		mov.L	8[r10], r5
 1075 065c ED A4 04                		mov.L	16[r10], r4
 1076 065f 66 13                   		mov.L	#1, r3
 1077 0661 7F 15                   		jsr	r5
 1078                             	.LVL2:
 355:../kernel/tkernel/deviceio.c **** 			DISABLE_INTERRUPT;
 1079                             		.loc 2 355 4
 1080 0663 05 00 00 00             		bsr	_disint
 356:../kernel/tkernel/deviceio.c **** 			knl_ctxtsk->sysmode--;
 1081                             		.loc 2 356 14
 1082 0667 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 1083 066d EC 55                   		mov.L	[r5], r5
 1084 066f 9C 5C                   		mov.W	34[r5], r4
 1085                             		.loc 2 356 23
 1086 0671 60 14                   		sub	#1, r4
 1087 0673 94 5C                   		mov.W	r4, 34[r5]
 357:../kernel/tkernel/deviceio.c **** 			ENABLE_INTERRUPT;
 1088                             		.loc 2 357 4
 1089 0675 66 01                   		mov.L	#0, r1
 1090 0677 05 00 00 00             		bsr	_setint
 358:../kernel/tkernel/deviceio.c **** 
 359:../kernel/tkernel/deviceio.c **** 			opncb->abort_cnt++;
 1091                             		.loc 2 359 9
 1092 067b ED A5 06                		mov.L	24[r10], r5
 1093 067e AB D5                   		mov.L	56[r5], r5
 1094                             		.loc 2 359 20
 1095 0680 71 54 01                		add	#1, r5, r4
 1096 0683 ED A5 06                		mov.L	24[r10], r5
 1097 0686 A3 D4                   		mov.L	r4, 56[r5]
 1098 0688 2E 03                   		bra	.L68
 1099                             	.L73:
 345:../kernel/tkernel/deviceio.c **** 			}
 1100                             		.loc 2 345 5
 1101 068a 03                      		nop
 1102                             	.L68:
 342:../kernel/tkernel/deviceio.c **** 			reqcb = (ReqCB*)q;
 1103                             		.loc 2 342 60 discriminator 2
 1104 068b EC A5                   		mov.L	[r10], r5
 1105 068d EC 55                   		mov.L	[r5], r5
 1106 068f E3 A5                   		mov.L	r5, [r10]
 1107                             	.L66:
 342:../kernel/tkernel/deviceio.c **** 			reqcb = (ReqCB*)q;
 1108                             		.loc 2 342 40 discriminator 1
 1109 0691 ED A5 06                		mov.L	24[r10], r5
 1110 0694 71 55 20                		add	#32, r5
 342:../kernel/tkernel/deviceio.c **** 			reqcb = (ReqCB*)q;
 1111                             		.loc 2 342 3 discriminator 1
 1112 0697 EC A4                   		mov.L	[r10], r4
 1113 0699 47 54                   		cmp	r5, r4
 1114 069b 21 84                   		bne	.L69
 1115                             	.L65:
 360:../kernel/tkernel/deviceio.c **** 		}
 361:../kernel/tkernel/deviceio.c **** 	}
 362:../kernel/tkernel/deviceio.c **** 
 363:../kernel/tkernel/deviceio.c **** 	UnlockDM();
 1116                             		.loc 2 363 2
 1117 069d 66 02                   		mov.L	#0, r2
 1118 069f FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 1119 06a5 05 00 00 00             		bsr	_MUnlock
 364:../kernel/tkernel/deviceio.c **** 
 365:../kernel/tkernel/deviceio.c **** 	if ( opncb->abort_cnt > 0 ) {
 1120                             		.loc 2 365 12
 1121 06a9 ED A5 06                		mov.L	24[r10], r5
 1122 06ac AB D5                   		mov.L	56[r5], r5
 1123                             		.loc 2 365 5
 1124 06ae 61 05                   		cmp	#0, r5
 1125 06b0 2B 12                   		ble	.L70
 366:../kernel/tkernel/deviceio.c **** 		/* Wait for completion of abort request processing */
 367:../kernel/tkernel/deviceio.c **** 		tk_wai_sem(opncb->abort_semid, 1, TMO_FEVR);
 1126                             		.loc 2 367 3
 1127 06b2 ED A5 06                		mov.L	24[r10], r5
 1128 06b5 AB DD                   		mov.L	60[r5], r5
 1129 06b7 FB 36 FF                		mov.L	#-1, r3
 1130 06ba 66 12                   		mov.L	#1, r2
 1131 06bc EF 51                   		mov.L	r5, r1
 1132 06be 05 00 00 00             		bsr	_tk_wai_sem
 1133                             	.L70:
 368:../kernel/tkernel/deviceio.c **** 	}
 369:../kernel/tkernel/deviceio.c **** 	opncb->abort_tskid = 0;
 1134                             		.loc 2 369 21
 1135 06c2 ED A5 06                		mov.L	24[r10], r5
 1136 06c5 3E 5D 00                		mov.L	#0, 52[r5]
 370:../kernel/tkernel/deviceio.c **** 
 371:../kernel/tkernel/deviceio.c **** 	/* Abort remaining requests and wait for completion */
 372:../kernel/tkernel/deviceio.c **** 	LockDM();
 1137                             		.loc 2 372 2
 1138 06c8 66 02                   		mov.L	#0, r2
 1139 06ca FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 1140 06d0 05 00 00 00             		bsr	_MLock
 373:../kernel/tkernel/deviceio.c **** 	while ( !isQueEmpty(&opncb->requestq) ) {
 1141                             		.loc 2 373 8
 1142 06d4 2E 75                   		bra	.L71
 1143                             	.L72:
 374:../kernel/tkernel/deviceio.c **** 		reqcb = (ReqCB*)opncb->requestq.next;
 1144                             		.loc 2 374 9
 1145 06d6 ED A5 06                		mov.L	24[r10], r5
 1146 06d9 AA 55                   		mov.L	32[r5], r5
 1147 06db E7 A5 05                		mov.L	r5, 20[r10]
 375:../kernel/tkernel/deviceio.c **** 		reqcb->req.abort = TRUE;
 1148                             		.loc 2 375 20
 1149 06de ED A4 05                		mov.L	20[r10], r4
 1150 06e1 8F 45                   		mov.B	28[r4], r5
 1151 06e3 78 45                   		bset	#4, r5
 1152 06e5 87 45                   		mov.B	r5, 28[r4]
 376:../kernel/tkernel/deviceio.c **** 
 377:../kernel/tkernel/deviceio.c **** 		UnlockDM();
 1153                             		.loc 2 377 3
 1154 06e7 66 02                   		mov.L	#0, r2
 1155 06e9 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 1156 06ef 05 00 00 00             		bsr	_MUnlock
 378:../kernel/tkernel/deviceio.c **** 
 379:../kernel/tkernel/deviceio.c **** 		/* Device driver call */
 380:../kernel/tkernel/deviceio.c **** 		DISABLE_INTERRUPT;
 1157                             		.loc 2 380 3
 1158 06f3 05 00 00 00             		bsr	_disint
 381:../kernel/tkernel/deviceio.c **** 		knl_ctxtsk->sysmode++;
 1159                             		.loc 2 381 13
 1160 06f7 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 1161 06fd EC 55                   		mov.L	[r5], r5
 1162 06ff 9C 5C                   		mov.W	34[r5], r4
 1163                             		.loc 2 381 22
 1164 0701 62 14                   		add	#1, r4
 1165 0703 94 5C                   		mov.W	r4, 34[r5]
 382:../kernel/tkernel/deviceio.c **** 		ENABLE_INTERRUPT;
 1166                             		.loc 2 382 3
 1167 0705 66 01                   		mov.L	#0, r1
 1168 0707 05 00 00 00             		bsr	_setint
 383:../kernel/tkernel/deviceio.c **** 		(*waitfn)(&reqcb->req, 1, TMO_FEVR, exinf);
 1169                             		.loc 2 383 4
 1170 070b ED A5 05                		mov.L	20[r10], r5
 1171 070e 71 51 10                		add	#16, r5, r1
 1172 0711 ED A5 03                		mov.L	12[r10], r5
 1173 0714 ED A4 04                		mov.L	16[r10], r4
 1174 0717 FB 36 FF                		mov.L	#-1, r3
 1175 071a 66 12                   		mov.L	#1, r2
 1176 071c 7F 15                   		jsr	r5
 1177                             	.LVL3:
 384:../kernel/tkernel/deviceio.c **** 		DISABLE_INTERRUPT;
 1178                             		.loc 2 384 3
 1179 071e 05 00 00 00             		bsr	_disint
 385:../kernel/tkernel/deviceio.c **** 		knl_ctxtsk->sysmode--;
 1180                             		.loc 2 385 13
 1181 0722 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 1182 0728 EC 55                   		mov.L	[r5], r5
 1183 072a 9C 5C                   		mov.W	34[r5], r4
 1184                             		.loc 2 385 22
 1185 072c 60 14                   		sub	#1, r4
 1186 072e 94 5C                   		mov.W	r4, 34[r5]
 386:../kernel/tkernel/deviceio.c **** 		ENABLE_INTERRUPT;
 1187                             		.loc 2 386 3
 1188 0730 66 01                   		mov.L	#0, r1
 1189 0732 05 00 00 00             		bsr	_setint
 387:../kernel/tkernel/deviceio.c **** 
 388:../kernel/tkernel/deviceio.c **** 		LockDM();
 1190                             		.loc 2 388 3
 1191 0736 66 02                   		mov.L	#0, r2
 1192 0738 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 1193 073e 05 00 00 00             		bsr	_MLock
 389:../kernel/tkernel/deviceio.c **** 
 390:../kernel/tkernel/deviceio.c **** 		/* Unregister completed request */
 391:../kernel/tkernel/deviceio.c **** 		knl_delReqCB(reqcb);
 1194                             		.loc 2 391 3
 1195 0742 ED A1 05                		mov.L	20[r10], r1
 1196 0745 05 00 00 00             		bsr	_knl_delReqCB
 1197                             	.L71:
 373:../kernel/tkernel/deviceio.c **** 		reqcb = (ReqCB*)opncb->requestq.next;
 1198                             		.loc 2 373 11
 1199 0749 ED A5 06                		mov.L	24[r10], r5
 1200 074c 71 55 20                		add	#32, r5
 1201 074f EF 51                   		mov.L	r5, r1
 1202 0751 39 C8 F8                		bsr	_isQueEmpty
 1203 0754 EF 15                   		mov.L	r1, r5
 373:../kernel/tkernel/deviceio.c **** 		reqcb = (ReqCB*)opncb->requestq.next;
 1204                             		.loc 2 373 8
 1205 0756 61 05                   		cmp	#0, r5
 1206 0758 3A 7E FF                		beq	.L72
 392:../kernel/tkernel/deviceio.c **** 	}
 393:../kernel/tkernel/deviceio.c **** 	UnlockDM();
 1207                             		.loc 2 393 2
 1208 075b 66 02                   		mov.L	#0, r2
 1209 075d FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 1210 0763 05 00 00 00             		bsr	_MUnlock
 394:../kernel/tkernel/deviceio.c **** }
 1211                             		.loc 2 394 1
 1212 0767 03                      		nop
 1213 0768 3F AA 08                		rtsd	#32, r10-r10
 1214                             	.LFE29:
 1216                             		.global	_knl_close_device
 1218                             	_knl_close_device:
 1219                             	.LFB30:
 395:../kernel/tkernel/deviceio.c **** 
 396:../kernel/tkernel/deviceio.c **** /*
 397:../kernel/tkernel/deviceio.c ****  * Device close processing
 398:../kernel/tkernel/deviceio.c ****  */
 399:../kernel/tkernel/deviceio.c **** EXPORT ER knl_close_device( OpnCB *opncb, UINT option )
 400:../kernel/tkernel/deviceio.c **** {
 1220                             		.loc 2 400 1
 1221 076b 6E 7A                   		pushm	r7-r10
 1222                             	.LCFI28:
 1223 076d 71 0A E0                		add	#-32, r0, r10
 1224                             	.LCFI29:
 1225 0770 EF A0                   		mov.L	r10, r0
 1226 0772 E7 A1 06                		mov.L	r1, 24[r10]
 1227 0775 E7 A2 07                		mov.L	r2, 28[r10]
 401:../kernel/tkernel/deviceio.c **** 	CLSFN	closefn;
 402:../kernel/tkernel/deviceio.c **** 	void	*exinf;
 403:../kernel/tkernel/deviceio.c **** 	ID	devid;
 404:../kernel/tkernel/deviceio.c **** 	DevCB	*devcb;
 405:../kernel/tkernel/deviceio.c **** 	INT	unitno;
 406:../kernel/tkernel/deviceio.c **** 	ER	ercd = E_OK;
 1228                             		.loc 2 406 5
 1229 0778 F9 A6 01 00             		mov.L	#0, 4[r10]
 407:../kernel/tkernel/deviceio.c **** 
 408:../kernel/tkernel/deviceio.c **** 	/* Abort all requests during processing */
 409:../kernel/tkernel/deviceio.c **** 	abort_allrequest(opncb);
 1230                             		.loc 2 409 2
 1231 077c ED A1 06                		mov.L	24[r10], r1
 1232 077f 39 E5 FD                		bsr	_abort_allrequest
 410:../kernel/tkernel/deviceio.c **** 
 411:../kernel/tkernel/deviceio.c **** 	LockDM();
 1233                             		.loc 2 411 2
 1234 0782 66 02                   		mov.L	#0, r2
 1235 0784 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 1236 078a 05 00 00 00             		bsr	_MLock
 412:../kernel/tkernel/deviceio.c **** 
 413:../kernel/tkernel/deviceio.c **** 	devcb  = opncb->devcb;
 1237                             		.loc 2 413 9
 1238 078e ED A5 06                		mov.L	24[r10], r5
 1239 0791 A9 5D                   		mov.L	20[r5], r5
 1240 0793 E7 A5 02                		mov.L	r5, 8[r10]
 414:../kernel/tkernel/deviceio.c **** 	unitno = opncb->unitno;
 1241                             		.loc 2 414 9
 1242 0796 ED A5 06                		mov.L	24[r10], r5
 1243 0799 A9 D5                   		mov.L	24[r5], r5
 1244 079b E7 A5 03                		mov.L	r5, 12[r10]
 415:../kernel/tkernel/deviceio.c **** 	closefn = (CLSFN)devcb->ddev.closefn;
 1245                             		.loc 2 415 10
 1246 079e ED A5 02                		mov.L	8[r10], r5
 1247 07a1 AA DD                   		mov.L	44[r5], r5
 1248 07a3 E3 A5                   		mov.L	r5, [r10]
 416:../kernel/tkernel/deviceio.c **** 	exinf = devcb->ddev.exinf;
 1249                             		.loc 2 416 8
 1250 07a5 ED A5 02                		mov.L	8[r10], r5
 1251 07a8 A9 5D                   		mov.L	20[r5], r5
 1252 07aa E7 A5 04                		mov.L	r5, 16[r10]
 417:../kernel/tkernel/deviceio.c **** 	devid = DEVID(devcb, unitno);
 1253                             		.loc 2 417 10
 1254 07ad ED A5 02                		mov.L	8[r10], r5
 1255 07b0 FB 72 00 00 00 00       		mov.L	#_knl_DevCBtbl, r7
 1256 07b6 43 75                   		sub	r7, r5
 1257 07b8 6A 35                   		shar	#3, r5
 1258 07ba 74 15 39 8E E3 38       		mul	#0x38e38e39, r5
 1259 07c0 62 15                   		add	#1, r5
 1260 07c2 6C 85                   		shll	#8, r5
 1261                             		.loc 2 417 8
 1262 07c4 ED A4 03                		mov.L	12[r10], r4
 1263 07c7 4B 45                   		add	r4, r5
 1264 07c9 E7 A5 05                		mov.L	r5, 20[r10]
 418:../kernel/tkernel/deviceio.c **** 
 419:../kernel/tkernel/deviceio.c **** 	/* Delete semaphore for completion check of abortion */
 420:../kernel/tkernel/deviceio.c **** 	tk_del_sem(opncb->abort_semid);
 1265                             		.loc 2 420 2
 1266 07cc ED A5 06                		mov.L	24[r10], r5
 1267 07cf AB DD                   		mov.L	60[r5], r5
 1268 07d1 EF 51                   		mov.L	r5, r1
 1269 07d3 05 00 00 00             		bsr	_tk_del_sem
 421:../kernel/tkernel/deviceio.c **** 
 422:../kernel/tkernel/deviceio.c **** 	/* Free open management block */
 423:../kernel/tkernel/deviceio.c **** 	knl_delOpnCB(opncb, FALSE);
 1270                             		.loc 2 423 2
 1271 07d7 66 02                   		mov.L	#0, r2
 1272 07d9 ED A1 06                		mov.L	24[r10], r1
 1273 07dc 05 00 00 00             		bsr	_knl_delOpnCB
 424:../kernel/tkernel/deviceio.c **** 
 425:../kernel/tkernel/deviceio.c **** 	/* Is device driver call required? */
 426:../kernel/tkernel/deviceio.c **** 	if ( knl_chkopen(devcb, unitno) ) {
 1274                             		.loc 2 426 7
 1275 07e0 ED A2 03                		mov.L	12[r10], r2
 1276 07e3 ED A1 02                		mov.L	8[r10], r1
 1277 07e6 05 00 00 00             		bsr	_knl_chkopen
 1278 07ea EF 15                   		mov.L	r1, r5
 1279                             		.loc 2 426 5
 1280 07ec 61 05                   		cmp	#0, r5
 1281 07ee 20 18                   		beq	.L75
 427:../kernel/tkernel/deviceio.c **** 		option &= ~TD_EJECT;
 1282                             		.loc 2 427 10
 1283 07f0 ED A5 07                		mov.L	28[r10], r5
 1284 07f3 75 25 FE                		and	#-2, r5
 1285 07f6 E7 A5 07                		mov.L	r5, 28[r10]
 428:../kernel/tkernel/deviceio.c **** 		if ( (devcb->ddev.drvatr & TDA_OPENREQ) == 0 ) {
 1286                             		.loc 2 428 20
 1287 07f9 ED A5 02                		mov.L	8[r10], r5
 1288 07fc A9 D5                   		mov.L	24[r5], r5
 1289                             		.loc 2 428 28
 1290 07fe 64 15                   		and	#1, r5
 1291                             		.loc 2 428 6
 1292 0800 61 05                   		cmp	#0, r5
 1293 0802 1C                      		bne	.L75
 429:../kernel/tkernel/deviceio.c **** 			closefn = NULL;
 1294                             		.loc 2 429 12
 1295 0803 F8 A6 00                		mov.L	#0, [r10]
 1296                             	.L75:
 430:../kernel/tkernel/deviceio.c **** 		}
 431:../kernel/tkernel/deviceio.c **** 	}
 432:../kernel/tkernel/deviceio.c **** 
 433:../kernel/tkernel/deviceio.c **** 	UnlockDM();
 1297                             		.loc 2 433 2
 1298 0806 66 02                   		mov.L	#0, r2
 1299 0808 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 1300 080e 05 00 00 00             		bsr	_MUnlock
 434:../kernel/tkernel/deviceio.c **** 
 435:../kernel/tkernel/deviceio.c **** 	if ( closefn != NULL ) {
 1301                             		.loc 2 435 5
 1302 0812 EC A5                   		mov.L	[r10], r5
 1303 0814 61 05                   		cmp	#0, r5
 1304 0816 20 42                   		beq	.L76
 436:../kernel/tkernel/deviceio.c **** 		/* Device driver call */
 437:../kernel/tkernel/deviceio.c **** 		DISABLE_INTERRUPT;
 1305                             		.loc 2 437 3
 1306 0818 05 00 00 00             		bsr	_disint
 438:../kernel/tkernel/deviceio.c **** 		knl_ctxtsk->sysmode++;
 1307                             		.loc 2 438 13
 1308 081c FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 1309 0822 EC 55                   		mov.L	[r5], r5
 1310 0824 9C 5C                   		mov.W	34[r5], r4
 1311                             		.loc 2 438 22
 1312 0826 62 14                   		add	#1, r4
 1313 0828 94 5C                   		mov.W	r4, 34[r5]
 439:../kernel/tkernel/deviceio.c **** 		ENABLE_INTERRUPT;
 1314                             		.loc 2 439 3
 1315 082a 66 01                   		mov.L	#0, r1
 1316 082c 05 00 00 00             		bsr	_setint
 440:../kernel/tkernel/deviceio.c **** 		ercd = (*closefn)(devid, option, exinf);
 1317                             		.loc 2 440 11
 1318 0830 EC A5                   		mov.L	[r10], r5
 1319 0832 ED A3 04                		mov.L	16[r10], r3
 1320 0835 ED A2 07                		mov.L	28[r10], r2
 1321 0838 ED A1 05                		mov.L	20[r10], r1
 1322 083b 7F 15                   		jsr	r5
 1323                             	.LVL4:
 1324 083d E7 A1 01                		mov.L	r1, 4[r10]
 441:../kernel/tkernel/deviceio.c **** 		DISABLE_INTERRUPT;
 1325                             		.loc 2 441 3
 1326 0840 05 00 00 00             		bsr	_disint
 442:../kernel/tkernel/deviceio.c **** 		knl_ctxtsk->sysmode--;
 1327                             		.loc 2 442 13
 1328 0844 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 1329 084a EC 55                   		mov.L	[r5], r5
 1330 084c 9C 5C                   		mov.W	34[r5], r4
 1331                             		.loc 2 442 22
 1332 084e 60 14                   		sub	#1, r4
 1333 0850 94 5C                   		mov.W	r4, 34[r5]
 443:../kernel/tkernel/deviceio.c **** 		ENABLE_INTERRUPT;
 1334                             		.loc 2 443 3
 1335 0852 66 01                   		mov.L	#0, r1
 1336 0854 05 00 00 00             		bsr	_setint
 1337                             	.L76:
 444:../kernel/tkernel/deviceio.c **** 	}
 445:../kernel/tkernel/deviceio.c **** 
 446:../kernel/tkernel/deviceio.c **** 	LockDM();
 1338                             		.loc 2 446 2
 1339 0858 66 02                   		mov.L	#0, r2
 1340 085a FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 1341 0860 05 00 00 00             		bsr	_MLock
 447:../kernel/tkernel/deviceio.c **** 	/* Return open management block to FreeQue */
 448:../kernel/tkernel/deviceio.c **** 	QueInsert(&opncb->q, &knl_FreeOpnCB);
 1342                             		.loc 2 448 2
 1343 0864 ED A5 06                		mov.L	24[r10], r5
 1344 0867 FB 22 00 00 00 00       		mov.L	#_knl_FreeOpnCB, r2
 1345 086d EF 51                   		mov.L	r5, r1
 1346 086f 39 C5 F7                		bsr	_QueInsert
 449:../kernel/tkernel/deviceio.c **** 	UnlockDM();
 1347                             		.loc 2 449 2
 1348 0872 66 02                   		mov.L	#0, r2
 1349 0874 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 1350 087a 05 00 00 00             		bsr	_MUnlock
 450:../kernel/tkernel/deviceio.c **** 
 451:../kernel/tkernel/deviceio.c **** 	return ercd;
 1351                             		.loc 2 451 9
 1352 087e ED A5 01                		mov.L	4[r10], r5
 452:../kernel/tkernel/deviceio.c **** }
 1353                             		.loc 2 452 1
 1354 0881 EF 51                   		mov.L	r5, r1
 1355 0883 3F 7A 0C                		rtsd	#48, r7-r10
 1356                             	.LFE30:
 1358                             		.global	_tk_cls_dev
 1360                             	_tk_cls_dev:
 1361                             	.LFB31:
 453:../kernel/tkernel/deviceio.c **** 
 454:../kernel/tkernel/deviceio.c **** /*
 455:../kernel/tkernel/deviceio.c ****  * Device close
 456:../kernel/tkernel/deviceio.c ****  */
 457:../kernel/tkernel/deviceio.c **** SYSCALL ER tk_cls_dev( ID dd, UINT option )
 458:../kernel/tkernel/deviceio.c **** {
 1362                             		.loc 2 458 1
 1363 0886 7E AA                   		push.l	r10
 1364                             	.LCFI30:
 1365 0888 71 0A F0                		add	#-16, r0, r10
 1366                             	.LCFI31:
 1367 088b EF A0                   		mov.L	r10, r0
 1368 088d E7 A1 02                		mov.L	r1, 8[r10]
 1369 0890 E7 A2 03                		mov.L	r2, 12[r10]
 459:../kernel/tkernel/deviceio.c **** 	OpnCB	*opncb;
 460:../kernel/tkernel/deviceio.c **** 	ER	ercd;
 461:../kernel/tkernel/deviceio.c **** 
 462:../kernel/tkernel/deviceio.c **** 	LockDM();
 1370                             		.loc 2 462 2
 1371 0893 66 02                   		mov.L	#0, r2
 1372 0895 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 1373 089b 05 00 00 00             		bsr	_MLock
 463:../kernel/tkernel/deviceio.c **** 
 464:../kernel/tkernel/deviceio.c **** 	ercd = knl_check_devdesc(dd, 0, &opncb);
 1374                             		.loc 2 464 9
 1375 089f 71 A5 04                		add	#4, r10, r5
 1376 08a2 EF 53                   		mov.L	r5, r3
 1377 08a4 66 02                   		mov.L	#0, r2
 1378 08a6 ED A1 02                		mov.L	8[r10], r1
 1379 08a9 05 00 00 00             		bsr	_knl_check_devdesc
 1380 08ad E3 A1                   		mov.L	r1, [r10]
 465:../kernel/tkernel/deviceio.c **** 	if ( ercd < E_OK ) {
 1381                             		.loc 2 465 5
 1382 08af EC A5                   		mov.L	[r10], r5
 1383 08b1 61 05                   		cmp	#0, r5
 1384 08b3 28 10                   		bge	.L79
 466:../kernel/tkernel/deviceio.c **** 		UnlockDM();
 1385                             		.loc 2 466 3
 1386 08b5 66 02                   		mov.L	#0, r2
 1387 08b7 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 1388 08bd 05 00 00 00             		bsr	_MUnlock
 467:../kernel/tkernel/deviceio.c **** 		goto err_ret;
 1389                             		.loc 2 467 3
 1390 08c1 2E 22                   		bra	.L80
 1391                             	.L79:
 468:../kernel/tkernel/deviceio.c **** 	}
 469:../kernel/tkernel/deviceio.c **** 
 470:../kernel/tkernel/deviceio.c **** 	opncb->resid = 0; /* Indicate that it is during close processing */
 1392                             		.loc 2 470 7
 1393 08c3 ED A5 01                		mov.L	4[r10], r5
 1394                             		.loc 2 470 15
 1395 08c6 3E 54 00                		mov.L	#0, 16[r5]
 471:../kernel/tkernel/deviceio.c **** 
 472:../kernel/tkernel/deviceio.c **** 	UnlockDM();
 1396                             		.loc 2 472 2
 1397 08c9 66 02                   		mov.L	#0, r2
 1398 08cb FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 1399 08d1 05 00 00 00             		bsr	_MUnlock
 473:../kernel/tkernel/deviceio.c **** 
 474:../kernel/tkernel/deviceio.c **** 	/* Device close processing */
 475:../kernel/tkernel/deviceio.c **** 	ercd = knl_close_device(opncb, option);
 1400                             		.loc 2 475 9
 1401 08d5 ED A5 01                		mov.L	4[r10], r5
 1402 08d8 ED A2 03                		mov.L	12[r10], r2
 1403 08db EF 51                   		mov.L	r5, r1
 1404 08dd 05 00 00 00             		bsr	_knl_close_device
 1405 08e1 E3 A1                   		mov.L	r1, [r10]
 1406                             	.L80:
 476:../kernel/tkernel/deviceio.c **** 
 477:../kernel/tkernel/deviceio.c **** err_ret:
 478:../kernel/tkernel/deviceio.c **** 	return ercd;
 1407                             		.loc 2 478 9
 1408 08e3 EC A5                   		mov.L	[r10], r5
 479:../kernel/tkernel/deviceio.c **** }
 1409                             		.loc 2 479 1
 1410 08e5 EF 51                   		mov.L	r5, r1
 1411 08e7 3F AA 05                		rtsd	#20, r10-r10
 1412                             	.LFE31:
 1415                             	_newReqCB:
 1416                             	.LFB32:
 480:../kernel/tkernel/deviceio.c **** 
 481:../kernel/tkernel/deviceio.c **** /* ------------------------------------------------------------------------ */
 482:../kernel/tkernel/deviceio.c **** 
 483:../kernel/tkernel/deviceio.c **** /*
 484:../kernel/tkernel/deviceio.c ****  * Get request management block
 485:../kernel/tkernel/deviceio.c ****  */
 486:../kernel/tkernel/deviceio.c **** LOCAL ReqCB* newReqCB( OpnCB *opncb )
 487:../kernel/tkernel/deviceio.c **** {
 1417                             		.loc 2 487 1
 1418 08ea 7E AA                   		push.l	r10
 1419                             	.LCFI32:
 1420 08ec 71 0A F8                		add	#-8, r0, r10
 1421                             	.LCFI33:
 1422 08ef EF A0                   		mov.L	r10, r0
 1423 08f1 E7 A1 01                		mov.L	r1, 4[r10]
 488:../kernel/tkernel/deviceio.c **** 	ReqCB	*reqcb;
 489:../kernel/tkernel/deviceio.c **** 
 490:../kernel/tkernel/deviceio.c **** 	/* Get space in request management block */
 491:../kernel/tkernel/deviceio.c **** 	reqcb = (ReqCB*)QueRemoveNext(&knl_FreeReqCB);
 1424                             		.loc 2 491 18
 1425 08f4 FB 12 00 00 00 00       		mov.L	#_knl_FreeReqCB, r1
 1426 08fa 39 95 F7                		bsr	_QueRemoveNext
 1427 08fd E3 A1                   		mov.L	r1, [r10]
 492:../kernel/tkernel/deviceio.c **** 	if ( reqcb == NULL ) {
 1428                             		.loc 2 492 5
 1429 08ff EC A5                   		mov.L	[r10], r5
 1430 0901 61 05                   		cmp	#0, r5
 1431 0903 1D                      		bne	.L83
 493:../kernel/tkernel/deviceio.c **** 		return NULL; /* No space */
 1432                             		.loc 2 493 10
 1433 0904 66 05                   		mov.L	#0, r5
 1434 0906 2E 1A                   		bra	.L84
 1435                             	.L83:
 494:../kernel/tkernel/deviceio.c **** 	}
 495:../kernel/tkernel/deviceio.c **** 
 496:../kernel/tkernel/deviceio.c **** 	/* Register as requested open device */
 497:../kernel/tkernel/deviceio.c **** 	QueInsert(&reqcb->q, &opncb->requestq);
 1436                             		.loc 2 497 2
 1437 0908 EC A4                   		mov.L	[r10], r4
 1438 090a ED A5 01                		mov.L	4[r10], r5
 1439 090d 71 55 20                		add	#32, r5
 1440 0910 EF 52                   		mov.L	r5, r2
 1441 0912 EF 41                   		mov.L	r4, r1
 1442 0914 39 20 F7                		bsr	_QueInsert
 498:../kernel/tkernel/deviceio.c **** 
 499:../kernel/tkernel/deviceio.c **** 	reqcb->opncb = opncb;
 1443                             		.loc 2 499 15
 1444 0917 EC A5                   		mov.L	[r10], r5
 1445 0919 ED A4 01                		mov.L	4[r10], r4
 1446 091c A0 D4                   		mov.L	r4, 8[r5]
 500:../kernel/tkernel/deviceio.c **** 
 501:../kernel/tkernel/deviceio.c **** 	return reqcb;
 1447                             		.loc 2 501 9
 1448 091e EC A5                   		mov.L	[r10], r5
 1449                             	.L84:
 502:../kernel/tkernel/deviceio.c **** }
 1450                             		.loc 2 502 1
 1451 0920 EF 51                   		mov.L	r5, r1
 1452 0922 3F AA 03                		rtsd	#12, r10-r10
 1453                             	.LFE32:
 1455                             		.global	_knl_request
 1457                             	_knl_request:
 1458                             	.LFB33:
 503:../kernel/tkernel/deviceio.c **** 
 504:../kernel/tkernel/deviceio.c **** /*
 505:../kernel/tkernel/deviceio.c ****  * Request for starting input/output to device
 506:../kernel/tkernel/deviceio.c ****  */
 507:../kernel/tkernel/deviceio.c **** EXPORT ID knl_request( ID dd, W start, void *buf, W size, TMO tmout, INT cmd )
 508:../kernel/tkernel/deviceio.c **** {
 1459                             		.loc 2 508 1
 1460 0925 6E 6A                   		pushm	r6-r10
 1461                             	.LCFI34:
 1462 0927 71 0A CC                		add	#-52, r0, r10
 1463                             	.LCFI35:
 1464 092a EF A0                   		mov.L	r10, r0
 1465 092c 75 46 4C                		mov.L	#0x4c, r6
 1466 092f 4B A6                   		add	r10, r6
 1467 0931 E7 A1 07                		mov.L	r1, 28[r10]
 1468 0934 E7 A2 08                		mov.L	r2, 32[r10]
 1469 0937 E7 A3 09                		mov.L	r3, 36[r10]
 1470 093a E7 A4 0A                		mov.L	r4, 40[r10]
 509:../kernel/tkernel/deviceio.c **** 	EXCFN	execfn;
 510:../kernel/tkernel/deviceio.c **** 	void	*exinf;
 511:../kernel/tkernel/deviceio.c **** 	OpnCB	*opncb;
 512:../kernel/tkernel/deviceio.c **** 	DevCB	*devcb;
 513:../kernel/tkernel/deviceio.c **** 	ReqCB	*reqcb;
 514:../kernel/tkernel/deviceio.c **** 	UINT	m;
 515:../kernel/tkernel/deviceio.c **** 	ER	ercd;
 516:../kernel/tkernel/deviceio.c **** 
 517:../kernel/tkernel/deviceio.c **** 	LockDM();
 1471                             		.loc 2 517 2
 1472 093d 66 02                   		mov.L	#0, r2
 1473 093f FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 1474 0945 05 00 00 00             		bsr	_MLock
 518:../kernel/tkernel/deviceio.c **** 
 519:../kernel/tkernel/deviceio.c **** 	if ( start <= -0x00010000 && start >= -0x7fffffff ) {
 1475                             		.loc 2 519 5
 1476 0949 ED A5 08                		mov.L	32[r10], r5
 1477 094c 77 05 01 00 FF          		cmp	#-65535, r5
 1478 0951 28 11                   		bge	.L86
 1479                             		.loc 2 519 28 discriminator 1
 1480 0953 ED A5 08                		mov.L	32[r10], r5
 1481 0956 74 05 00 00 00 80       		cmp	#-2147483648, r5
 1482 095c 16                      		beq	.L86
 520:../kernel/tkernel/deviceio.c **** 		m = 0; /* Ignore open mode */
 1483                             		.loc 2 520 5
 1484 095d F8 A6 00                		mov.L	#0, [r10]
 1485 0960 2E 0E                   		bra	.L87
 1486                             	.L86:
 521:../kernel/tkernel/deviceio.c **** 	} else {
 522:../kernel/tkernel/deviceio.c **** 		m = ( cmd == TDC_READ )? TD_READ: TD_WRITE;
 1487                             		.loc 2 522 35
 1488 0962 A8 6D                   		mov.L	4[r6], r5
 1489 0964 61 15                   		cmp	#1, r5
 1490 0966 1C                      		bne	.L88
 1491                             		.loc 2 522 35 is_stmt 0 discriminator 1
 1492 0967 66 15                   		mov.L	#1, r5
 1493 0969 0B                      		bra	.L89
 1494                             	.L88:
 1495                             		.loc 2 522 35 discriminator 2
 1496 096a 66 25                   		mov.L	#2, r5
 1497                             	.L89:
 1498                             		.loc 2 522 5 is_stmt 1 discriminator 4
 1499 096c E3 A5                   		mov.L	r5, [r10]
 1500                             	.L87:
 523:../kernel/tkernel/deviceio.c **** 	}
 524:../kernel/tkernel/deviceio.c **** 	ercd = knl_check_devdesc(dd, m, &opncb);
 1501                             		.loc 2 524 9
 1502 096e 71 A5 18                		add	#24, r10, r5
 1503 0971 EF 53                   		mov.L	r5, r3
 1504 0973 EC A2                   		mov.L	[r10], r2
 1505 0975 ED A1 07                		mov.L	28[r10], r1
 1506 0978 05 00 00 00             		bsr	_knl_check_devdesc
 1507 097c E7 A1 01                		mov.L	r1, 4[r10]
 525:../kernel/tkernel/deviceio.c **** 	if ( ercd < E_OK ) {
 1508                             		.loc 2 525 5
 1509 097f ED A5 01                		mov.L	4[r10], r5
 1510 0982 61 05                   		cmp	#0, r5
 1511 0984 28 05 38 72 01          		blt	.L99
 526:../kernel/tkernel/deviceio.c **** 		goto err_ret1;
 527:../kernel/tkernel/deviceio.c **** 	}
 528:../kernel/tkernel/deviceio.c **** 
 529:../kernel/tkernel/deviceio.c **** 	devcb = opncb->devcb;
 1512                             		.loc 2 529 15
 1513 0989 ED A5 06                		mov.L	24[r10], r5
 1514                             		.loc 2 529 8
 1515 098c A9 5D                   		mov.L	20[r5], r5
 1516 098e E7 A5 02                		mov.L	r5, 8[r10]
 530:../kernel/tkernel/deviceio.c **** 	execfn = (EXCFN)devcb->ddev.execfn;
 1517                             		.loc 2 530 9
 1518 0991 ED A5 02                		mov.L	8[r10], r5
 1519 0994 AB 55                   		mov.L	48[r5], r5
 1520 0996 E7 A5 03                		mov.L	r5, 12[r10]
 531:../kernel/tkernel/deviceio.c **** 	exinf = devcb->ddev.exinf;
 1521                             		.loc 2 531 8
 1522 0999 ED A5 02                		mov.L	8[r10], r5
 1523 099c A9 5D                   		mov.L	20[r5], r5
 1524 099e E7 A5 04                		mov.L	r5, 16[r10]
 532:../kernel/tkernel/deviceio.c **** 
 533:../kernel/tkernel/deviceio.c **** 	/* Get request management block */
 534:../kernel/tkernel/deviceio.c **** 	reqcb = newReqCB(opncb);
 1525                             		.loc 2 534 10
 1526 09a1 ED A5 06                		mov.L	24[r10], r5
 1527 09a4 EF 51                   		mov.L	r5, r1
 1528 09a6 39 44 FF                		bsr	_newReqCB
 1529 09a9 E7 A1 05                		mov.L	r1, 20[r10]
 535:../kernel/tkernel/deviceio.c **** 	if ( reqcb == NULL ) {
 1530                             		.loc 2 535 5
 1531 09ac ED A5 05                		mov.L	20[r10], r5
 1532 09af 61 05                   		cmp	#0, r5
 1533 09b1 18                      		bne	.L92
 536:../kernel/tkernel/deviceio.c **** 		ercd = E_LIMIT;
 1534                             		.loc 2 536 8
 1535 09b2 F9 A6 01 DE             		mov.L	#-34, 4[r10]
 537:../kernel/tkernel/deviceio.c **** 		goto err_ret1;
 1536                             		.loc 2 537 3
 1537 09b6 38 43 01                		bra	.L91
 1538                             	.L92:
 538:../kernel/tkernel/deviceio.c **** 	}
 539:../kernel/tkernel/deviceio.c **** 
 540:../kernel/tkernel/deviceio.c **** 	/* Set request packet */
 541:../kernel/tkernel/deviceio.c **** 	reqcb->req.next   = NULL;
 1539                             		.loc 2 541 20
 1540 09b9 ED A5 05                		mov.L	20[r10], r5
 1541 09bc 3E 54 00                		mov.L	#0, 16[r5]
 542:../kernel/tkernel/deviceio.c **** 	reqcb->req.exinf  = NULL;
 1542                             		.loc 2 542 20
 1543 09bf ED A5 05                		mov.L	20[r10], r5
 1544 09c2 3E 55 00                		mov.L	#0, 20[r5]
 543:../kernel/tkernel/deviceio.c **** 	reqcb->req.devid  = DEVID(devcb, opncb->unitno);
 1545                             		.loc 2 543 22
 1546 09c5 ED A5 02                		mov.L	8[r10], r5
 1547 09c8 FB 72 00 00 00 00       		mov.L	#_knl_DevCBtbl, r7
 1548 09ce 43 75                   		sub	r7, r5
 1549 09d0 6A 35                   		shar	#3, r5
 1550 09d2 74 15 39 8E E3 38       		mul	#0x38e38e39, r5
 1551 09d8 62 15                   		add	#1, r5
 1552 09da 6C 85                   		shll	#8, r5
 1553 09dc ED A4 06                		mov.L	24[r10], r4
 1554 09df A9 C4                   		mov.L	24[r4], r4
 1555 09e1 4B 54                   		add	r5, r4
 1556                             		.loc 2 543 20
 1557 09e3 ED A5 05                		mov.L	20[r10], r5
 1558 09e6 A1 D4                   		mov.L	r4, 24[r5]
 544:../kernel/tkernel/deviceio.c **** 	reqcb->req.cmd    = cmd;
 1559                             		.loc 2 544 20
 1560 09e8 A8 6D                   		mov.L	4[r6], r5
 1561 09ea 6C 45                   		shll	#4, r5
 1562 09ec CF 55                   		mov.B	r5, r5
 1563 09ee 6A 45                   		shar	#4, r5
 1564 09f0 ED A4 05                		mov.L	20[r10], r4
 1565 09f3 66 F2                   		mov.L	#15, r2
 1566 09f5 53 52                   		and	r5, r2
 1567 09f7 8F 45                   		mov.B	28[r4], r5
 1568 09f9 75 25 F0                		and	#-16, r5
 1569 09fc CF 53                   		mov.B	r5, r3
 1570 09fe CF 25                   		mov.B	r2, r5
 1571 0a00 57 35                   		or	r3, r5
 1572 0a02 87 45                   		mov.B	r5, 28[r4]
 545:../kernel/tkernel/deviceio.c **** 	reqcb->req.abort  = FALSE;
 1573                             		.loc 2 545 20
 1574 0a04 ED A4 05                		mov.L	20[r10], r4
 1575 0a07 8F 45                   		mov.B	28[r4], r5
 1576 0a09 7A 45                   		bclr	#4, r5
 1577 0a0b 87 45                   		mov.B	r5, 28[r4]
 546:../kernel/tkernel/deviceio.c **** 	reqcb->req.start  = start;
 1578                             		.loc 2 546 20
 1579 0a0d ED A5 05                		mov.L	20[r10], r5
 1580 0a10 ED A4 08                		mov.L	32[r10], r4
 1581 0a13 A2 54                   		mov.L	r4, 32[r5]
 547:../kernel/tkernel/deviceio.c **** 	reqcb->req.size   = size;
 1582                             		.loc 2 547 20
 1583 0a15 ED A5 05                		mov.L	20[r10], r5
 1584 0a18 ED A4 0A                		mov.L	40[r10], r4
 1585 0a1b A2 5C                   		mov.L	r4, 36[r5]
 548:../kernel/tkernel/deviceio.c **** 	reqcb->req.buf    = buf;
 1586                             		.loc 2 548 20
 1587 0a1d ED A5 05                		mov.L	20[r10], r5
 1588 0a20 ED A4 09                		mov.L	36[r10], r4
 1589 0a23 A2 D4                   		mov.L	r4, 40[r5]
 549:../kernel/tkernel/deviceio.c **** 	reqcb->req.asize  = 0;
 1590                             		.loc 2 549 20
 1591 0a25 ED A5 05                		mov.L	20[r10], r5
 1592 0a28 3E 5B 00                		mov.L	#0, 44[r5]
 550:../kernel/tkernel/deviceio.c **** 	reqcb->req.error  = 0;
 1593                             		.loc 2 550 20
 1594 0a2b ED A5 05                		mov.L	20[r10], r5
 1595 0a2e 3E 5C 00                		mov.L	#0, 48[r5]
 551:../kernel/tkernel/deviceio.c **** 
 552:../kernel/tkernel/deviceio.c **** 	/* Indicate that it is during processing */
 553:../kernel/tkernel/deviceio.c **** 	reqcb->tskid = tk_get_tid();
 1596                             		.loc 2 553 17
 1597 0a31 05 00 00 00             		bsr	_tk_get_tid
 1598 0a35 EF 14                   		mov.L	r1, r4
 1599                             		.loc 2 553 15
 1600 0a37 ED A5 05                		mov.L	20[r10], r5
 1601 0a3a A0 DC                   		mov.L	r4, 12[r5]
 554:../kernel/tkernel/deviceio.c **** 
 555:../kernel/tkernel/deviceio.c **** 	UnlockDM();
 1602                             		.loc 2 555 2
 1603 0a3c 66 02                   		mov.L	#0, r2
 1604 0a3e FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 1605 0a44 05 00 00 00             		bsr	_MUnlock
 556:../kernel/tkernel/deviceio.c **** 
 557:../kernel/tkernel/deviceio.c **** 	/* Device driver call */
 558:../kernel/tkernel/deviceio.c **** 	DISABLE_INTERRUPT;
 1606                             		.loc 2 558 2
 1607 0a48 05 00 00 00             		bsr	_disint
 559:../kernel/tkernel/deviceio.c **** 	knl_ctxtsk->sysmode++;
 1608                             		.loc 2 559 12
 1609 0a4c FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 1610 0a52 EC 55                   		mov.L	[r5], r5
 1611 0a54 9C 5C                   		mov.W	34[r5], r4
 1612                             		.loc 2 559 21
 1613 0a56 62 14                   		add	#1, r4
 1614 0a58 94 5C                   		mov.W	r4, 34[r5]
 560:../kernel/tkernel/deviceio.c **** 	ENABLE_INTERRUPT;
 1615                             		.loc 2 560 2
 1616 0a5a 66 01                   		mov.L	#0, r1
 1617 0a5c 05 00 00 00             		bsr	_setint
 561:../kernel/tkernel/deviceio.c **** 	ercd = (*execfn)(&reqcb->req, tmout, exinf);
 1618                             		.loc 2 561 10
 1619 0a60 ED A5 05                		mov.L	20[r10], r5
 1620 0a63 71 54 10                		add	#16, r5, r4
 1621 0a66 ED A5 03                		mov.L	12[r10], r5
 1622 0a69 ED A3 04                		mov.L	16[r10], r3
 1623 0a6c EC 62                   		mov.L	[r6], r2
 1624 0a6e EF 41                   		mov.L	r4, r1
 1625 0a70 7F 15                   		jsr	r5
 1626                             	.LVL5:
 1627 0a72 E7 A1 01                		mov.L	r1, 4[r10]
 562:../kernel/tkernel/deviceio.c **** 	DISABLE_INTERRUPT;
 1628                             		.loc 2 562 2
 1629 0a75 05 00 00 00             		bsr	_disint
 563:../kernel/tkernel/deviceio.c **** 	knl_ctxtsk->sysmode--;
 1630                             		.loc 2 563 12
 1631 0a79 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 1632 0a7f EC 55                   		mov.L	[r5], r5
 1633 0a81 9C 5C                   		mov.W	34[r5], r4
 1634                             		.loc 2 563 21
 1635 0a83 60 14                   		sub	#1, r4
 1636 0a85 94 5C                   		mov.W	r4, 34[r5]
 564:../kernel/tkernel/deviceio.c **** 	ENABLE_INTERRUPT;
 1637                             		.loc 2 564 2
 1638 0a87 66 01                   		mov.L	#0, r1
 1639 0a89 05 00 00 00             		bsr	_setint
 565:../kernel/tkernel/deviceio.c **** 
 566:../kernel/tkernel/deviceio.c **** 	LockDM();
 1640                             		.loc 2 566 2
 1641 0a8d 66 02                   		mov.L	#0, r2
 1642 0a8f FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 1643 0a95 05 00 00 00             		bsr	_MLock
 567:../kernel/tkernel/deviceio.c **** 
 568:../kernel/tkernel/deviceio.c **** 	/* Indicate that it is not during processing */
 569:../kernel/tkernel/deviceio.c **** 	reqcb->tskid = 0;
 1644                             		.loc 2 569 15
 1645 0a99 ED A5 05                		mov.L	20[r10], r5
 1646 0a9c 3E 53 00                		mov.L	#0, 12[r5]
 570:../kernel/tkernel/deviceio.c **** 
 571:../kernel/tkernel/deviceio.c **** 	/* If there is an abort completion wait task,
 572:../kernel/tkernel/deviceio.c **** 	   notify abort completion */
 573:../kernel/tkernel/deviceio.c **** 	if ( opncb->abort_tskid > 0 && --opncb->abort_cnt == 0 ) {
 1647                             		.loc 2 573 12
 1648 0a9f ED A5 06                		mov.L	24[r10], r5
 1649 0aa2 AB 5D                   		mov.L	52[r5], r5
 1650                             		.loc 2 573 5
 1651 0aa4 61 05                   		cmp	#0, r5
 1652 0aa6 2B 1E                   		ble	.L93
 1653                             		.loc 2 573 40 discriminator 1
 1654 0aa8 ED A5 06                		mov.L	24[r10], r5
 1655 0aab AB D4                   		mov.L	56[r5], r4
 1656                             		.loc 2 573 33 discriminator 1
 1657 0aad 60 14                   		sub	#1, r4
 1658                             		.loc 2 573 30 discriminator 1
 1659 0aaf A3 D4                   		mov.L	r4, 56[r5]
 1660                             		.loc 2 573 40 discriminator 1
 1661 0ab1 AB D5                   		mov.L	56[r5], r5
 1662                             		.loc 2 573 30 discriminator 1
 1663 0ab3 61 05                   		cmp	#0, r5
 1664 0ab5 21 0F                   		bne	.L93
 574:../kernel/tkernel/deviceio.c **** 		tk_sig_sem(opncb->abort_semid, 1);
 1665                             		.loc 2 574 19
 1666 0ab7 ED A5 06                		mov.L	24[r10], r5
 1667                             		.loc 2 574 3
 1668 0aba AB DD                   		mov.L	60[r5], r5
 1669 0abc 66 12                   		mov.L	#1, r2
 1670 0abe EF 51                   		mov.L	r5, r1
 1671 0ac0 05 00 00 00             		bsr	_tk_sig_sem
 1672                             	.L93:
 575:../kernel/tkernel/deviceio.c **** 	}
 576:../kernel/tkernel/deviceio.c **** 
 577:../kernel/tkernel/deviceio.c **** 	if ( ercd < E_OK ) {
 1673                             		.loc 2 577 5
 1674 0ac4 ED A5 01                		mov.L	4[r10], r5
 1675 0ac7 61 05                   		cmp	#0, r5
 1676 0ac9 29 25                   		blt	.L100
 578:../kernel/tkernel/deviceio.c **** 		goto err_ret2;
 579:../kernel/tkernel/deviceio.c **** 	}
 580:../kernel/tkernel/deviceio.c **** 
 581:../kernel/tkernel/deviceio.c **** 	UnlockDM();
 1677                             		.loc 2 581 2
 1678 0acb 66 02                   		mov.L	#0, r2
 1679 0acd FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 1680 0ad3 05 00 00 00             		bsr	_MUnlock
 582:../kernel/tkernel/deviceio.c **** 
 583:../kernel/tkernel/deviceio.c **** 	return REQID(reqcb);
 1681                             		.loc 2 583 9
 1682 0ad7 ED A5 05                		mov.L	20[r10], r5
 1683 0ada FB 72 00 00 00 00       		mov.L	#_knl_ReqCBtbl, r7
 1684 0ae0 43 75                   		sub	r7, r5
 1685 0ae2 6A 25                   		shar	#2, r5
 1686 0ae4 74 15 C5 4E EC C4       		mul	#-991146299, r5
 1687 0aea 62 15                   		add	#1, r5
 1688 0aec 2E 1C                   		bra	.L97
 1689                             	.L100:
 578:../kernel/tkernel/deviceio.c **** 		goto err_ret2;
 1690                             		.loc 2 578 3
 1691 0aee 03                      		nop
 1692                             	.L95:
 584:../kernel/tkernel/deviceio.c **** 
 585:../kernel/tkernel/deviceio.c **** err_ret2:
 586:../kernel/tkernel/deviceio.c **** 	knl_delReqCB(reqcb);
 1693                             		.loc 2 586 2
 1694 0aef ED A1 05                		mov.L	20[r10], r1
 1695 0af2 05 00 00 00             		bsr	_knl_delReqCB
 1696 0af6 2E 03                   		bra	.L91
 1697                             	.L99:
 526:../kernel/tkernel/deviceio.c **** 	}
 1698                             		.loc 2 526 3
 1699 0af8 03                      		nop
 1700                             	.L91:
 587:../kernel/tkernel/deviceio.c **** err_ret1:
 588:../kernel/tkernel/deviceio.c **** 	UnlockDM();
 1701                             		.loc 2 588 2
 1702 0af9 66 02                   		mov.L	#0, r2
 1703 0afb FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 1704 0b01 05 00 00 00             		bsr	_MUnlock
 589:../kernel/tkernel/deviceio.c **** 	return ercd;
 1705                             		.loc 2 589 9
 1706 0b05 ED A5 01                		mov.L	4[r10], r5
 1707                             	.L97:
 590:../kernel/tkernel/deviceio.c **** }
 1708                             		.loc 2 590 1 discriminator 1
 1709 0b08 EF 51                   		mov.L	r5, r1
 1710 0b0a 3F 6A 12                		rtsd	#72, r6-r10
 1711                             	.LFE33:
 1713                             		.global	_tk_rea_dev
 1715                             	_tk_rea_dev:
 1716                             	.LFB34:
 591:../kernel/tkernel/deviceio.c **** 
 592:../kernel/tkernel/deviceio.c **** /*
 593:../kernel/tkernel/deviceio.c ****  * Start reading from device
 594:../kernel/tkernel/deviceio.c ****  */
 595:../kernel/tkernel/deviceio.c **** SYSCALL ID tk_rea_dev( ID dd, W start, void *buf, SZ size, TMO tmout )
 596:../kernel/tkernel/deviceio.c **** {
 1717                             		.loc 2 596 1
 1718 0b0d 7E AA                   		push.l	r10
 1719                             	.LCFI36:
 1720 0b0f 71 0A E8                		add	#-24, r0, r10
 1721                             	.LCFI37:
 1722 0b12 71 A0 F8                		add	#-8, r10, r0
 1723                             	.LCFI38:
 1724 0b15 75 45 20                		mov.L	#32, r5
 1725 0b18 4B A5                   		add	r10, r5
 1726 0b1a E7 A1 01                		mov.L	r1, 4[r10]
 1727 0b1d E7 A2 02                		mov.L	r2, 8[r10]
 1728 0b20 E7 A3 03                		mov.L	r3, 12[r10]
 1729 0b23 E7 A4 04                		mov.L	r4, 16[r10]
 597:../kernel/tkernel/deviceio.c **** 	ER	ercd;
 598:../kernel/tkernel/deviceio.c **** 
 599:../kernel/tkernel/deviceio.c **** 	ercd = knl_request(dd, start, buf, size, tmout, TDC_READ);
 1730                             		.loc 2 599 9
 1731 0b26 3E 01 01                		mov.L	#1, 4[r0]
 1732 0b29 EC 55                   		mov.L	[r5], r5
 1733 0b2b E3 05                   		mov.L	r5, [r0]
 1734 0b2d ED A4 04                		mov.L	16[r10], r4
 1735 0b30 ED A3 03                		mov.L	12[r10], r3
 1736 0b33 ED A2 02                		mov.L	8[r10], r2
 1737 0b36 ED A1 01                		mov.L	4[r10], r1
 1738 0b39 05 00 00 00             		bsr	_knl_request
 1739 0b3d E3 A1                   		mov.L	r1, [r10]
 600:../kernel/tkernel/deviceio.c **** 
 601:../kernel/tkernel/deviceio.c **** 	return ercd;
 1740                             		.loc 2 601 9
 1741 0b3f EC A5                   		mov.L	[r10], r5
 602:../kernel/tkernel/deviceio.c **** }
 1742                             		.loc 2 602 1
 1743 0b41 EF 51                   		mov.L	r5, r1
 1744 0b43 3F AA 09                		rtsd	#36, r10-r10
 1745                             	.LFE34:
 1747                             		.global	_tk_srea_dev
 1749                             	_tk_srea_dev:
 1750                             	.LFB35:
 603:../kernel/tkernel/deviceio.c **** 
 604:../kernel/tkernel/deviceio.c **** /*
 605:../kernel/tkernel/deviceio.c ****  * Synchronous reading from device
 606:../kernel/tkernel/deviceio.c ****  */
 607:../kernel/tkernel/deviceio.c **** SYSCALL ER tk_srea_dev( ID dd, W start, void *buf, SZ size, SZ *asize )
 608:../kernel/tkernel/deviceio.c **** {
 1751                             		.loc 2 608 1
 1752 0b46 7E AA                   		push.l	r10
 1753                             	.LCFI39:
 1754 0b48 7E A6                   		push.l	r6
 1755                             	.LCFI40:
 1756 0b4a 71 0A E4                		add	#-28, r0, r10
 1757                             	.LCFI41:
 1758 0b4d 71 A0 FC                		add	#-4, r10, r0
 1759                             	.LCFI42:
 1760 0b50 75 46 28                		mov.L	#40, r6
 1761 0b53 4B A6                   		add	r10, r6
 1762 0b55 E7 A1 02                		mov.L	r1, 8[r10]
 1763 0b58 E7 A2 03                		mov.L	r2, 12[r10]
 1764 0b5b E7 A3 04                		mov.L	r3, 16[r10]
 1765 0b5e E7 A4 05                		mov.L	r4, 20[r10]
 609:../kernel/tkernel/deviceio.c **** 	ER	ercd, ioercd;
 610:../kernel/tkernel/deviceio.c **** 
 611:../kernel/tkernel/deviceio.c **** 	ercd = tk_rea_dev(dd, start, buf, size, TMO_FEVR);
 1766                             		.loc 2 611 9
 1767 0b61 F8 06 FF                		mov.L	#-1, [r0]
 1768 0b64 ED A4 05                		mov.L	20[r10], r4
 1769 0b67 ED A3 04                		mov.L	16[r10], r3
 1770 0b6a ED A2 03                		mov.L	12[r10], r2
 1771 0b6d ED A1 02                		mov.L	8[r10], r1
 1772 0b70 05 00 00 00             		bsr	_tk_rea_dev
 1773 0b74 E3 A1                   		mov.L	r1, [r10]
 612:../kernel/tkernel/deviceio.c **** 	if ( ercd < E_OK ) {
 1774                             		.loc 2 612 5
 1775 0b76 EC A5                   		mov.L	[r10], r5
 1776 0b78 61 05                   		cmp	#0, r5
 1777 0b7a 29 21                   		blt	.L109
 613:../kernel/tkernel/deviceio.c **** 		goto err_ret;
 614:../kernel/tkernel/deviceio.c **** 	}
 615:../kernel/tkernel/deviceio.c **** 
 616:../kernel/tkernel/deviceio.c **** 	ercd = tk_wai_dev(dd, ercd, asize, &ioercd, TMO_FEVR);
 1778                             		.loc 2 616 9
 1779 0b7c 71 A5 04                		add	#4, r10, r5
 1780 0b7f F8 06 FF                		mov.L	#-1, [r0]
 1781 0b82 EF 54                   		mov.L	r5, r4
 1782 0b84 EC 63                   		mov.L	[r6], r3
 1783 0b86 EC A2                   		mov.L	[r10], r2
 1784 0b88 ED A1 02                		mov.L	8[r10], r1
 1785 0b8b 05 00 00 00             		bsr	_tk_wai_dev
 1786 0b8f E3 A1                   		mov.L	r1, [r10]
 617:../kernel/tkernel/deviceio.c **** 	if ( ercd < E_OK ) {
 1787                             		.loc 2 617 5
 1788 0b91 EC A5                   		mov.L	[r10], r5
 1789 0b93 61 05                   		cmp	#0, r5
 1790 0b95 29 09                   		blt	.L110
 618:../kernel/tkernel/deviceio.c **** 		goto err_ret;
 619:../kernel/tkernel/deviceio.c **** 	}
 620:../kernel/tkernel/deviceio.c **** 
 621:../kernel/tkernel/deviceio.c **** 	return ioercd;
 1791                             		.loc 2 621 9
 1792 0b97 ED A5 01                		mov.L	4[r10], r5
 1793 0b9a 0F                      		bra	.L108
 1794                             	.L109:
 613:../kernel/tkernel/deviceio.c **** 	}
 1795                             		.loc 2 613 3
 1796 0b9b 03                      		nop
 1797 0b9c 2E 03                   		bra	.L105
 1798                             	.L110:
 618:../kernel/tkernel/deviceio.c **** 		goto err_ret;
 1799                             		.loc 2 618 3
 1800 0b9e 03                      		nop
 1801                             	.L105:
 622:../kernel/tkernel/deviceio.c **** 
 623:../kernel/tkernel/deviceio.c **** err_ret:
 624:../kernel/tkernel/deviceio.c **** 	return ercd;
 1802                             		.loc 2 624 9
 1803 0b9f EC A5                   		mov.L	[r10], r5
 1804                             	.L108:
 625:../kernel/tkernel/deviceio.c **** }
 1805                             		.loc 2 625 1 discriminator 1
 1806 0ba1 EF 51                   		mov.L	r5, r1
 1807 0ba3 71 00 20                		add	#32, r0
 1808 0ba6 7E B6                   		pop	r6
 1809 0ba8 7E BA                   		pop	r10
 1810 0baa 02                      		rts
 1811                             	.LFE35:
 1813                             		.global	_tk_wri_dev
 1815                             	_tk_wri_dev:
 1816                             	.LFB36:
 626:../kernel/tkernel/deviceio.c **** 
 627:../kernel/tkernel/deviceio.c **** /*
 628:../kernel/tkernel/deviceio.c ****  * Start writing to device
 629:../kernel/tkernel/deviceio.c ****  */
 630:../kernel/tkernel/deviceio.c **** SYSCALL ID tk_wri_dev( ID dd, W start, CONST void *buf, SZ size, TMO tmout )
 631:../kernel/tkernel/deviceio.c **** {
 1817                             		.loc 2 631 1
 1818 0bab 7E AA                   		push.l	r10
 1819                             	.LCFI43:
 1820 0bad 71 0A E8                		add	#-24, r0, r10
 1821                             	.LCFI44:
 1822 0bb0 71 A0 F8                		add	#-8, r10, r0
 1823                             	.LCFI45:
 1824 0bb3 75 45 20                		mov.L	#32, r5
 1825 0bb6 4B A5                   		add	r10, r5
 1826 0bb8 E7 A1 01                		mov.L	r1, 4[r10]
 1827 0bbb E7 A2 02                		mov.L	r2, 8[r10]
 1828 0bbe E7 A3 03                		mov.L	r3, 12[r10]
 1829 0bc1 E7 A4 04                		mov.L	r4, 16[r10]
 632:../kernel/tkernel/deviceio.c **** 	ER	ercd;
 633:../kernel/tkernel/deviceio.c **** 
 634:../kernel/tkernel/deviceio.c **** 	ercd = knl_request(dd, start, (void *)buf, size, tmout, TDC_WRITE);
 1830                             		.loc 2 634 9
 1831 0bc4 3E 01 02                		mov.L	#2, 4[r0]
 1832 0bc7 EC 55                   		mov.L	[r5], r5
 1833 0bc9 E3 05                   		mov.L	r5, [r0]
 1834 0bcb ED A4 04                		mov.L	16[r10], r4
 1835 0bce ED A3 03                		mov.L	12[r10], r3
 1836 0bd1 ED A2 02                		mov.L	8[r10], r2
 1837 0bd4 ED A1 01                		mov.L	4[r10], r1
 1838 0bd7 05 00 00 00             		bsr	_knl_request
 1839 0bdb E3 A1                   		mov.L	r1, [r10]
 635:../kernel/tkernel/deviceio.c **** 
 636:../kernel/tkernel/deviceio.c **** 	return ercd;
 1840                             		.loc 2 636 9
 1841 0bdd EC A5                   		mov.L	[r10], r5
 637:../kernel/tkernel/deviceio.c **** }
 1842                             		.loc 2 637 1
 1843 0bdf EF 51                   		mov.L	r5, r1
 1844 0be1 3F AA 09                		rtsd	#36, r10-r10
 1845                             	.LFE36:
 1847                             		.global	_tk_swri_dev
 1849                             	_tk_swri_dev:
 1850                             	.LFB37:
 638:../kernel/tkernel/deviceio.c **** 
 639:../kernel/tkernel/deviceio.c **** /*
 640:../kernel/tkernel/deviceio.c ****  * Synchronous writing to device
 641:../kernel/tkernel/deviceio.c ****  */
 642:../kernel/tkernel/deviceio.c **** SYSCALL ER tk_swri_dev( ID dd, W start, CONST void *buf, SZ size, SZ *asize )
 643:../kernel/tkernel/deviceio.c **** {
 1851                             		.loc 2 643 1
 1852 0be4 7E AA                   		push.l	r10
 1853                             	.LCFI46:
 1854 0be6 7E A6                   		push.l	r6
 1855                             	.LCFI47:
 1856 0be8 71 0A E4                		add	#-28, r0, r10
 1857                             	.LCFI48:
 1858 0beb 71 A0 FC                		add	#-4, r10, r0
 1859                             	.LCFI49:
 1860 0bee 75 46 28                		mov.L	#40, r6
 1861 0bf1 4B A6                   		add	r10, r6
 1862 0bf3 E7 A1 02                		mov.L	r1, 8[r10]
 1863 0bf6 E7 A2 03                		mov.L	r2, 12[r10]
 1864 0bf9 E7 A3 04                		mov.L	r3, 16[r10]
 1865 0bfc E7 A4 05                		mov.L	r4, 20[r10]
 644:../kernel/tkernel/deviceio.c **** 	ER	ercd, ioercd;
 645:../kernel/tkernel/deviceio.c **** 
 646:../kernel/tkernel/deviceio.c **** 	ercd = tk_wri_dev(dd, start, buf, size, TMO_FEVR);
 1866                             		.loc 2 646 9
 1867 0bff F8 06 FF                		mov.L	#-1, [r0]
 1868 0c02 ED A4 05                		mov.L	20[r10], r4
 1869 0c05 ED A3 04                		mov.L	16[r10], r3
 1870 0c08 ED A2 03                		mov.L	12[r10], r2
 1871 0c0b ED A1 02                		mov.L	8[r10], r1
 1872 0c0e 05 00 00 00             		bsr	_tk_wri_dev
 1873 0c12 E3 A1                   		mov.L	r1, [r10]
 647:../kernel/tkernel/deviceio.c **** 	if ( ercd < E_OK ) {
 1874                             		.loc 2 647 5
 1875 0c14 EC A5                   		mov.L	[r10], r5
 1876 0c16 61 05                   		cmp	#0, r5
 1877 0c18 29 21                   		blt	.L119
 648:../kernel/tkernel/deviceio.c **** 		goto err_ret;
 649:../kernel/tkernel/deviceio.c **** 	}
 650:../kernel/tkernel/deviceio.c **** 
 651:../kernel/tkernel/deviceio.c **** 	ercd = tk_wai_dev(dd, ercd, asize, &ioercd, TMO_FEVR);
 1878                             		.loc 2 651 9
 1879 0c1a 71 A5 04                		add	#4, r10, r5
 1880 0c1d F8 06 FF                		mov.L	#-1, [r0]
 1881 0c20 EF 54                   		mov.L	r5, r4
 1882 0c22 EC 63                   		mov.L	[r6], r3
 1883 0c24 EC A2                   		mov.L	[r10], r2
 1884 0c26 ED A1 02                		mov.L	8[r10], r1
 1885 0c29 05 00 00 00             		bsr	_tk_wai_dev
 1886 0c2d E3 A1                   		mov.L	r1, [r10]
 652:../kernel/tkernel/deviceio.c **** 	if ( ercd < E_OK ) {
 1887                             		.loc 2 652 5
 1888 0c2f EC A5                   		mov.L	[r10], r5
 1889 0c31 61 05                   		cmp	#0, r5
 1890 0c33 29 09                   		blt	.L120
 653:../kernel/tkernel/deviceio.c **** 		goto err_ret;
 654:../kernel/tkernel/deviceio.c **** 	}
 655:../kernel/tkernel/deviceio.c **** 
 656:../kernel/tkernel/deviceio.c **** 	return ioercd;
 1891                             		.loc 2 656 9
 1892 0c35 ED A5 01                		mov.L	4[r10], r5
 1893 0c38 0F                      		bra	.L118
 1894                             	.L119:
 648:../kernel/tkernel/deviceio.c **** 	}
 1895                             		.loc 2 648 3
 1896 0c39 03                      		nop
 1897 0c3a 2E 03                   		bra	.L115
 1898                             	.L120:
 653:../kernel/tkernel/deviceio.c **** 		goto err_ret;
 1899                             		.loc 2 653 3
 1900 0c3c 03                      		nop
 1901                             	.L115:
 657:../kernel/tkernel/deviceio.c **** 
 658:../kernel/tkernel/deviceio.c **** err_ret:
 659:../kernel/tkernel/deviceio.c **** 	return ercd;
 1902                             		.loc 2 659 9
 1903 0c3d EC A5                   		mov.L	[r10], r5
 1904                             	.L118:
 660:../kernel/tkernel/deviceio.c **** }
 1905                             		.loc 2 660 1 discriminator 1
 1906 0c3f EF 51                   		mov.L	r5, r1
 1907 0c41 71 00 20                		add	#32, r0
 1908 0c44 7E B6                   		pop	r6
 1909 0c46 7E BA                   		pop	r10
 1910 0c48 02                      		rts
 1911                             	.LFE37:
 1914                             	_knl_check_reqid:
 1915                             	.LFB38:
 661:../kernel/tkernel/deviceio.c **** 
 662:../kernel/tkernel/deviceio.c **** /*
 663:../kernel/tkernel/deviceio.c ****  * Verify validity of request ID
 664:../kernel/tkernel/deviceio.c ****  */
 665:../kernel/tkernel/deviceio.c **** LOCAL ReqCB* knl_check_reqid( ID reqid, OpnCB *opncb )
 666:../kernel/tkernel/deviceio.c **** {
 1916                             		.loc 2 666 1
 1917 0c49 7E AA                   		push.l	r10
 1918                             	.LCFI50:
 1919 0c4b 71 0A F4                		add	#-12, r0, r10
 1920                             	.LCFI51:
 1921 0c4e EF A0                   		mov.L	r10, r0
 1922 0c50 E7 A1 01                		mov.L	r1, 4[r10]
 1923 0c53 E7 A2 02                		mov.L	r2, 8[r10]
 667:../kernel/tkernel/deviceio.c **** 	ReqCB	*reqcb;
 668:../kernel/tkernel/deviceio.c **** 
 669:../kernel/tkernel/deviceio.c **** 	if ( reqid < 1 || reqid > MAX_REQDEV ) {
 1924                             		.loc 2 669 5
 1925 0c56 ED A5 01                		mov.L	4[r10], r5
 1926 0c59 61 05                   		cmp	#0, r5
 1927 0c5b 2B 0A                   		ble	.L122
 1928                             		.loc 2 669 17 discriminator 1
 1929 0c5d ED A5 01                		mov.L	4[r10], r5
 1930 0c60 75 55 10                		cmp	#16, r5
 1931 0c63 2B 06                   		ble	.L123
 1932                             	.L122:
 670:../kernel/tkernel/deviceio.c **** 		return NULL;
 1933                             		.loc 2 670 10
 1934 0c65 66 05                   		mov.L	#0, r5
 1935 0c67 2E 22                   		bra	.L124
 1936                             	.L123:
 671:../kernel/tkernel/deviceio.c **** 	}
 672:../kernel/tkernel/deviceio.c **** 	reqcb = REQCB(reqid);
 1937                             		.loc 2 672 10
 1938 0c69 ED A5 01                		mov.L	4[r10], r5
 1939 0c6c 75 15 34                		mul	#52, r5
 1940 0c6f 71 55 CC                		add	#-52, r5
 1941                             		.loc 2 672 8
 1942 0c72 70 55 00 00 00 00       		add	#_knl_ReqCBtbl, r5
 1943 0c78 E3 A5                   		mov.L	r5, [r10]
 673:../kernel/tkernel/deviceio.c **** 	if ( reqcb->opncb != opncb ) {
 1944                             		.loc 2 673 12
 1945 0c7a EC A5                   		mov.L	[r10], r5
 1946 0c7c A8 D5                   		mov.L	8[r5], r5
 1947                             		.loc 2 673 5
 1948 0c7e ED A4 02                		mov.L	8[r10], r4
 1949 0c81 47 54                   		cmp	r5, r4
 1950 0c83 14                      		beq	.L125
 674:../kernel/tkernel/deviceio.c **** 		return NULL;
 1951                             		.loc 2 674 10
 1952 0c84 66 05                   		mov.L	#0, r5
 1953 0c86 0B                      		bra	.L124
 1954                             	.L125:
 675:../kernel/tkernel/deviceio.c **** 	}
 676:../kernel/tkernel/deviceio.c **** 
 677:../kernel/tkernel/deviceio.c **** 	return reqcb;
 1955                             		.loc 2 677 9
 1956 0c87 EC A5                   		mov.L	[r10], r5
 1957                             	.L124:
 678:../kernel/tkernel/deviceio.c **** }
 1958                             		.loc 2 678 1
 1959 0c89 EF 51                   		mov.L	r5, r1
 1960 0c8b 3F AA 04                		rtsd	#16, r10-r10
 1961                             	.LFE38:
 1963                             		.global	_tk_wai_dev
 1965                             	_tk_wai_dev:
 1966                             	.LFB39:
 679:../kernel/tkernel/deviceio.c **** 
 680:../kernel/tkernel/deviceio.c **** /*
 681:../kernel/tkernel/deviceio.c ****  * Request completion wait
 682:../kernel/tkernel/deviceio.c ****  */
 683:../kernel/tkernel/deviceio.c **** SYSCALL ID tk_wai_dev( ID dd, ID reqid, SZ *asize, ER *ioer, TMO tmout )
 684:../kernel/tkernel/deviceio.c **** {
 1967                             		.loc 2 684 1
 1968 0c8e 6E 6A                   		pushm	r6-r10
 1969                             	.LCFI52:
 1970 0c90 71 0A C4                		add	#-60, r0, r10
 1971                             	.LCFI53:
 1972 0c93 EF A0                   		mov.L	r10, r0
 1973 0c95 75 46 54                		mov.L	#0x54, r6
 1974 0c98 4B A6                   		add	r10, r6
 1975 0c9a E7 A1 0A                		mov.L	r1, 40[r10]
 1976 0c9d E7 A2 0B                		mov.L	r2, 44[r10]
 1977 0ca0 E7 A3 0C                		mov.L	r3, 48[r10]
 1978 0ca3 E7 A4 0D                		mov.L	r4, 52[r10]
 685:../kernel/tkernel/deviceio.c **** 	WAIFN	waitfn;
 686:../kernel/tkernel/deviceio.c **** 	void	*exinf;
 687:../kernel/tkernel/deviceio.c **** 	OpnCB	*opncb;
 688:../kernel/tkernel/deviceio.c **** 	DevCB	*devcb;
 689:../kernel/tkernel/deviceio.c **** 	ReqCB	*reqcb;
 690:../kernel/tkernel/deviceio.c **** 	T_DEVREQ *devreq;
 691:../kernel/tkernel/deviceio.c **** 	INT	reqno, nreq;
 692:../kernel/tkernel/deviceio.c **** 	ID	tskid;
 693:../kernel/tkernel/deviceio.c **** 	ER	ercd;
 694:../kernel/tkernel/deviceio.c **** 
 695:../kernel/tkernel/deviceio.c **** 	tskid = tk_get_tid();
 1979                             		.loc 2 695 10
 1980 0ca6 05 00 00 00             		bsr	_tk_get_tid
 1981 0caa E7 A1 05                		mov.L	r1, 20[r10]
 696:../kernel/tkernel/deviceio.c **** 
 697:../kernel/tkernel/deviceio.c **** 	LockDM();
 1982                             		.loc 2 697 2
 1983 0cad 66 02                   		mov.L	#0, r2
 1984 0caf FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 1985 0cb5 05 00 00 00             		bsr	_MLock
 698:../kernel/tkernel/deviceio.c **** 
 699:../kernel/tkernel/deviceio.c **** 	ercd = knl_check_devdesc(dd, 0, &opncb);
 1986                             		.loc 2 699 9
 1987 0cb9 71 A5 24                		add	#36, r10, r5
 1988 0cbc EF 53                   		mov.L	r5, r3
 1989 0cbe 66 02                   		mov.L	#0, r2
 1990 0cc0 ED A1 0A                		mov.L	40[r10], r1
 1991 0cc3 05 00 00 00             		bsr	_knl_check_devdesc
 1992 0cc7 E7 A1 04                		mov.L	r1, 16[r10]
 700:../kernel/tkernel/deviceio.c **** 	if ( ercd < E_OK ) {
 1993                             		.loc 2 700 5
 1994 0cca ED A5 04                		mov.L	16[r10], r5
 1995 0ccd 61 05                   		cmp	#0, r5
 1996 0ccf 28 05 38 3F 02          		blt	.L152
 701:../kernel/tkernel/deviceio.c **** 		goto err_ret2;
 702:../kernel/tkernel/deviceio.c **** 	}
 703:../kernel/tkernel/deviceio.c **** 
 704:../kernel/tkernel/deviceio.c **** 	devcb = opncb->devcb;
 1997                             		.loc 2 704 15
 1998 0cd4 ED A5 09                		mov.L	36[r10], r5
 1999                             		.loc 2 704 8
 2000 0cd7 A9 5D                   		mov.L	20[r5], r5
 2001 0cd9 E7 A5 06                		mov.L	r5, 24[r10]
 705:../kernel/tkernel/deviceio.c **** 	waitfn = (WAIFN)devcb->ddev.waitfn;
 2002                             		.loc 2 705 9
 2003 0cdc ED A5 06                		mov.L	24[r10], r5
 2004 0cdf AB 5D                   		mov.L	52[r5], r5
 2005 0ce1 E7 A5 07                		mov.L	r5, 28[r10]
 706:../kernel/tkernel/deviceio.c **** 	exinf = devcb->ddev.exinf;
 2006                             		.loc 2 706 8
 2007 0ce4 ED A5 06                		mov.L	24[r10], r5
 2008 0ce7 A9 5D                   		mov.L	20[r5], r5
 2009 0ce9 E7 A5 08                		mov.L	r5, 32[r10]
 707:../kernel/tkernel/deviceio.c **** 
 708:../kernel/tkernel/deviceio.c **** 	if ( reqid == 0 ) {
 2010                             		.loc 2 708 5
 2011 0cec ED A5 0B                		mov.L	44[r10], r5
 2012 0cef 61 05                   		cmp	#0, r5
 2013 0cf1 3B 98 00                		bne	.L129
 709:../kernel/tkernel/deviceio.c **** 		/* When waiting for completion of any of requests for 'dd' */
 710:../kernel/tkernel/deviceio.c **** 		if ( opncb->nwaireq > 0 || opncb->waitone > 0 ) {
 2014                             		.loc 2 710 13
 2015 0cf4 ED A5 09                		mov.L	36[r10], r5
 2016 0cf7 AB 55                   		mov.L	48[r5], r5
 2017                             		.loc 2 710 6
 2018 0cf9 61 05                   		cmp	#0, r5
 2019 0cfb 2A 0C                   		bgt	.L130
 2020                             		.loc 2 710 35 discriminator 1
 2021 0cfd ED A5 09                		mov.L	36[r10], r5
 2022 0d00 9D 55                   		mov.W	40[r5], r5
 2023                             		.loc 2 710 27 discriminator 1
 2024 0d02 5F 55                   		movu.W	r5, r5
 2025 0d04 61 05                   		cmp	#0, r5
 2026 0d06 10                      		beq	.L131
 2027                             	.L130:
 711:../kernel/tkernel/deviceio.c **** 			ercd = E_OBJ;
 2028                             		.loc 2 711 9
 2029 0d07 F9 A6 04 D7             		mov.L	#-41, 16[r10]
 712:../kernel/tkernel/deviceio.c **** 			goto err_ret2;
 2030                             		.loc 2 712 4
 2031 0d0b 38 09 02                		bra	.L128
 2032                             	.L131:
 713:../kernel/tkernel/deviceio.c **** 		}
 714:../kernel/tkernel/deviceio.c **** 		if ( isQueEmpty(&opncb->requestq) ) {
 2033                             		.loc 2 714 25
 2034 0d0e ED A5 09                		mov.L	36[r10], r5
 2035                             		.loc 2 714 8
 2036 0d11 71 55 20                		add	#32, r5
 2037 0d14 EF 51                   		mov.L	r5, r1
 2038 0d16 39 03 F3                		bsr	_isQueEmpty
 2039 0d19 EF 15                   		mov.L	r1, r5
 2040                             		.loc 2 714 6
 2041 0d1b 61 05                   		cmp	#0, r5
 2042 0d1d 10                      		beq	.L132
 715:../kernel/tkernel/deviceio.c **** 			ercd = E_NOEXS;
 2043                             		.loc 2 715 9
 2044 0d1e F9 A6 04 D6             		mov.L	#-42, 16[r10]
 716:../kernel/tkernel/deviceio.c **** 			goto err_ret2;
 2045                             		.loc 2 716 4
 2046 0d22 38 F2 01                		bra	.L128
 2047                             	.L132:
 717:../kernel/tkernel/deviceio.c **** 		}
 718:../kernel/tkernel/deviceio.c **** 
 719:../kernel/tkernel/deviceio.c **** 		/* Create wait request list */
 720:../kernel/tkernel/deviceio.c **** 		reqcb = (ReqCB*)opncb->requestq.next;
 2048                             		.loc 2 720 24
 2049 0d25 ED A5 09                		mov.L	36[r10], r5
 2050                             		.loc 2 720 9
 2051 0d28 AA 55                   		mov.L	32[r5], r5
 2052 0d2a E3 A5                   		mov.L	r5, [r10]
 721:../kernel/tkernel/deviceio.c **** 		for ( nreq = 1;; nreq++ ) {
 2053                             		.loc 2 721 14
 2054 0d2c F9 A6 03 01             		mov.L	#1, 12[r10]
 2055                             	.L135:
 722:../kernel/tkernel/deviceio.c **** 			reqcb->tskid = tskid;
 2056                             		.loc 2 722 17
 2057 0d30 EC A5                   		mov.L	[r10], r5
 2058 0d32 ED A4 05                		mov.L	20[r10], r4
 2059 0d35 A0 DC                   		mov.L	r4, 12[r5]
 723:../kernel/tkernel/deviceio.c **** 			devreq = &reqcb->req;
 2060                             		.loc 2 723 11
 2061 0d37 EC A5                   		mov.L	[r10], r5
 2062 0d39 71 55 10                		add	#16, r5
 2063 0d3c E7 A5 01                		mov.L	r5, 4[r10]
 724:../kernel/tkernel/deviceio.c **** 			reqcb = (ReqCB*)reqcb->q.next;
 2064                             		.loc 2 724 10
 2065 0d3f EC A5                   		mov.L	[r10], r5
 2066 0d41 EC 55                   		mov.L	[r5], r5
 2067 0d43 E3 A5                   		mov.L	r5, [r10]
 725:../kernel/tkernel/deviceio.c **** 			if ( reqcb == (ReqCB*)&opncb->requestq ) {
 2068                             		.loc 2 725 32
 2069 0d45 ED A5 09                		mov.L	36[r10], r5
 2070                             		.loc 2 725 26
 2071 0d48 71 55 20                		add	#32, r5
 2072                             		.loc 2 725 7
 2073 0d4b EC A4                   		mov.L	[r10], r4
 2074 0d4d 47 54                   		cmp	r5, r4
 2075 0d4f 20 16                   		beq	.L153
 726:../kernel/tkernel/deviceio.c **** 				break;
 727:../kernel/tkernel/deviceio.c **** 			}
 728:../kernel/tkernel/deviceio.c **** 			devreq->next = &reqcb->req;
 2076                             		.loc 2 728 19
 2077 0d51 EC A5                   		mov.L	[r10], r5
 2078 0d53 71 54 10                		add	#16, r5, r4
 2079                             		.loc 2 728 17
 2080 0d56 ED A5 01                		mov.L	4[r10], r5
 2081 0d59 E3 54                   		mov.L	r4, [r5]
 721:../kernel/tkernel/deviceio.c **** 			reqcb->tskid = tskid;
 2082                             		.loc 2 721 24
 2083 0d5b ED A5 03                		mov.L	12[r10], r5
 2084 0d5e 62 15                   		add	#1, r5
 2085 0d60 E7 A5 03                		mov.L	r5, 12[r10]
 722:../kernel/tkernel/deviceio.c **** 			devreq = &reqcb->req;
 2086                             		.loc 2 722 17
 2087 0d63 2E CD                   		bra	.L135
 2088                             	.L153:
 726:../kernel/tkernel/deviceio.c **** 				break;
 2089                             		.loc 2 726 5
 2090 0d65 03                      		nop
 729:../kernel/tkernel/deviceio.c **** 		}
 730:../kernel/tkernel/deviceio.c **** 		devreq->next = NULL;
 2091                             		.loc 2 730 16
 2092 0d66 ED A5 01                		mov.L	4[r10], r5
 2093 0d69 F8 56 00                		mov.L	#0, [r5]
 731:../kernel/tkernel/deviceio.c **** 		devreq = &((ReqCB*)opncb->requestq.next)->req;
 2094                             		.loc 2 731 27
 2095 0d6c ED A5 09                		mov.L	36[r10], r5
 2096                             		.loc 2 731 37
 2097 0d6f AA 55                   		mov.L	32[r5], r5
 2098                             		.loc 2 731 10
 2099 0d71 71 55 10                		add	#16, r5
 2100 0d74 E7 A5 01                		mov.L	r5, 4[r10]
 732:../kernel/tkernel/deviceio.c **** 
 733:../kernel/tkernel/deviceio.c **** 		opncb->waireqlst = devreq;
 2101                             		.loc 2 733 8
 2102 0d77 ED A5 09                		mov.L	36[r10], r5
 2103                             		.loc 2 733 20
 2104 0d7a ED A4 01                		mov.L	4[r10], r4
 2105 0d7d A2 DC                   		mov.L	r4, 44[r5]
 734:../kernel/tkernel/deviceio.c **** 		opncb->nwaireq = nreq;
 2106                             		.loc 2 734 8
 2107 0d7f ED A5 09                		mov.L	36[r10], r5
 2108                             		.loc 2 734 18
 2109 0d82 ED A4 03                		mov.L	12[r10], r4
 2110 0d85 A3 54                   		mov.L	r4, 48[r5]
 2111 0d87 2E 55                   		bra	.L136
 2112                             	.L129:
 735:../kernel/tkernel/deviceio.c **** 	} else {
 736:../kernel/tkernel/deviceio.c **** 		/* Wait for completion of abort request processing */
 737:../kernel/tkernel/deviceio.c **** 		reqcb = knl_check_reqid(reqid, opncb);
 2113                             		.loc 2 737 11
 2114 0d89 ED A5 09                		mov.L	36[r10], r5
 2115 0d8c EF 52                   		mov.L	r5, r2
 2116 0d8e ED A1 0B                		mov.L	44[r10], r1
 2117 0d91 39 B8 FE                		bsr	_knl_check_reqid
 2118 0d94 E3 A1                   		mov.L	r1, [r10]
 738:../kernel/tkernel/deviceio.c **** 		if ( reqcb == NULL ) {
 2119                             		.loc 2 738 6
 2120 0d96 EC A5                   		mov.L	[r10], r5
 2121 0d98 61 05                   		cmp	#0, r5
 2122 0d9a 18                      		bne	.L137
 739:../kernel/tkernel/deviceio.c **** 			ercd = E_ID;
 2123                             		.loc 2 739 9
 2124 0d9b F9 A6 04 EE             		mov.L	#-18, 16[r10]
 740:../kernel/tkernel/deviceio.c **** 			goto err_ret2;
 2125                             		.loc 2 740 4
 2126 0d9f 38 75 01                		bra	.L128
 2127                             	.L137:
 741:../kernel/tkernel/deviceio.c **** 		}
 742:../kernel/tkernel/deviceio.c **** 		if ( opncb->nwaireq > 0 || reqcb->tskid > 0 ) {
 2128                             		.loc 2 742 13
 2129 0da2 ED A5 09                		mov.L	36[r10], r5
 2130 0da5 AB 55                   		mov.L	48[r5], r5
 2131                             		.loc 2 742 6
 2132 0da7 61 05                   		cmp	#0, r5
 2133 0da9 2A 0A                   		bgt	.L138
 2134                             		.loc 2 742 35 discriminator 1
 2135 0dab EC A5                   		mov.L	[r10], r5
 2136 0dad A8 DD                   		mov.L	12[r5], r5
 2137                             		.loc 2 742 27 discriminator 1
 2138 0daf 61 05                   		cmp	#0, r5
 2139 0db1 2B 09                   		ble	.L139
 2140                             	.L138:
 743:../kernel/tkernel/deviceio.c **** 			ercd = E_OBJ;
 2141                             		.loc 2 743 9
 2142 0db3 F9 A6 04 D7             		mov.L	#-41, 16[r10]
 744:../kernel/tkernel/deviceio.c **** 			goto err_ret2;
 2143                             		.loc 2 744 4
 2144 0db7 38 5D 01                		bra	.L128
 2145                             	.L139:
 745:../kernel/tkernel/deviceio.c **** 		}
 746:../kernel/tkernel/deviceio.c **** 
 747:../kernel/tkernel/deviceio.c **** 		/* Create waiting request list */
 748:../kernel/tkernel/deviceio.c **** 		reqcb->tskid = tskid;
 2146                             		.loc 2 748 16
 2147 0dba EC A5                   		mov.L	[r10], r5
 2148 0dbc ED A4 05                		mov.L	20[r10], r4
 2149 0dbf A0 DC                   		mov.L	r4, 12[r5]
 749:../kernel/tkernel/deviceio.c **** 		devreq = &reqcb->req;
 2150                             		.loc 2 749 10
 2151 0dc1 EC A5                   		mov.L	[r10], r5
 2152 0dc3 71 55 10                		add	#16, r5
 2153 0dc6 E7 A5 01                		mov.L	r5, 4[r10]
 750:../kernel/tkernel/deviceio.c **** 		devreq->next = NULL;
 2154                             		.loc 2 750 16
 2155 0dc9 ED A5 01                		mov.L	4[r10], r5
 2156 0dcc F8 56 00                		mov.L	#0, [r5]
 751:../kernel/tkernel/deviceio.c **** 		nreq = 1;
 2157                             		.loc 2 751 8
 2158 0dcf F9 A6 03 01             		mov.L	#1, 12[r10]
 752:../kernel/tkernel/deviceio.c **** 
 753:../kernel/tkernel/deviceio.c **** 		opncb->waitone++;
 2159                             		.loc 2 753 8
 2160 0dd3 ED A5 09                		mov.L	36[r10], r5
 2161 0dd6 9D 54                   		mov.W	40[r5], r4
 2162                             		.loc 2 753 17
 2163 0dd8 62 14                   		add	#1, r4
 2164 0dda 95 54                   		mov.W	r4, 40[r5]
 2165                             	.L136:
 754:../kernel/tkernel/deviceio.c **** 	}
 755:../kernel/tkernel/deviceio.c **** 
 756:../kernel/tkernel/deviceio.c **** 	UnlockDM();
 2166                             		.loc 2 756 2
 2167 0ddc 66 02                   		mov.L	#0, r2
 2168 0dde FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 2169 0de4 05 00 00 00             		bsr	_MUnlock
 757:../kernel/tkernel/deviceio.c **** 
 758:../kernel/tkernel/deviceio.c **** 	/* Device driver call */
 759:../kernel/tkernel/deviceio.c **** 	DISABLE_INTERRUPT;
 2170                             		.loc 2 759 2
 2171 0de8 05 00 00 00             		bsr	_disint
 760:../kernel/tkernel/deviceio.c **** 	knl_ctxtsk->sysmode++;
 2172                             		.loc 2 760 12
 2173 0dec FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 2174 0df2 EC 55                   		mov.L	[r5], r5
 2175 0df4 9C 5C                   		mov.W	34[r5], r4
 2176                             		.loc 2 760 21
 2177 0df6 62 14                   		add	#1, r4
 2178 0df8 94 5C                   		mov.W	r4, 34[r5]
 761:../kernel/tkernel/deviceio.c **** 	ENABLE_INTERRUPT;
 2179                             		.loc 2 761 2
 2180 0dfa 66 01                   		mov.L	#0, r1
 2181 0dfc 05 00 00 00             		bsr	_setint
 762:../kernel/tkernel/deviceio.c **** 	reqno = (*waitfn)(devreq, nreq, tmout, exinf);
 2182                             		.loc 2 762 11
 2183 0e00 ED A5 07                		mov.L	28[r10], r5
 2184 0e03 ED A4 08                		mov.L	32[r10], r4
 2185 0e06 EC 63                   		mov.L	[r6], r3
 2186 0e08 ED A2 03                		mov.L	12[r10], r2
 2187 0e0b ED A1 01                		mov.L	4[r10], r1
 2188 0e0e 7F 15                   		jsr	r5
 2189                             	.LVL6:
 2190 0e10 E7 A1 02                		mov.L	r1, 8[r10]
 763:../kernel/tkernel/deviceio.c **** 	DISABLE_INTERRUPT;
 2191                             		.loc 2 763 2
 2192 0e13 05 00 00 00             		bsr	_disint
 764:../kernel/tkernel/deviceio.c **** 	knl_ctxtsk->sysmode--;
 2193                             		.loc 2 764 12
 2194 0e17 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 2195 0e1d EC 55                   		mov.L	[r5], r5
 2196 0e1f 9C 5C                   		mov.W	34[r5], r4
 2197                             		.loc 2 764 21
 2198 0e21 60 14                   		sub	#1, r4
 2199 0e23 94 5C                   		mov.W	r4, 34[r5]
 765:../kernel/tkernel/deviceio.c **** 	ENABLE_INTERRUPT;
 2200                             		.loc 2 765 2
 2201 0e25 66 01                   		mov.L	#0, r1
 2202 0e27 05 00 00 00             		bsr	_setint
 766:../kernel/tkernel/deviceio.c **** 
 767:../kernel/tkernel/deviceio.c **** 	if ( reqno <  E_OK ) {
 2203                             		.loc 2 767 5
 2204 0e2b ED A5 02                		mov.L	8[r10], r5
 2205 0e2e 61 05                   		cmp	#0, r5
 2206 0e30 28 08                   		bge	.L140
 768:../kernel/tkernel/deviceio.c **** 		ercd = reqno;
 2207                             		.loc 2 768 8
 2208 0e32 ED A5 02                		mov.L	8[r10], r5
 2209 0e35 E7 A5 04                		mov.L	r5, 16[r10]
 2210                             	.L140:
 769:../kernel/tkernel/deviceio.c **** 	}
 770:../kernel/tkernel/deviceio.c **** 	if ( reqno >= nreq ) {
 2211                             		.loc 2 770 5
 2212 0e38 ED A4 02                		mov.L	8[r10], r4
 2213 0e3b ED A5 03                		mov.L	12[r10], r5
 2214 0e3e 47 54                   		cmp	r5, r4
 2215 0e40 29 06                   		blt	.L141
 771:../kernel/tkernel/deviceio.c **** 		ercd = E_SYS;
 2216                             		.loc 2 771 8
 2217 0e42 F9 A6 04 FB             		mov.L	#-5, 16[r10]
 2218                             	.L141:
 772:../kernel/tkernel/deviceio.c **** 	}
 773:../kernel/tkernel/deviceio.c **** 
 774:../kernel/tkernel/deviceio.c **** 	LockDM();
 2219                             		.loc 2 774 2
 2220 0e46 66 02                   		mov.L	#0, r2
 2221 0e48 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 2222 0e4e 05 00 00 00             		bsr	_MLock
 775:../kernel/tkernel/deviceio.c **** 
 776:../kernel/tkernel/deviceio.c **** 	/* Free wait processing */
 777:../kernel/tkernel/deviceio.c **** 	if ( reqid == 0 ) {
 2223                             		.loc 2 777 5
 2224 0e52 ED A5 0B                		mov.L	44[r10], r5
 2225 0e55 61 05                   		cmp	#0, r5
 2226 0e57 18                      		bne	.L142
 778:../kernel/tkernel/deviceio.c **** 		opncb->nwaireq = 0;
 2227                             		.loc 2 778 8
 2228 0e58 ED A5 09                		mov.L	36[r10], r5
 2229                             		.loc 2 778 18
 2230 0e5b 3E 5C 00                		mov.L	#0, 48[r5]
 2231 0e5e 0A                      		bra	.L143
 2232                             	.L142:
 779:../kernel/tkernel/deviceio.c **** 	} else {
 780:../kernel/tkernel/deviceio.c **** 		opncb->waitone--;
 2233                             		.loc 2 780 8
 2234 0e5f ED A5 09                		mov.L	36[r10], r5
 2235 0e62 9D 54                   		mov.W	40[r5], r4
 2236                             		.loc 2 780 17
 2237 0e64 60 14                   		sub	#1, r4
 2238 0e66 95 54                   		mov.W	r4, 40[r5]
 2239                             	.L143:
 781:../kernel/tkernel/deviceio.c **** 	}
 782:../kernel/tkernel/deviceio.c **** 
 783:../kernel/tkernel/deviceio.c **** 	/* If there is an abort completion wait task,
 784:../kernel/tkernel/deviceio.c **** 	   notify abort completion */
 785:../kernel/tkernel/deviceio.c **** 	if ( opncb->abort_tskid > 0 && --opncb->abort_cnt == 0 ) {
 2240                             		.loc 2 785 12
 2241 0e68 ED A5 09                		mov.L	36[r10], r5
 2242 0e6b AB 5D                   		mov.L	52[r5], r5
 2243                             		.loc 2 785 5
 2244 0e6d 61 05                   		cmp	#0, r5
 2245 0e6f 2B 6D                   		ble	.L145
 2246                             		.loc 2 785 40 discriminator 1
 2247 0e71 ED A5 09                		mov.L	36[r10], r5
 2248 0e74 AB D4                   		mov.L	56[r5], r4
 2249                             		.loc 2 785 33 discriminator 1
 2250 0e76 60 14                   		sub	#1, r4
 2251                             		.loc 2 785 30 discriminator 1
 2252 0e78 A3 D4                   		mov.L	r4, 56[r5]
 2253                             		.loc 2 785 40 discriminator 1
 2254 0e7a AB D5                   		mov.L	56[r5], r5
 2255                             		.loc 2 785 30 discriminator 1
 2256 0e7c 61 05                   		cmp	#0, r5
 2257 0e7e 21 5E                   		bne	.L145
 786:../kernel/tkernel/deviceio.c **** 		tk_sig_sem(opncb->abort_semid, 1);
 2258                             		.loc 2 786 19
 2259 0e80 ED A5 09                		mov.L	36[r10], r5
 2260                             		.loc 2 786 3
 2261 0e83 AB DD                   		mov.L	60[r5], r5
 2262 0e85 66 12                   		mov.L	#1, r2
 2263 0e87 EF 51                   		mov.L	r5, r1
 2264 0e89 05 00 00 00             		bsr	_tk_sig_sem
 787:../kernel/tkernel/deviceio.c **** 	}
 788:../kernel/tkernel/deviceio.c **** 
 789:../kernel/tkernel/deviceio.c **** 	/* Get processing result */
 790:../kernel/tkernel/deviceio.c **** 	while ( devreq != NULL ) {
 2265                             		.loc 2 790 8
 2266 0e8d 2E 4F                   		bra	.L145
 2267                             	.L147:
 791:../kernel/tkernel/deviceio.c **** 		reqcb = DEVREQ_REQCB(devreq);
 2268                             		.loc 2 791 9
 2269 0e8f ED A5 01                		mov.L	4[r10], r5
 2270 0e92 71 55 F0                		add	#-16, r5
 2271 0e95 E3 A5                   		mov.L	r5, [r10]
 792:../kernel/tkernel/deviceio.c **** 		if ( reqno-- == 0 ) {
 2272                             		.loc 2 792 13
 2273 0e97 ED A5 02                		mov.L	8[r10], r5
 2274 0e9a 71 54 FF                		add	#-1, r5, r4
 2275 0e9d E7 A4 02                		mov.L	r4, 8[r10]
 2276                             		.loc 2 792 6
 2277 0ea0 61 05                   		cmp	#0, r5
 2278 0ea2 21 2D                   		bne	.L146
 793:../kernel/tkernel/deviceio.c **** 			reqid = REQID(reqcb);
 2279                             		.loc 2 793 12
 2280 0ea4 EC A5                   		mov.L	[r10], r5
 2281 0ea6 FB 72 00 00 00 00       		mov.L	#_knl_ReqCBtbl, r7
 2282 0eac 43 75                   		sub	r7, r5
 2283 0eae 6A 25                   		shar	#2, r5
 2284 0eb0 74 15 C5 4E EC C4       		mul	#-991146299, r5
 2285                             		.loc 2 793 10
 2286 0eb6 62 15                   		add	#1, r5
 2287 0eb8 E7 A5 0B                		mov.L	r5, 44[r10]
 794:../kernel/tkernel/deviceio.c **** 			*asize = devreq->asize;
 2288                             		.loc 2 794 19
 2289 0ebb ED A5 01                		mov.L	4[r10], r5
 2290 0ebe A9 DC                   		mov.L	28[r5], r4
 2291                             		.loc 2 794 11
 2292 0ec0 ED A5 0C                		mov.L	48[r10], r5
 2293 0ec3 E3 54                   		mov.L	r4, [r5]
 795:../kernel/tkernel/deviceio.c **** 			*ioer  = devreq->error;
 2294                             		.loc 2 795 19
 2295 0ec5 ED A5 01                		mov.L	4[r10], r5
 2296 0ec8 AA 54                   		mov.L	32[r5], r4
 2297                             		.loc 2 795 11
 2298 0eca ED A5 0D                		mov.L	52[r10], r5
 2299 0ecd E3 54                   		mov.L	r4, [r5]
 2300                             	.L146:
 796:../kernel/tkernel/deviceio.c **** 		}
 797:../kernel/tkernel/deviceio.c **** 		reqcb->tskid = 0;
 2301                             		.loc 2 797 16
 2302 0ecf EC A5                   		mov.L	[r10], r5
 2303 0ed1 3E 53 00                		mov.L	#0, 12[r5]
 798:../kernel/tkernel/deviceio.c **** 		devreq = devreq->next;
 2304                             		.loc 2 798 10
 2305 0ed4 ED A5 01                		mov.L	4[r10], r5
 2306 0ed7 EC 55                   		mov.L	[r5], r5
 2307 0ed9 E7 A5 01                		mov.L	r5, 4[r10]
 2308                             		.balign 8,3,1
 2309                             	.L145:
 790:../kernel/tkernel/deviceio.c **** 		reqcb = DEVREQ_REQCB(devreq);
 2310                             		.loc 2 790 8
 2311 0edc ED A5 01                		mov.L	4[r10], r5
 2312 0edf 61 05                   		cmp	#0, r5
 2313 0ee1 21 AE                   		bne	.L147
 799:../kernel/tkernel/deviceio.c **** 	}
 800:../kernel/tkernel/deviceio.c **** 
 801:../kernel/tkernel/deviceio.c **** 	if ( ercd < E_OK ) {
 2314                             		.loc 2 801 5
 2315 0ee3 ED A5 04                		mov.L	16[r10], r5
 2316 0ee6 61 05                   		cmp	#0, r5
 2317 0ee8 29 2B                   		blt	.L154
 802:../kernel/tkernel/deviceio.c **** 		goto err_ret2;
 803:../kernel/tkernel/deviceio.c **** 	}
 804:../kernel/tkernel/deviceio.c **** 
 805:../kernel/tkernel/deviceio.c **** 	/* Unregister completed request */
 806:../kernel/tkernel/deviceio.c **** 	knl_delReqCB(REQCB(reqid));
 2318                             		.loc 2 806 15
 2319 0eea ED A5 0B                		mov.L	44[r10], r5
 2320 0eed 75 15 34                		mul	#52, r5
 2321 0ef0 71 55 CC                		add	#-52, r5
 2322                             		.loc 2 806 2
 2323 0ef3 70 55 00 00 00 00       		add	#_knl_ReqCBtbl, r5
 2324 0ef9 EF 51                   		mov.L	r5, r1
 2325 0efb 05 00 00 00             		bsr	_knl_delReqCB
 807:../kernel/tkernel/deviceio.c **** 
 808:../kernel/tkernel/deviceio.c **** 	UnlockDM();
 2326                             		.loc 2 808 2
 2327 0eff 66 02                   		mov.L	#0, r2
 2328 0f01 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 2329 0f07 05 00 00 00             		bsr	_MUnlock
 809:../kernel/tkernel/deviceio.c **** 
 810:../kernel/tkernel/deviceio.c **** 	return reqid;
 2330                             		.loc 2 810 9
 2331 0f0b ED A5 0B                		mov.L	44[r10], r5
 2332 0f0e 2E 15                   		bra	.L150
 2333                             	.L152:
 701:../kernel/tkernel/deviceio.c **** 	}
 2334                             		.loc 2 701 3
 2335 0f10 03                      		nop
 2336 0f11 2E 03                   		bra	.L128
 2337                             	.L154:
 802:../kernel/tkernel/deviceio.c **** 	}
 2338                             		.loc 2 802 3
 2339 0f13 03                      		nop
 2340                             		.balign 8,3,1
 2341                             	.L128:
 811:../kernel/tkernel/deviceio.c **** 
 812:../kernel/tkernel/deviceio.c **** err_ret2:
 813:../kernel/tkernel/deviceio.c **** 	UnlockDM();
 2342                             		.loc 2 813 2
 2343 0f14 66 02                   		mov.L	#0, r2
 2344 0f16 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 2345 0f1c 05 00 00 00             		bsr	_MUnlock
 814:../kernel/tkernel/deviceio.c **** 	return ercd;
 2346                             		.loc 2 814 9
 2347 0f20 ED A5 04                		mov.L	16[r10], r5
 2348                             	.L150:
 815:../kernel/tkernel/deviceio.c **** }
 2349                             		.loc 2 815 1 discriminator 1
 2350 0f23 EF 51                   		mov.L	r5, r1
 2351 0f25 3F 6A 14                		rtsd	#80, r6-r10
 2352                             	.LFE39:
 2354                             		.global	_knl_DisSusCnt
 2355                             		.section B,"w",@nobits
 2356                             		.p2align 2
 2357                             		.balign 4
 2360                             	_knl_DisSusCnt:
 2361 0000 00 00 00 00             		.zero	4
 2362                             		.section P,"ax"
 2364                             	_sendevt_alldevice:
 2365                             	.LFB40:
 816:../kernel/tkernel/deviceio.c **** 
 817:../kernel/tkernel/deviceio.c **** /* ------------------------------------------------------------------------ */
 818:../kernel/tkernel/deviceio.c **** 
 819:../kernel/tkernel/deviceio.c **** /* Suspend disable request count */
 820:../kernel/tkernel/deviceio.c **** EXPORT INT	knl_DisSusCnt = 0;
 821:../kernel/tkernel/deviceio.c **** 
 822:../kernel/tkernel/deviceio.c **** /*
 823:../kernel/tkernel/deviceio.c ****  * Send driver request event to each device
 824:../kernel/tkernel/deviceio.c ****  */
 825:../kernel/tkernel/deviceio.c **** LOCAL ER sendevt_alldevice( INT evttyp, BOOL disk )
 826:../kernel/tkernel/deviceio.c **** {
 2366                             		.loc 2 826 1
 2367 0f28 7E AA                   		push.l	r10
 2368                             	.LCFI54:
 2369 0f2a 71 0A E4                		add	#-28, r0, r10
 2370                             	.LCFI55:
 2371 0f2d EF A0                   		mov.L	r10, r0
 2372 0f2f E7 A1 05                		mov.L	r1, 20[r10]
 2373 0f32 E7 A2 06                		mov.L	r2, 24[r10]
 827:../kernel/tkernel/deviceio.c **** 	EVTFN	eventfn;
 828:../kernel/tkernel/deviceio.c **** 	QUEUE	*q;
 829:../kernel/tkernel/deviceio.c **** 	DevCB	*devcb;
 830:../kernel/tkernel/deviceio.c **** 	BOOL	d;
 831:../kernel/tkernel/deviceio.c **** 	ER	ercd = E_OK;
 2374                             		.loc 2 831 5
 2375 0f35 F9 A6 01 00             		mov.L	#0, 4[r10]
 832:../kernel/tkernel/deviceio.c **** 
 833:../kernel/tkernel/deviceio.c **** 	for ( q = knl_UsedDevCB.next; q != &knl_UsedDevCB; q = q->next ) {
 2376                             		.loc 2 833 10
 2377 0f39 FB 52 00 00 00 00       		mov.L	#_knl_UsedDevCB, r5
 2378 0f3f EC 55                   		mov.L	[r5], r5
 2379 0f41 E3 A5                   		mov.L	r5, [r10]
 2380                             		.loc 2 833 2
 2381 0f43 2E 7A                   		bra	.L156
 2382                             	.L159:
 834:../kernel/tkernel/deviceio.c **** 		devcb = (DevCB*)q;
 2383                             		.loc 2 834 9
 2384 0f45 EC A5                   		mov.L	[r10], r5
 2385 0f47 E7 A5 02                		mov.L	r5, 8[r10]
 835:../kernel/tkernel/deviceio.c **** 
 836:../kernel/tkernel/deviceio.c **** 		d = ( (devcb->ddev.devatr & TD_DEVTYPE) == TDK_DISK )?
 2386                             		.loc 2 836 21
 2387 0f4a ED A5 02                		mov.L	8[r10], r5
 2388 0f4d A9 DD                   		mov.L	28[r5], r5
 2389                             		.loc 2 836 29
 2390 0f4f 76 25 F0 00             		and	#0xf0, r5
 837:../kernel/tkernel/deviceio.c **** 							TRUE: FALSE;
 2391                             		.loc 2 837 12
 2392 0f53 75 55 10                		cmp	#16, r5
 2393 0f56 FC DB 50                		sceq.L	r5
 836:../kernel/tkernel/deviceio.c **** 							TRUE: FALSE;
 2394                             		.loc 2 836 5
 2395 0f59 5B 55                   		movu.B	r5, r5
 2396 0f5b E7 A5 03                		mov.L	r5, 12[r10]
 838:../kernel/tkernel/deviceio.c **** 		if ( disk != d ) {
 2397                             		.loc 2 838 6
 2398 0f5e ED A4 06                		mov.L	24[r10], r4
 2399 0f61 ED A5 03                		mov.L	12[r10], r5
 2400 0f64 47 54                   		cmp	r5, r4
 2401 0f66 21 50                   		bne	.L161
 839:../kernel/tkernel/deviceio.c **** 			continue;
 840:../kernel/tkernel/deviceio.c **** 		}
 841:../kernel/tkernel/deviceio.c **** 
 842:../kernel/tkernel/deviceio.c **** 		/* Device driver call */
 843:../kernel/tkernel/deviceio.c **** 		eventfn = (EVTFN)devcb->ddev.eventfn;
 2402                             		.loc 2 843 11
 2403 0f68 ED A5 02                		mov.L	8[r10], r5
 2404 0f6b AB DD                   		mov.L	60[r5], r5
 2405 0f6d E7 A5 04                		mov.L	r5, 16[r10]
 844:../kernel/tkernel/deviceio.c **** 		DISABLE_INTERRUPT;
 2406                             		.loc 2 844 3
 2407 0f70 05 00 00 00             		bsr	_disint
 845:../kernel/tkernel/deviceio.c **** 		knl_ctxtsk->sysmode++;
 2408                             		.loc 2 845 13
 2409 0f74 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 2410 0f7a EC 55                   		mov.L	[r5], r5
 2411 0f7c 9C 5C                   		mov.W	34[r5], r4
 2412                             		.loc 2 845 22
 2413 0f7e 62 14                   		add	#1, r4
 2414 0f80 94 5C                   		mov.W	r4, 34[r5]
 846:../kernel/tkernel/deviceio.c **** 		ENABLE_INTERRUPT;
 2415                             		.loc 2 846 3
 2416 0f82 66 01                   		mov.L	#0, r1
 2417 0f84 05 00 00 00             		bsr	_setint
 847:../kernel/tkernel/deviceio.c **** 		ercd = (*eventfn)(evttyp, NULL, devcb->ddev.exinf);
 2418                             		.loc 2 847 11
 2419 0f88 ED A5 02                		mov.L	8[r10], r5
 2420 0f8b A9 5C                   		mov.L	20[r5], r4
 2421 0f8d ED A5 04                		mov.L	16[r10], r5
 2422 0f90 EF 43                   		mov.L	r4, r3
 2423 0f92 66 02                   		mov.L	#0, r2
 2424 0f94 ED A1 05                		mov.L	20[r10], r1
 2425 0f97 7F 15                   		jsr	r5
 2426                             	.LVL7:
 2427 0f99 E7 A1 01                		mov.L	r1, 4[r10]
 848:../kernel/tkernel/deviceio.c **** 		DISABLE_INTERRUPT;
 2428                             		.loc 2 848 3
 2429 0f9c 05 00 00 00             		bsr	_disint
 849:../kernel/tkernel/deviceio.c **** 		knl_ctxtsk->sysmode--;
 2430                             		.loc 2 849 13
 2431 0fa0 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 2432 0fa6 EC 55                   		mov.L	[r5], r5
 2433 0fa8 9C 5C                   		mov.W	34[r5], r4
 2434                             		.loc 2 849 22
 2435 0faa 60 14                   		sub	#1, r4
 2436 0fac 94 5C                   		mov.W	r4, 34[r5]
 850:../kernel/tkernel/deviceio.c **** 		ENABLE_INTERRUPT;
 2437                             		.loc 2 850 3
 2438 0fae 66 01                   		mov.L	#0, r1
 2439 0fb0 05 00 00 00             		bsr	_setint
 2440 0fb4 2E 03                   		bra	.L158
 2441                             	.L161:
 839:../kernel/tkernel/deviceio.c **** 		}
 2442                             		.loc 2 839 4
 2443 0fb6 03                      		nop
 2444                             	.L158:
 833:../kernel/tkernel/deviceio.c **** 		devcb = (DevCB*)q;
 2445                             		.loc 2 833 55 discriminator 2
 2446 0fb7 EC A5                   		mov.L	[r10], r5
 2447 0fb9 EC 55                   		mov.L	[r5], r5
 2448 0fbb E3 A5                   		mov.L	r5, [r10]
 2449                             	.L156:
 833:../kernel/tkernel/deviceio.c **** 		devcb = (DevCB*)q;
 2450                             		.loc 2 833 2 discriminator 1
 2451 0fbd EC A5                   		mov.L	[r10], r5
 2452 0fbf 74 05 00 00 00 00       		cmp	#_knl_UsedDevCB, r5
 2453 0fc5 21 80                   		bne	.L159
 851:../kernel/tkernel/deviceio.c **** 	}
 852:../kernel/tkernel/deviceio.c **** 
 853:../kernel/tkernel/deviceio.c **** 	return ercd;
 2454                             		.loc 2 853 9
 2455 0fc7 ED A5 01                		mov.L	4[r10], r5
 854:../kernel/tkernel/deviceio.c **** }
 2456                             		.loc 2 854 1
 2457 0fca EF 51                   		mov.L	r5, r1
 2458 0fcc 3F AA 08                		rtsd	#32, r10-r10
 2459                             	.LFE40:
 2462                             	_do_suspend:
 2463                             	.LFB41:
 855:../kernel/tkernel/deviceio.c **** 
 856:../kernel/tkernel/deviceio.c **** /*
 857:../kernel/tkernel/deviceio.c ****  * Suspend
 858:../kernel/tkernel/deviceio.c ****  */
 859:../kernel/tkernel/deviceio.c **** LOCAL ER do_suspend( void )
 860:../kernel/tkernel/deviceio.c **** {
 2464                             		.loc 2 860 1
 2465 0fcf 7E AA                   		push.l	r10
 2466                             	.LCFI56:
 2467 0fd1 71 0A FC                		add	#-4, r0, r10
 2468                             	.LCFI57:
 2469 0fd4 EF A0                   		mov.L	r10, r0
 861:../kernel/tkernel/deviceio.c **** 	ER	ercd;
 862:../kernel/tkernel/deviceio.c **** 
 863:../kernel/tkernel/deviceio.c **** 	/* Stop accepting device registration/unregistration */
 864:../kernel/tkernel/deviceio.c **** 	LockREG();
 2470                             		.loc 2 864 2
 2471 0fd6 66 12                   		mov.L	#1, r2
 2472 0fd8 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 2473 0fde 05 00 00 00             		bsr	_MLock
 865:../kernel/tkernel/deviceio.c **** 
 866:../kernel/tkernel/deviceio.c **** 	/* Suspend processing of device except for disks */
 867:../kernel/tkernel/deviceio.c **** 	ercd = sendevt_alldevice(TDV_SUSPEND, FALSE);
 2474                             		.loc 2 867 9
 2475 0fe2 66 02                   		mov.L	#0, r2
 2476 0fe4 FB 16 FF                		mov.L	#-1, r1
 2477 0fe7 39 41 FF                		bsr	_sendevt_alldevice
 2478 0fea E3 A1                   		mov.L	r1, [r10]
 868:../kernel/tkernel/deviceio.c **** 
 869:../kernel/tkernel/deviceio.c **** 	/* Suspend processing of disk device */
 870:../kernel/tkernel/deviceio.c **** 	ercd = sendevt_alldevice(TDV_SUSPEND, TRUE);
 2479                             		.loc 2 870 9
 2480 0fec 66 12                   		mov.L	#1, r2
 2481 0fee FB 16 FF                		mov.L	#-1, r1
 2482 0ff1 39 37 FF                		bsr	_sendevt_alldevice
 2483 0ff4 E3 A1                   		mov.L	r1, [r10]
 871:../kernel/tkernel/deviceio.c **** 
 872:../kernel/tkernel/deviceio.c **** 	/* Stop accepting new requests */
 873:../kernel/tkernel/deviceio.c **** 	LockDM();
 2484                             		.loc 2 873 2
 2485 0ff6 66 02                   		mov.L	#0, r2
 2486 0ff8 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 2487 0ffe 05 00 00 00             		bsr	_MLock
 874:../kernel/tkernel/deviceio.c **** 
 875:../kernel/tkernel/deviceio.c **** 	/*
 876:../kernel/tkernel/deviceio.c **** 	 * Insert code to transit to suspend state here
 877:../kernel/tkernel/deviceio.c **** 	 */
 878:../kernel/tkernel/deviceio.c **** 
 879:../kernel/tkernel/deviceio.c **** 	/*
 880:../kernel/tkernel/deviceio.c **** 	 * Insert code executed on returning from suspend state
 881:../kernel/tkernel/deviceio.c **** 	 */
 882:../kernel/tkernel/deviceio.c **** 
 883:../kernel/tkernel/deviceio.c **** 
 884:../kernel/tkernel/deviceio.c **** 	/* Resume accepting requests */
 885:../kernel/tkernel/deviceio.c **** 	UnlockDM();
 2488                             		.loc 2 885 2
 2489 1002 66 02                   		mov.L	#0, r2
 2490 1004 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 2491 100a 05 00 00 00             		bsr	_MUnlock
 886:../kernel/tkernel/deviceio.c **** 
 887:../kernel/tkernel/deviceio.c **** 	/* Resume processing of disk device */
 888:../kernel/tkernel/deviceio.c **** 	ercd = sendevt_alldevice(TDV_RESUME, TRUE);
 2492                             		.loc 2 888 9
 2493 100e 66 12                   		mov.L	#1, r2
 2494 1010 FB 16 FE                		mov.L	#-2, r1
 2495 1013 39 15 FF                		bsr	_sendevt_alldevice
 2496 1016 E3 A1                   		mov.L	r1, [r10]
 889:../kernel/tkernel/deviceio.c **** 
 890:../kernel/tkernel/deviceio.c **** 	/* Resume processing of device except for disks */
 891:../kernel/tkernel/deviceio.c **** 	ercd = sendevt_alldevice(TDV_RESUME, FALSE);
 2497                             		.loc 2 891 9
 2498 1018 66 02                   		mov.L	#0, r2
 2499 101a FB 16 FE                		mov.L	#-2, r1
 2500 101d 39 0B FF                		bsr	_sendevt_alldevice
 2501 1020 E3 A1                   		mov.L	r1, [r10]
 892:../kernel/tkernel/deviceio.c **** 
 893:../kernel/tkernel/deviceio.c **** 	/* Resume accepting device registration/unregistration */
 894:../kernel/tkernel/deviceio.c **** 	UnlockREG();
 2502                             		.loc 2 894 2
 2503 1022 66 12                   		mov.L	#1, r2
 2504 1024 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 2505 102a 05 00 00 00             		bsr	_MUnlock
 895:../kernel/tkernel/deviceio.c **** 
 896:../kernel/tkernel/deviceio.c **** 	return ercd;
 2506                             		.loc 2 896 9
 2507 102e EC A5                   		mov.L	[r10], r5
 897:../kernel/tkernel/deviceio.c **** }
 2508                             		.loc 2 897 1
 2509 1030 EF 51                   		mov.L	r5, r1
 2510 1032 3F AA 02                		rtsd	#8, r10-r10
 2511                             	.LFE41:
 2513                             		.global	_tk_sus_dev
 2515                             	_tk_sus_dev:
 2516                             	.LFB42:
 898:../kernel/tkernel/deviceio.c **** 
 899:../kernel/tkernel/deviceio.c **** /*
 900:../kernel/tkernel/deviceio.c ****  * Suspend processing
 901:../kernel/tkernel/deviceio.c ****  */
 902:../kernel/tkernel/deviceio.c **** SYSCALL INT tk_sus_dev( UINT mode )
 903:../kernel/tkernel/deviceio.c **** {
 2517                             		.loc 2 903 1
 2518 1035 7E AA                   		push.l	r10
 2519                             	.LCFI58:
 2520 1037 71 0A F0                		add	#-16, r0, r10
 2521                             	.LCFI59:
 2522 103a EF A0                   		mov.L	r10, r0
 2523 103c E7 A1 03                		mov.L	r1, 12[r10]
 904:../kernel/tkernel/deviceio.c **** 	ResCB	*rescb;
 905:../kernel/tkernel/deviceio.c **** 	BOOL	suspend = FALSE;
 2524                             		.loc 2 905 7
 2525 103f F8 A6 00                		mov.L	#0, [r10]
 906:../kernel/tkernel/deviceio.c **** 	ER	ercd;
 907:../kernel/tkernel/deviceio.c **** 
 908:../kernel/tkernel/deviceio.c **** 	/* Get resource management information */
 909:../kernel/tkernel/deviceio.c **** 	rescb = knl_GetResCB();
 2526                             		.loc 2 909 10
 2527 1042 05 00 00 00             		bsr	_knl_GetResCB
 2528 1046 E7 A1 02                		mov.L	r1, 8[r10]
 910:../kernel/tkernel/deviceio.c **** 	if ( rescb == NULL ) {
 2529                             		.loc 2 910 5
 2530 1049 ED A5 02                		mov.L	8[r10], r5
 2531 104c 61 05                   		cmp	#0, r5
 2532 104e 18                      		bne	.L165
 911:../kernel/tkernel/deviceio.c **** 		ercd = E_CTX;
 2533                             		.loc 2 911 8
 2534 104f F9 A6 01 E7             		mov.L	#-25, 4[r10]
 912:../kernel/tkernel/deviceio.c **** 		goto err_ret1;
 2535                             		.loc 2 912 3
 2536 1053 38 F6 00                		bra	.L166
 2537                             	.L165:
 913:../kernel/tkernel/deviceio.c **** 	}
 914:../kernel/tkernel/deviceio.c **** 
 915:../kernel/tkernel/deviceio.c **** 	LockDM();
 2538                             		.loc 2 915 2
 2539 1056 66 02                   		mov.L	#0, r2
 2540 1058 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 2541 105e 05 00 00 00             		bsr	_MLock
 916:../kernel/tkernel/deviceio.c **** 
 917:../kernel/tkernel/deviceio.c **** 	switch ( mode & 0xf ) {
 2542                             		.loc 2 917 16
 2543 1062 ED A5 03                		mov.L	12[r10], r5
 2544 1065 64 F5                   		and	#15, r5
 2545                             		.loc 2 917 2
 2546 1067 61 25                   		cmp	#2, r5
 2547 1069 20 3C                   		beq	.L167
 2548 106b 61 25                   		cmp	#2, r5
 2549 106d 24 09                   		bgtu	.L168
 2550 106f 61 15                   		cmp	#1, r5
 2551 1071 20 11                   		beq	.L169
 2552 1073 38 94 00                		bra	.L170
 2553                             	.L168:
 2554 1076 61 35                   		cmp	#3, r5
 2555 1078 20 65                   		beq	.L171
 2556 107a 61 45                   		cmp	#4, r5
 2557 107c 3A 91 00                		beq	.L180
 2558 107f 38 88 00                		bra	.L170
 2559                             	.L169:
 918:../kernel/tkernel/deviceio.c **** 	  case TD_SUSPEND:	/* Suspend */
 919:../kernel/tkernel/deviceio.c **** 		if ( knl_DisSusCnt > 0 && (mode & TD_FORCE) == 0 ) {
 2560                             		.loc 2 919 22
 2561 1082 FB 52 00 00 00 00       		mov.L	#_knl_DisSusCnt, r5
 2562 1088 EC 55                   		mov.L	[r5], r5
 2563                             		.loc 2 919 6
 2564 108a 61 05                   		cmp	#0, r5
 2565 108c 2B 14                   		ble	.L173
 2566                             		.loc 2 919 35 discriminator 1
 2567 108e ED A5 03                		mov.L	12[r10], r5
 2568 1091 77 25 00 80 00          		and	#0x8000, r5
 2569                             		.loc 2 919 26 discriminator 1
 2570 1096 61 05                   		cmp	#0, r5
 2571 1098 18                      		bne	.L173
 920:../kernel/tkernel/deviceio.c **** 			ercd = E_BUSY;
 2572                             		.loc 2 920 9
 2573 1099 F9 A6 01 BF             		mov.L	#-65, 4[r10]
 921:../kernel/tkernel/deviceio.c **** 			goto err_ret2;
 2574                             		.loc 2 921 4
 2575 109d 38 9D 00                		bra	.L174
 2576                             	.L173:
 922:../kernel/tkernel/deviceio.c **** 		}
 923:../kernel/tkernel/deviceio.c **** 		suspend = TRUE;
 2577                             		.loc 2 923 11
 2578 10a0 F8 A6 01                		mov.L	#1, [r10]
 924:../kernel/tkernel/deviceio.c **** 		break;
 2579                             		.loc 2 924 3
 2580 10a3 2E 6E                   		bra	.L175
 2581                             	.L167:
 925:../kernel/tkernel/deviceio.c **** 
 926:../kernel/tkernel/deviceio.c **** 	  case TD_DISSUS:	/* Disable suspend */
 927:../kernel/tkernel/deviceio.c **** 		if ( knl_DisSusCnt >= MAX_DISSUS ) {
 2582                             		.loc 2 927 22
 2583 10a5 FB 52 00 00 00 00       		mov.L	#_knl_DisSusCnt, r5
 2584 10ab EC 55                   		mov.L	[r5], r5
 2585                             		.loc 2 927 6
 2586 10ad 74 05 FF FF FF 7F       		cmp	#0x7fffffff, r5
 2587 10b3 18                      		bne	.L176
 928:../kernel/tkernel/deviceio.c **** 			ercd = E_QOVR;
 2588                             		.loc 2 928 9
 2589 10b4 F9 A6 01 D5             		mov.L	#-43, 4[r10]
 929:../kernel/tkernel/deviceio.c **** 			goto err_ret2;
 2590                             		.loc 2 929 4
 2591 10b8 38 82 00                		bra	.L174
 2592                             	.L176:
 930:../kernel/tkernel/deviceio.c **** 		}
 931:../kernel/tkernel/deviceio.c **** 		knl_DisSusCnt++;
 2593                             		.loc 2 931 16
 2594 10bb FB 52 00 00 00 00       		mov.L	#_knl_DisSusCnt, r5
 2595 10c1 EC 55                   		mov.L	[r5], r5
 2596 10c3 71 54 01                		add	#1, r5, r4
 2597 10c6 FB 52 00 00 00 00       		mov.L	#_knl_DisSusCnt, r5
 2598 10cc E3 54                   		mov.L	r4, [r5]
 932:../kernel/tkernel/deviceio.c **** 		rescb->dissus++;
 2599                             		.loc 2 932 8
 2600 10ce ED A5 02                		mov.L	8[r10], r5
 2601 10d1 A8 D5                   		mov.L	8[r5], r5
 2602                             		.loc 2 932 16
 2603 10d3 71 54 01                		add	#1, r5, r4
 2604 10d6 ED A5 02                		mov.L	8[r10], r5
 2605 10d9 A0 D4                   		mov.L	r4, 8[r5]
 933:../kernel/tkernel/deviceio.c **** 		break;
 2606                             		.loc 2 933 3
 2607 10db 2E 36                   		bra	.L175
 2608                             	.L171:
 934:../kernel/tkernel/deviceio.c **** 	  case TD_ENASUS:	/* Enable suspend */
 935:../kernel/tkernel/deviceio.c **** 		if ( rescb->dissus > 0 ) {
 2609                             		.loc 2 935 13
 2610 10dd ED A5 02                		mov.L	8[r10], r5
 2611 10e0 A8 D5                   		mov.L	8[r5], r5
 2612                             		.loc 2 935 6
 2613 10e2 61 05                   		cmp	#0, r5
 2614 10e4 2B 2C                   		ble	.L181
 936:../kernel/tkernel/deviceio.c **** 			rescb->dissus--;
 2615                             		.loc 2 936 9
 2616 10e6 ED A5 02                		mov.L	8[r10], r5
 2617 10e9 A8 D5                   		mov.L	8[r5], r5
 2618                             		.loc 2 936 17
 2619 10eb 71 54 FF                		add	#-1, r5, r4
 2620 10ee ED A5 02                		mov.L	8[r10], r5
 2621 10f1 A0 D4                   		mov.L	r4, 8[r5]
 937:../kernel/tkernel/deviceio.c **** 			knl_DisSusCnt--;
 2622                             		.loc 2 937 17
 2623 10f3 FB 52 00 00 00 00       		mov.L	#_knl_DisSusCnt, r5
 2624 10f9 EC 55                   		mov.L	[r5], r5
 2625 10fb 71 54 FF                		add	#-1, r5, r4
 2626 10fe FB 52 00 00 00 00       		mov.L	#_knl_DisSusCnt, r5
 2627 1104 E3 54                   		mov.L	r4, [r5]
 938:../kernel/tkernel/deviceio.c **** 		}
 939:../kernel/tkernel/deviceio.c **** 		break;
 2628                             		.loc 2 939 3
 2629 1106 0A                      		bra	.L181
 2630                             	.L170:
 940:../kernel/tkernel/deviceio.c **** 
 941:../kernel/tkernel/deviceio.c **** 	  case TD_CHECK:	/* Get suspend disable request count */
 942:../kernel/tkernel/deviceio.c **** 		break;
 943:../kernel/tkernel/deviceio.c **** 
 944:../kernel/tkernel/deviceio.c **** 	  default:
 945:../kernel/tkernel/deviceio.c **** 		ercd = E_PAR;
 2631                             		.loc 2 945 8
 2632 1107 F9 A6 01 EF             		mov.L	#-17, 4[r10]
 946:../kernel/tkernel/deviceio.c **** 		goto err_ret2;
 2633                             		.loc 2 946 3
 2634 110b 2E 2F                   		bra	.L174
 2635                             	.L180:
 942:../kernel/tkernel/deviceio.c **** 
 2636                             		.loc 2 942 3
 2637 110d 03                      		nop
 2638 110e 2E 03                   		bra	.L175
 2639                             	.L181:
 939:../kernel/tkernel/deviceio.c **** 
 2640                             		.loc 2 939 3
 2641 1110 03                      		nop
 2642                             		.balign 8,3,1
 2643                             	.L175:
 947:../kernel/tkernel/deviceio.c **** 	}
 948:../kernel/tkernel/deviceio.c **** 
 949:../kernel/tkernel/deviceio.c **** 	UnlockDM();
 2644                             		.loc 2 949 2
 2645 1111 66 02                   		mov.L	#0, r2
 2646 1113 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 2647 1119 05 00 00 00             		bsr	_MUnlock
 950:../kernel/tkernel/deviceio.c **** 
 951:../kernel/tkernel/deviceio.c **** 	if ( suspend ) {
 2648                             		.loc 2 951 5
 2649 111d EC A5                   		mov.L	[r10], r5
 2650 111f 61 05                   		cmp	#0, r5
 2651 1121 20 0F                   		beq	.L178
 952:../kernel/tkernel/deviceio.c **** 		/* Suspend */
 953:../kernel/tkernel/deviceio.c **** 		ercd = do_suspend();
 2652                             		.loc 2 953 10
 2653 1123 39 AC FE                		bsr	_do_suspend
 2654 1126 E7 A1 01                		mov.L	r1, 4[r10]
 954:../kernel/tkernel/deviceio.c **** 		if ( ercd < E_OK ) {
 2655                             		.loc 2 954 6
 2656 1129 ED A5 01                		mov.L	4[r10], r5
 2657 112c 61 05                   		cmp	#0, r5
 2658 112e 29 1A                   		blt	.L182
 2659                             	.L178:
 955:../kernel/tkernel/deviceio.c **** 			goto err_ret1;
 956:../kernel/tkernel/deviceio.c **** 		}
 957:../kernel/tkernel/deviceio.c **** 	}
 958:../kernel/tkernel/deviceio.c **** 
 959:../kernel/tkernel/deviceio.c **** 	return knl_DisSusCnt;
 2660                             		.loc 2 959 9
 2661 1130 FB 52 00 00 00 00       		mov.L	#_knl_DisSusCnt, r5
 2662 1136 EC 55                   		mov.L	[r5], r5
 2663 1138 2E 14                   		bra	.L179
 2664                             	.L174:
 960:../kernel/tkernel/deviceio.c **** 
 961:../kernel/tkernel/deviceio.c **** err_ret2:
 962:../kernel/tkernel/deviceio.c **** 	UnlockDM();
 2665                             		.loc 2 962 2
 2666 113a 66 02                   		mov.L	#0, r2
 2667 113c FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 2668 1142 05 00 00 00             		bsr	_MUnlock
 2669 1146 2E 03                   		bra	.L166
 2670                             	.L182:
 955:../kernel/tkernel/deviceio.c **** 			goto err_ret1;
 2671                             		.loc 2 955 4
 2672 1148 03                      		nop
 2673                             	.L166:
 963:../kernel/tkernel/deviceio.c **** err_ret1:
 964:../kernel/tkernel/deviceio.c **** 	return ercd;
 2674                             		.loc 2 964 9
 2675 1149 ED A5 01                		mov.L	4[r10], r5
 2676                             	.L179:
 965:../kernel/tkernel/deviceio.c **** }
 2677                             		.loc 2 965 1
 2678 114c EF 51                   		mov.L	r5, r1
 2679 114e 3F AA 05                		rtsd	#20, r10-r10
 2680                             	.LFE42:
 2682                             		.global	_knl_devmgr_startup
 2684                             	_knl_devmgr_startup:
 2685                             	.LFB43:
 966:../kernel/tkernel/deviceio.c **** 
 967:../kernel/tkernel/deviceio.c **** /* ------------------------------------------------------------------------ */
 968:../kernel/tkernel/deviceio.c **** 
 969:../kernel/tkernel/deviceio.c **** /*
 970:../kernel/tkernel/deviceio.c ****  * Device management startup function
 971:../kernel/tkernel/deviceio.c ****  */
 972:../kernel/tkernel/deviceio.c **** EXPORT void knl_devmgr_startup( void )
 973:../kernel/tkernel/deviceio.c **** {
 2686                             		.loc 2 973 1
 2687 1151 7E AA                   		push.l	r10
 2688                             	.LCFI60:
 2689 1153 EF 0A                   		mov.L	r0, r10
 2690                             	.LCFI61:
 974:../kernel/tkernel/deviceio.c **** 	LockDM();
 2691                             		.loc 2 974 2
 2692 1155 66 02                   		mov.L	#0, r2
 2693 1157 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 2694 115d 05 00 00 00             		bsr	_MLock
 975:../kernel/tkernel/deviceio.c **** 
 976:../kernel/tkernel/deviceio.c **** 	/* Initialization of open device management queue */
 977:../kernel/tkernel/deviceio.c **** 	QueInit(&(knl_resource_control_block.openq));
 2695                             		.loc 2 977 2
 2696 1161 FB 12 00 00 00 00       		mov.L	#_knl_resource_control_block, r1
 2697 1167 39 99 EE                		bsr	_QueInit
 978:../kernel/tkernel/deviceio.c **** 	knl_resource_control_block.dissus = 0;
 2698                             		.loc 2 978 36
 2699 116a FB 52 00 00 00 00       		mov.L	#_knl_resource_control_block, r5
 2700 1170 3E 52 00                		mov.L	#0, 8[r5]
 979:../kernel/tkernel/deviceio.c **** 	
 980:../kernel/tkernel/deviceio.c **** 	UnlockDM();
 2701                             		.loc 2 980 2
 2702 1173 66 02                   		mov.L	#0, r2
 2703 1175 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 2704 117b 05 00 00 00             		bsr	_MUnlock
 981:../kernel/tkernel/deviceio.c **** 
 982:../kernel/tkernel/deviceio.c **** 	return;
 2705                             		.loc 2 982 2
 2706 117f 03                      		nop
 983:../kernel/tkernel/deviceio.c **** }
 2707                             		.loc 2 983 1
 2708 1180 3F AA 01                		rtsd	#4, r10-r10
 2709                             	.LFE43:
 2711                             		.global	_knl_devmgr_cleanup
 2713                             	_knl_devmgr_cleanup:
 2714                             	.LFB44:
 984:../kernel/tkernel/deviceio.c **** 
 985:../kernel/tkernel/deviceio.c **** /*
 986:../kernel/tkernel/deviceio.c ****  * Device management cleanup function
 987:../kernel/tkernel/deviceio.c ****  */
 988:../kernel/tkernel/deviceio.c **** EXPORT void knl_devmgr_cleanup( void )
 989:../kernel/tkernel/deviceio.c **** {
 2715                             		.loc 2 989 1
 2716 1183 7E AA                   		push.l	r10
 2717                             	.LCFI62:
 2718 1185 71 0A FC                		add	#-4, r0, r10
 2719                             	.LCFI63:
 2720 1188 EF A0                   		mov.L	r10, r0
 990:../kernel/tkernel/deviceio.c **** 	OpnCB	*opncb;
 991:../kernel/tkernel/deviceio.c **** 
 992:../kernel/tkernel/deviceio.c **** 	/* Do nothing if it is not used even once */
 993:../kernel/tkernel/deviceio.c **** 	if ( knl_resource_control_block.openq.next == NULL ) {
 2721                             		.loc 2 993 39
 2722 118a FB 52 00 00 00 00       		mov.L	#_knl_resource_control_block, r5
 2723 1190 EC 55                   		mov.L	[r5], r5
 2724                             		.loc 2 993 5
 2725 1192 61 05                   		cmp	#0, r5
 2726 1194 3A 83 00                		beq	.L190
 994:../kernel/tkernel/deviceio.c **** 		return;
 995:../kernel/tkernel/deviceio.c **** 	}
 996:../kernel/tkernel/deviceio.c **** 
 997:../kernel/tkernel/deviceio.c **** 	LockDM();
 2727                             		.loc 2 997 2
 2728 1197 66 02                   		mov.L	#0, r2
 2729 1199 FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 2730 119f 05 00 00 00             		bsr	_MLock
 998:../kernel/tkernel/deviceio.c **** 
 999:../kernel/tkernel/deviceio.c **** 	/* Free suspend disable request */
1000:../kernel/tkernel/deviceio.c **** 	knl_DisSusCnt -= knl_resource_control_block.dissus;
 2731                             		.loc 2 1000 16
 2732 11a3 FB 52 00 00 00 00       		mov.L	#_knl_DisSusCnt, r5
 2733 11a9 EC 54                   		mov.L	[r5], r4
 2734                             		.loc 2 1000 45
 2735 11ab FB 52 00 00 00 00       		mov.L	#_knl_resource_control_block, r5
 2736 11b1 A8 D5                   		mov.L	8[r5], r5
 2737                             		.loc 2 1000 16
 2738 11b3 43 54                   		sub	r5, r4
 2739 11b5 FB 52 00 00 00 00       		mov.L	#_knl_DisSusCnt, r5
 2740 11bb E3 54                   		mov.L	r4, [r5]
1001:../kernel/tkernel/deviceio.c **** 	knl_resource_control_block.dissus = 0;
 2741                             		.loc 2 1001 36
 2742 11bd FB 52 00 00 00 00       		mov.L	#_knl_resource_control_block, r5
 2743 11c3 3E 52 00                		mov.L	#0, 8[r5]
1002:../kernel/tkernel/deviceio.c **** 
1003:../kernel/tkernel/deviceio.c **** 	/* Close all open devices */
1004:../kernel/tkernel/deviceio.c **** 	while ( !isQueEmpty(&(knl_resource_control_block.openq)) ) {
 2744                             		.loc 2 1004 8
 2745 11c6 2E 33                   		bra	.L188
 2746                             	.L189:
1005:../kernel/tkernel/deviceio.c **** 		opncb = RESQ_OPNCB(knl_resource_control_block.openq.next);
 2747                             		.loc 2 1005 11
 2748 11c8 FB 52 00 00 00 00       		mov.L	#_knl_resource_control_block, r5
 2749 11ce EC 55                   		mov.L	[r5], r5
 2750                             		.loc 2 1005 9
 2751 11d0 60 85                   		sub	#8, r5
 2752 11d2 E3 A5                   		mov.L	r5, [r10]
1006:../kernel/tkernel/deviceio.c **** 
1007:../kernel/tkernel/deviceio.c **** 		/* Indicate that it is during close processing */
1008:../kernel/tkernel/deviceio.c **** 		opncb->resid = 0;
 2753                             		.loc 2 1008 16
 2754 11d4 EC A5                   		mov.L	[r10], r5
 2755 11d6 3E 54 00                		mov.L	#0, 16[r5]
1009:../kernel/tkernel/deviceio.c **** 
1010:../kernel/tkernel/deviceio.c **** 		UnlockDM();
 2756                             		.loc 2 1010 3
 2757 11d9 66 02                   		mov.L	#0, r2
 2758 11db FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 2759 11e1 05 00 00 00             		bsr	_MUnlock
1011:../kernel/tkernel/deviceio.c **** 
1012:../kernel/tkernel/deviceio.c **** 		/* Device close processing */
1013:../kernel/tkernel/deviceio.c **** 		knl_close_device(opncb, 0);
 2760                             		.loc 2 1013 3
 2761 11e5 66 02                   		mov.L	#0, r2
 2762 11e7 EC A1                   		mov.L	[r10], r1
 2763 11e9 05 00 00 00             		bsr	_knl_close_device
1014:../kernel/tkernel/deviceio.c **** 
1015:../kernel/tkernel/deviceio.c **** 		LockDM();
 2764                             		.loc 2 1015 3
 2765 11ed 66 02                   		mov.L	#0, r2
 2766 11ef FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 2767 11f5 05 00 00 00             		bsr	_MLock
 2768                             	.L188:
1004:../kernel/tkernel/deviceio.c **** 		opncb = RESQ_OPNCB(knl_resource_control_block.openq.next);
 2769                             		.loc 2 1004 11
 2770 11f9 FB 12 00 00 00 00       		mov.L	#_knl_resource_control_block, r1
 2771 11ff 39 1A EE                		bsr	_isQueEmpty
 2772 1202 EF 15                   		mov.L	r1, r5
1004:../kernel/tkernel/deviceio.c **** 		opncb = RESQ_OPNCB(knl_resource_control_block.openq.next);
 2773                             		.loc 2 1004 8
 2774 1204 61 05                   		cmp	#0, r5
 2775 1206 20 C2                   		beq	.L189
1016:../kernel/tkernel/deviceio.c **** 	}
1017:../kernel/tkernel/deviceio.c **** 	UnlockDM();
 2776                             		.loc 2 1017 2
 2777 1208 66 02                   		mov.L	#0, r2
 2778 120a FB 12 00 00 00 00       		mov.L	#_knl_DevMgrLock, r1
 2779 1210 05 00 00 00             		bsr	_MUnlock
1018:../kernel/tkernel/deviceio.c **** 
1019:../kernel/tkernel/deviceio.c **** 	return;
 2780                             		.loc 2 1019 2
 2781 1214 03                      		nop
 2782 1215 2E 03                   		bra	.L185
 2783                             	.L190:
 994:../kernel/tkernel/deviceio.c **** 	}
 2784                             		.loc 2 994 3
 2785 1217 03                      		nop
 2786                             	.L185:
1020:../kernel/tkernel/deviceio.c **** }
 2787                             		.loc 2 1020 1
 2788 1218 3F AA 02                		rtsd	#8, r10-r10
 2789                             	.LFE44:
 2791                             		.global	_knl_initDevIO
 2793                             	_knl_initDevIO:
 2794                             	.LFB45:
1021:../kernel/tkernel/deviceio.c **** 
1022:../kernel/tkernel/deviceio.c **** /*
1023:../kernel/tkernel/deviceio.c ****  * Initialization sequence of device input/output-related
1024:../kernel/tkernel/deviceio.c ****  */
1025:../kernel/tkernel/deviceio.c **** EXPORT ER knl_initDevIO( void )
1026:../kernel/tkernel/deviceio.c **** {
 2795                             		.loc 2 1026 1
 2796 121b 7E AA                   		push.l	r10
 2797                             	.LCFI64:
 2798 121d 71 0A FC                		add	#-4, r0, r10
 2799                             	.LCFI65:
 2800 1220 EF A0                   		mov.L	r10, r0
1027:../kernel/tkernel/deviceio.c **** 	INT	i;
1028:../kernel/tkernel/deviceio.c **** 
1029:../kernel/tkernel/deviceio.c **** 	QueInit(&knl_FreeOpnCB);
 2801                             		.loc 2 1029 2
 2802 1222 FB 12 00 00 00 00       		mov.L	#_knl_FreeOpnCB, r1
 2803 1228 39 D8 ED                		bsr	_QueInit
1030:../kernel/tkernel/deviceio.c **** 	for ( i = 0; i < MAX_OPNDEV; ++i ) {
 2804                             		.loc 2 1030 10
 2805 122b F8 A6 00                		mov.L	#0, [r10]
 2806                             		.loc 2 1030 2
 2807 122e 2E 2F                   		bra	.L192
 2808                             	.L193:
1031:../kernel/tkernel/deviceio.c **** 		knl_OpnCBtbl[i].resid = 0;
 2809                             		.loc 2 1031 25 discriminator 3
 2810 1230 FB 42 00 00 00 00       		mov.L	#_knl_OpnCBtbl, r4
 2811 1236 EC A5                   		mov.L	[r10], r5
 2812 1238 6C 65                   		shll	#6, r5
 2813 123a 4B 45                   		add	r4, r5
 2814 123c 71 55 10                		add	#16, r5
 2815 123f F8 56 00                		mov.L	#0, [r5]
1032:../kernel/tkernel/deviceio.c **** 		QueInsert(&knl_OpnCBtbl[i].q, &knl_FreeOpnCB);
 2816                             		.loc 2 1032 3 discriminator 3
 2817 1242 EC A5                   		mov.L	[r10], r5
 2818 1244 6C 65                   		shll	#6, r5
 2819 1246 70 55 00 00 00 00       		add	#_knl_OpnCBtbl, r5
 2820 124c FB 22 00 00 00 00       		mov.L	#_knl_FreeOpnCB, r2
 2821 1252 EF 51                   		mov.L	r5, r1
 2822 1254 39 E0 ED                		bsr	_QueInsert
1030:../kernel/tkernel/deviceio.c **** 	for ( i = 0; i < MAX_OPNDEV; ++i ) {
 2823                             		.loc 2 1030 31 discriminator 3
 2824 1257 EC A5                   		mov.L	[r10], r5
 2825 1259 62 15                   		add	#1, r5
 2826 125b E3 A5                   		mov.L	r5, [r10]
 2827                             	.L192:
1030:../kernel/tkernel/deviceio.c **** 	for ( i = 0; i < MAX_OPNDEV; ++i ) {
 2828                             		.loc 2 1030 2 discriminator 1
 2829 125d EC A5                   		mov.L	[r10], r5
 2830 125f 61 F5                   		cmp	#15, r5
 2831 1261 2B CF                   		ble	.L193
1033:../kernel/tkernel/deviceio.c **** 	}
1034:../kernel/tkernel/deviceio.c **** 
1035:../kernel/tkernel/deviceio.c **** 	QueInit(&knl_FreeReqCB);
 2832                             		.loc 2 1035 2
 2833 1263 FB 12 00 00 00 00       		mov.L	#_knl_FreeReqCB, r1
 2834 1269 39 97 ED                		bsr	_QueInit
1036:../kernel/tkernel/deviceio.c **** 	for ( i = 0; i < MAX_REQDEV; ++i ) {
 2835                             		.loc 2 1036 10
 2836 126c F8 A6 00                		mov.L	#0, [r10]
 2837                             		.loc 2 1036 2
 2838 126f 2E 30                   		bra	.L194
 2839                             	.L195:
1037:../kernel/tkernel/deviceio.c **** 		knl_ReqCBtbl[i].opncb = NULL;
 2840                             		.loc 2 1037 25 discriminator 3
 2841 1271 FB 42 00 00 00 00       		mov.L	#_knl_ReqCBtbl, r4
 2842 1277 EC A5                   		mov.L	[r10], r5
 2843 1279 75 15 34                		mul	#52, r5
 2844 127c 4B 45                   		add	r4, r5
 2845 127e 62 85                   		add	#8, r5
 2846 1280 F8 56 00                		mov.L	#0, [r5]
1038:../kernel/tkernel/deviceio.c **** 		QueInsert(&knl_ReqCBtbl[i].q, &knl_FreeReqCB);
 2847                             		.loc 2 1038 3 discriminator 3
 2848 1283 EC A5                   		mov.L	[r10], r5
 2849 1285 75 15 34                		mul	#52, r5
 2850 1288 70 55 00 00 00 00       		add	#_knl_ReqCBtbl, r5
 2851 128e FB 22 00 00 00 00       		mov.L	#_knl_FreeReqCB, r2
 2852 1294 EF 51                   		mov.L	r5, r1
 2853 1296 39 9E ED                		bsr	_QueInsert
1036:../kernel/tkernel/deviceio.c **** 	for ( i = 0; i < MAX_REQDEV; ++i ) {
 2854                             		.loc 2 1036 31 discriminator 3
 2855 1299 EC A5                   		mov.L	[r10], r5
 2856 129b 62 15                   		add	#1, r5
 2857 129d E3 A5                   		mov.L	r5, [r10]
 2858                             	.L194:
1036:../kernel/tkernel/deviceio.c **** 	for ( i = 0; i < MAX_REQDEV; ++i ) {
 2859                             		.loc 2 1036 2 discriminator 1
 2860 129f EC A5                   		mov.L	[r10], r5
 2861 12a1 61 F5                   		cmp	#15, r5
 2862 12a3 2B CE                   		ble	.L195
1039:../kernel/tkernel/deviceio.c **** 	}
1040:../kernel/tkernel/deviceio.c **** 
1041:../kernel/tkernel/deviceio.c **** 	return E_OK;
 2863                             		.loc 2 1041 9
 2864 12a5 66 05                   		mov.L	#0, r5
1042:../kernel/tkernel/deviceio.c **** }
 2865                             		.loc 2 1042 1
 2866 12a7 EF 51                   		mov.L	r5, r1
 2867 12a9 3F AA 02                		rtsd	#8, r10-r10
 2868                             	.LFE45:
 2870                             		.global	_knl_finishDevIO
 2872                             	_knl_finishDevIO:
 2873                             	.LFB46:
1043:../kernel/tkernel/deviceio.c **** 
1044:../kernel/tkernel/deviceio.c **** /*
1045:../kernel/tkernel/deviceio.c ****  * Finalization sequence of device input/output-related
1046:../kernel/tkernel/deviceio.c ****  */
1047:../kernel/tkernel/deviceio.c **** EXPORT ER knl_finishDevIO( void )
1048:../kernel/tkernel/deviceio.c **** {
 2874                             		.loc 2 1048 1
 2875 12ac 7E AA                   		push.l	r10
 2876                             	.LCFI66:
 2877 12ae EF 0A                   		mov.L	r0, r10
 2878                             	.LCFI67:
1049:../kernel/tkernel/deviceio.c **** 	return E_OK;
 2879                             		.loc 2 1049 9
 2880 12b0 66 05                   		mov.L	#0, r5
1050:../kernel/tkernel/deviceio.c **** }
 2881                             		.loc 2 1050 1
 2882 12b2 EF 51                   		mov.L	r5, r1
 2883 12b4 3F AA 01                		rtsd	#4, r10-r10
 2884                             	.LFE46:
 3550                             	.Letext0:
 3551                             		.file 3 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/tk/typedef.h"
 3552                             		.file 4 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/tk/syscall.h"
 3553                             		.file 5 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/tk/syslib.h"
 3554                             		.file 6 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\knlinc/kernel.h"
 3555                             		.file 7 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\tkernel\\timer.h"
 3556                             		.file 8 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\tkernel\\winfo.h"
 3557                             		.file 9 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\tkernel\\mutex.h"
 3558                             		.file 10 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\sysdepend\\cpu\\core\\rxv2\\sysde
 3559                             		.file 11 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\sysdepend\\cpu\\core\\rxv2\\cpu_s
 3560                             		.file 12 "../kernel/tkernel/sysmgr.h"
 3561                             		.file 13 "../kernel/tkernel/device.h"
