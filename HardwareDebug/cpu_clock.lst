   1                             		.file	"cpu_clock.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   5                             	_out_w:
   6                             	.LFB0:
   7                             		.file 1 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include\\tk\\sysdepend\\cpu\\rx65n\\syslib
   1:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /*
   2:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *----------------------------------------------------------------------
   3:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *    micro T-Kernel 3.00.06.B0
   4:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *
   5:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *    Copyright (C) 2022 by Ken Sakamura.
   6:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *    This software is distributed under the T-License 2.2.
   7:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *----------------------------------------------------------------------
   8:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *
   9:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *    Released by TRON Forum(http://www.tron.org) at 2022/04.
  10:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *
  11:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *----------------------------------------------------------------------
  12:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  */
  13:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /*
  14:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *	syslib.h
  15:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *
  16:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *	micro T-Kernel System Library  (RX65N depended)
  17:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  */
  18:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  19:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #ifndef __TK_SYSLIB_CPU_DEPEND_H__
  20:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define __TK_SYSLIB_CPU_DEPEND_H__
  21:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  22:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #include "../core/rxv2/syslib.h"
  23:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  24:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /*----------------------------------------------------------------------*/
  25:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /*
  26:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  * Interrupt controller Control
  27:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *
  28:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  */
  29:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define IM_LEVEL	0x0004		/* Level trigger */
  30:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define IM_EDGE		0x0000		/* Edge trigger */
  31:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  32:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define IM_HI		0x0000		/* H level/Interrupt at rising edge */
  33:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define IM_LOW		0x0001		/* L level/Interrupt at falling edge */
  34:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define IM_BOTH		0x0003		/* L level/Interrupt at both edge */
  35:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  36:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  37:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /* 
  38:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  * Set Software Configurable Interrupt (PERIA & PERIB)
  39:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  */
  40:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** IMPORT ER SetPERI(UINT intno, UINT fctno);
  41:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  42:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  43:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /* ------------------------------------------------------------------------ */
  44:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /*
  45:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  * I/O port access
  46:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *	for memory mapped I/O
  47:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  */
  48:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline void out_w( UW port, UW data )
  49:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
   8                             		.loc 1 49 1
   9 0000 7E AA                   		push.l	r10
  10                             	.LCFI0:
  11 0002 71 0A F8                		add	#-8, r0, r10
  12                             	.LCFI1:
  13 0005 EF A0                   		mov.L	r10, r0
  14 0007 E3 A1                   		mov.L	r1, [r10]
  15 0009 E7 A2 01                		mov.L	r2, 4[r10]
  50:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	*(_UW*)port = data;
  16                             		.loc 1 50 3
  17 000c EC A5                   		mov.L	[r10], r5
  18                             		.loc 1 50 14
  19 000e ED A4 01                		mov.L	4[r10], r4
  20 0011 E3 54                   		mov.L	r4, [r5]
  51:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  21                             		.loc 1 51 1
  22 0013 03                      		nop
  23 0014 3F AA 03                		rtsd	#12, r10-r10
  24                             	.LFE0:
  27                             	_out_h:
  28                             	.LFB1:
  52:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline void out_h( UW port, UH data )
  53:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
  29                             		.loc 1 53 1
  30 0017 7E AA                   		push.l	r10
  31                             	.LCFI2:
  32 0019 71 0A F8                		add	#-8, r0, r10
  33                             	.LCFI3:
  34 001c EF A0                   		mov.L	r10, r0
  35 001e E3 A1                   		mov.L	r1, [r10]
  36 0020 D7 A2 02                		mov.W	r2, 4[r10]
  54:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	*(_UH*)port = data;
  37                             		.loc 1 54 3
  38 0023 EC A5                   		mov.L	[r10], r5
  39                             		.loc 1 54 14
  40 0025 DD A4 02                		mov.W	4[r10], r4
  41 0028 D3 54                   		mov.W	r4, [r5]
  55:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  42                             		.loc 1 55 1
  43 002a 03                      		nop
  44 002b 3F AA 03                		rtsd	#12, r10-r10
  45                             	.LFE1:
  48                             	_out_b:
  49                             	.LFB2:
  56:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline void out_b( UW port, UB data )
  57:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
  50                             		.loc 1 57 1
  51 002e 7E AA                   		push.l	r10
  52                             	.LCFI4:
  53 0030 71 0A F8                		add	#-8, r0, r10
  54                             	.LCFI5:
  55 0033 EF A0                   		mov.L	r10, r0
  56 0035 E3 A1                   		mov.L	r1, [r10]
  57 0037 C7 A2 04                		mov.B	r2, 4[r10]
  58:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	*(_UB*)port = data;
  58                             		.loc 1 58 3
  59 003a EC A5                   		mov.L	[r10], r5
  60                             		.loc 1 58 14
  61 003c CD A4 04                		mov.B	4[r10], r4
  62 003f C3 54                   		mov.B	r4, [r5]
  59:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  63                             		.loc 1 59 1
  64 0041 03                      		nop
  65 0042 3F AA 03                		rtsd	#12, r10-r10
  66                             	.LFE2:
  69                             	_in_b:
  70                             	.LFB5:
  60:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  61:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline UW in_w( UW port )
  62:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
  63:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	return *(_UW*)port;
  64:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  65:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline UH in_h( UW port )
  66:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
  67:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	return *(_UH*)port;
  68:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  69:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline UB in_b( UW port )
  70:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
  71                             		.loc 1 70 1
  72 0045 7E AA                   		push.l	r10
  73                             	.LCFI6:
  74 0047 71 0A FC                		add	#-4, r0, r10
  75                             	.LCFI7:
  76 004a EF A0                   		mov.L	r10, r0
  77 004c E3 A1                   		mov.L	r1, [r10]
  71:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	return *(_UB*)port;
  78                             		.loc 1 71 10
  79 004e EC A5                   		mov.L	[r10], r5
  80                             		.loc 1 71 9
  81 0050 CC 55                   		mov.B	[r5], r5
  82 0052 5B 55                   		movu.B	r5, r5
  72:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  83                             		.loc 1 72 1
  84 0054 EF 51                   		mov.L	r5, r1
  85 0056 3F AA 02                		rtsd	#8, r10-r10
  86                             	.LFE5:
  88                             		.global	_startup_clock
  90                             	_startup_clock:
  91                             	.LFB7:
  92                             		.file 2 "../kernel/sysdepend/rtb_rx65n/cpu_clock.c"
   1:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** /*
   2:../kernel/sysdepend/rtb_rx65n/cpu_clock.c ****  *----------------------------------------------------------------------
   3:../kernel/sysdepend/rtb_rx65n/cpu_clock.c ****  *    micro T-Kernel 3.0 BSP
   4:../kernel/sysdepend/rtb_rx65n/cpu_clock.c ****  *
   5:../kernel/sysdepend/rtb_rx65n/cpu_clock.c ****  *    Copyright (C) 2022 by Ken Sakamura.
   6:../kernel/sysdepend/rtb_rx65n/cpu_clock.c ****  *    This software is distributed under the T-License 2.2.
   7:../kernel/sysdepend/rtb_rx65n/cpu_clock.c ****  *----------------------------------------------------------------------
   8:../kernel/sysdepend/rtb_rx65n/cpu_clock.c ****  *
   9:../kernel/sysdepend/rtb_rx65n/cpu_clock.c ****  *    Released by TRON Forum(http://www.tron.org) at 2022/04.
  10:../kernel/sysdepend/rtb_rx65n/cpu_clock.c ****  *
  11:../kernel/sysdepend/rtb_rx65n/cpu_clock.c ****  *----------------------------------------------------------------------
  12:../kernel/sysdepend/rtb_rx65n/cpu_clock.c ****  */
  13:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 
  14:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** #include <sys/machine.h>
  15:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** #ifdef RTB_RX65N
  16:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 
  17:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** /*
  18:../kernel/sysdepend/rtb_rx65n/cpu_clock.c ****  *	cpu_clock.c (RX65N)
  19:../kernel/sysdepend/rtb_rx65n/cpu_clock.c ****  *	Clock Setting
  20:../kernel/sysdepend/rtb_rx65n/cpu_clock.c ****  */
  21:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 
  22:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** #include <tk/tkernel.h>
  23:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 
  24:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** #include "sysdepend.h"
  25:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 
  26:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** /*
  27:../kernel/sysdepend/rtb_rx65n/cpu_clock.c ****  *  Startup System Clock
  28:../kernel/sysdepend/rtb_rx65n/cpu_clock.c ****  *    Used HOCO Clock(16MHz), Uesd PLL/UPLL, System Clock 240MHz
  29:../kernel/sysdepend/rtb_rx65n/cpu_clock.c ****  *    ICLK:120MHz, PCLKA:120MHz, PCLKB:60MHz, PCLKC:60MHz, PCLKD:60MHz, FCLK:60MHz, BCLK:60MHz
  30:../kernel/sysdepend/rtb_rx65n/cpu_clock.c ****  */
  31:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** EXPORT void startup_clock(void)
  32:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** {
  93                             		.loc 2 32 1
  94 0059 7E AA                   		push.l	r10
  95                             	.LCFI8:
  96 005b EF 0A                   		mov.L	r0, r10
  97                             	.LCFI9:
  33:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 	out_h(SYSTEM_PRCR, 0xA503);			/* Register Protect Disable */
  98                             		.loc 2 33 2
  99 005d FB 2A 03 A5             		mov	#-23293, r2
 100 0061 FB 1E FE 03 08          		mov.L	#0x803fe, r1
 101 0066 39 B1 FF                		bsr	_out_h
  34:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 
  35:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 	/* After reset, HOCO oscillation is effective. */
  36:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 
  37:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 	out_h(SYSTEM_PLLCR, 0x1D10);			/* PLL 16MHz/1*15=240MHz */
 102                             		.loc 2 37 2
 103 0069 FB 2A 10 1D             		mov	#0x1d10, r2
 104 006d FB 1E 28 00 08          		mov.L	#0x80028, r1
 105 0072 39 A5 FF                		bsr	_out_h
  38:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 	out_b(SYSTEM_PLLCR2, 0x00);			/* Enable PLL */
 106                             		.loc 2 38 2
 107 0075 66 02                   		mov	#0, r2
 108 0077 FB 1E 2A 00 08          		mov.L	#0x8002a, r1
 109 007c 39 B2 FF                		bsr	_out_b
  39:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 	while(!(in_b(SYSTEM_OSCOVFSR) & 0x04));		/* Wait PLL Stabilization */
 110                             		.loc 2 39 7
 111 007f 03                      		nop
 112                             	.L7:
 113                             		.loc 2 39 10 discriminator 1
 114 0080 FB 1E 3C 00 08          		mov.L	#0x8003c, r1
 115 0085 39 C0 FF                		bsr	_in_b
 116 0088 EF 15                   		mov.L	r1, r5
 117                             		.loc 2 39 32 discriminator 1
 118 008a 5B 55                   		movu.B	r5, r5
 119 008c 64 45                   		and	#4, r5
 120                             		.loc 2 39 7 discriminator 1
 121 008e 61 05                   		cmp	#0, r5
 122 0090 20 F0                   		beq	.L7
  40:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 
  41:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 	out_b(SYSTEM_ROMWT, 0x02);			/* ROM wait 2 */
 123                             		.loc 2 41 2
 124 0092 66 22                   		mov	#2, r2
 125 0094 FB 1E 1C 10 08          		mov.L	#0x8101c, r1
 126 0099 39 95 FF                		bsr	_out_b
  42:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 
  43:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 	out_w(SYSTEM_SCKCR, 0x21c21222);		/* ICLK=120MHz,FCLK=BCLK=PCLKB=PCLKC=PCLKD=60MHz */
 127                             		.loc 2 43 2
 128 009c FB 22 22 12 C2 21       		mov.L	#0x21c21222, r2
 129 00a2 FB 1E 20 00 08          		mov.L	#0x80020, r1
 130 00a7 39 59 FF                		bsr	_out_w
  44:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 	out_h(SYSTEM_SCKCR2, 0x0011);			/* (UCLK:48MHz) */
 131                             		.loc 2 44 2
 132 00aa 75 42 11                		mov	#17, r2
 133 00ad FB 1E 24 00 08          		mov.L	#0x80024, r1
 134 00b2 39 65 FF                		bsr	_out_h
  45:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 	out_h(SYSTEM_SCKCR3, 0x0400);			/* Select PLL */
 135                             		.loc 2 45 2
 136 00b5 FB 2A 00 04             		mov	#0x400, r2
 137 00b9 FB 1E 26 00 08          		mov.L	#0x80026, r1
 138 00be 39 59 FF                		bsr	_out_h
  46:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 
  47:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 	out_b(SYSTEM_LOCOCR, 0x01);			/* Disable LOCO */
 139                             		.loc 2 47 2
 140 00c1 66 12                   		mov	#1, r2
 141 00c3 FB 1E 34 00 08          		mov.L	#0x80034, r1
 142 00c8 39 66 FF                		bsr	_out_b
  48:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 	out_b(RTC_RCR3, 0x06);				/* Disable Sub Clock */
 143                             		.loc 2 48 2
 144 00cb 66 62                   		mov	#6, r2
 145 00cd FB 1E 26 C4 08          		mov.L	#0x8c426, r1
 146 00d2 39 5C FF                		bsr	_out_b
  49:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 	out_b(SYSTEM_SOSCCR, 0x01);			/* Disable Sub Clock */
 147                             		.loc 2 49 2
 148 00d5 66 12                   		mov	#1, r2
 149 00d7 FB 1E 33 00 08          		mov.L	#0x80033, r1
 150 00dc 39 52 FF                		bsr	_out_b
  50:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 	while((in_b(SYSTEM_OSCOVFSR) != 0x0C));		/* Wait Sub Clock Stoped */
 151                             		.loc 2 50 7
 152 00df 03                      		nop
 153                             	.L8:
 154                             		.loc 2 50 9 discriminator 1
 155 00e0 FB 1E 3C 00 08          		mov.L	#0x8003c, r1
 156 00e5 39 60 FF                		bsr	_in_b
 157 00e8 EF 15                   		mov.L	r1, r5
 158                             		.loc 2 50 7 discriminator 1
 159 00ea 5B 55                   		movu.B	r5, r5
 160 00ec 61 C5                   		cmp	#12, r5
 161 00ee 21 F2                   		bne	.L8
  51:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 
  52:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 	out_h(SYSTEM_PRCR, 0xA500);			/* Register protect Enable */
 162                             		.loc 2 52 2
 163 00f0 FB 2A 00 A5             		mov	#-23296, r2
 164 00f4 FB 1E FE 03 08          		mov.L	#0x803fe, r1
 165 00f9 39 1E FF                		bsr	_out_h
  53:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 
  54:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 	return;
 166                             		.loc 2 54 2
 167 00fc 03                      		nop
  55:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** }
 168                             		.loc 2 55 1
 169 00fd 3F AA 01                		rtsd	#4, r10-r10
 170                             	.LFE7:
 172                             		.global	_shutdown_clock
 174                             	_shutdown_clock:
 175                             	.LFB8:
  56:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** 
  57:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** EXPORT void shutdown_clock(void)
  58:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** {
 176                             		.loc 2 58 1
 177 0100 7E AA                   		push.l	r10
 178                             	.LCFI10:
 179 0102 EF 0A                   		mov.L	r0, r10
 180                             	.LCFI11:
  59:../kernel/sysdepend/rtb_rx65n/cpu_clock.c **** }
 181                             		.loc 2 59 1
 182 0104 03                      		nop
 183 0105 3F AA 01                		rtsd	#4, r10-r10
 184                             	.LFE8:
 316                             	.Letext0:
 317                             		.file 3 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/tk/typedef.h"
 318                             		.file 4 "../kernel/sysdepend/rtb_rx65n/../cpu/rx65n/../core/rxv2/sysdepend.h"
 319                             		.file 5 "../kernel/sysdepend/rtb_rx65n/../cpu/rx65n/sysdepend.h"
