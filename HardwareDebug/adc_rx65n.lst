   1                             		.file	"adc_rx65n.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   5                             	_out_h:
   6                             	.LFB1:
   7                             		.file 1 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include\\tk\\sysdepend\\cpu\\rx65n\\syslib
   1:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /*
   2:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *----------------------------------------------------------------------
   3:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *    micro T-Kernel 3.00.06.B0
   4:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *
   5:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *    Copyright (C) 2022 by Ken Sakamura.
   6:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *    This software is distributed under the T-License 2.2.
   7:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *----------------------------------------------------------------------
   8:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *
   9:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *    Released by TRON Forum(http://www.tron.org) at 2022/04.
  10:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *
  11:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *----------------------------------------------------------------------
  12:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  */
  13:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /*
  14:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *	syslib.h
  15:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *
  16:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *	micro T-Kernel System Library  (RX65N depended)
  17:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  */
  18:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  19:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #ifndef __TK_SYSLIB_CPU_DEPEND_H__
  20:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define __TK_SYSLIB_CPU_DEPEND_H__
  21:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  22:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #include "../core/rxv2/syslib.h"
  23:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  24:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /*----------------------------------------------------------------------*/
  25:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /*
  26:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  * Interrupt controller Control
  27:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *
  28:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  */
  29:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define IM_LEVEL	0x0004		/* Level trigger */
  30:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define IM_EDGE		0x0000		/* Edge trigger */
  31:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  32:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define IM_HI		0x0000		/* H level/Interrupt at rising edge */
  33:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define IM_LOW		0x0001		/* L level/Interrupt at falling edge */
  34:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** #define IM_BOTH		0x0003		/* L level/Interrupt at both edge */
  35:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  36:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /* ------------------------------------------------------------------------ */
  37:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** /*
  38:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  * I/O port access
  39:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  *	for memory mapped I/O
  40:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h ****  */
  41:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline void out_w( UW port, UW data )
  42:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
  43:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	*(_UW*)port = data;
  44:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  45:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline void out_h( UW port, UH data )
  46:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
   8                             		.loc 1 46 1
   9 0000 7E AA                   		push.l	r10
  10                             	.LCFI0:
  11 0002 71 0A F8                		add	#-8, r0, r10
  12                             	.LCFI1:
  13 0005 EF A0                   		mov.L	r10, r0
  14 0007 E3 A1                   		mov.L	r1, [r10]
  15 0009 D7 A2 02                		mov.W	r2, 4[r10]
  47:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	*(_UH*)port = data;
  16                             		.loc 1 47 3
  17 000c EC A5                   		mov.L	[r10], r5
  18                             		.loc 1 47 14
  19 000e DD A4 02                		mov.W	4[r10], r4
  20 0011 D3 54                   		mov.W	r4, [r5]
  48:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  21                             		.loc 1 48 1
  22 0013 03                      		nop
  23 0014 3F AA 03                		rtsd	#12, r10-r10
  24                             	.LFE1:
  27                             	_out_b:
  28                             	.LFB2:
  49:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline void out_b( UW port, UB data )
  50:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
  29                             		.loc 1 50 1
  30 0017 7E AA                   		push.l	r10
  31                             	.LCFI2:
  32 0019 71 0A F8                		add	#-8, r0, r10
  33                             	.LCFI3:
  34 001c EF A0                   		mov.L	r10, r0
  35 001e E3 A1                   		mov.L	r1, [r10]
  36 0020 C7 A2 04                		mov.B	r2, 4[r10]
  51:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	*(_UB*)port = data;
  37                             		.loc 1 51 3
  38 0023 EC A5                   		mov.L	[r10], r5
  39                             		.loc 1 51 14
  40 0025 CD A4 04                		mov.B	4[r10], r4
  41 0028 C3 54                   		mov.B	r4, [r5]
  52:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  42                             		.loc 1 52 1
  43 002a 03                      		nop
  44 002b 3F AA 03                		rtsd	#12, r10-r10
  45                             	.LFE2:
  48                             	_in_h:
  49                             	.LFB4:
  53:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 
  54:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline UW in_w( UW port )
  55:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
  56:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	return *(_UW*)port;
  57:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  58:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline UH in_h( UW port )
  59:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
  50                             		.loc 1 59 1
  51 002e 7E AA                   		push.l	r10
  52                             	.LCFI4:
  53 0030 71 0A FC                		add	#-4, r0, r10
  54                             	.LCFI5:
  55 0033 EF A0                   		mov.L	r10, r0
  56 0035 E3 A1                   		mov.L	r1, [r10]
  60:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	return *(_UH*)port;
  57                             		.loc 1 60 10
  58 0037 EC A5                   		mov.L	[r10], r5
  59                             		.loc 1 60 9
  60 0039 DC 55                   		mov.W	[r5], r5
  61 003b 5F 55                   		movu.W	r5, r5
  61:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  62                             		.loc 1 61 1
  63 003d EF 51                   		mov.L	r5, r1
  64 003f 3F AA 02                		rtsd	#8, r10-r10
  65                             	.LFE4:
  68                             	_in_b:
  69                             	.LFB5:
  62:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** Inline UB in_b( UW port )
  63:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** {
  70                             		.loc 1 63 1
  71 0042 7E AA                   		push.l	r10
  72                             	.LCFI6:
  73 0044 71 0A FC                		add	#-4, r0, r10
  74                             	.LCFI7:
  75 0047 EF A0                   		mov.L	r10, r0
  76 0049 E3 A1                   		mov.L	r1, [r10]
  64:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** 	return *(_UB*)port;
  77                             		.loc 1 64 10
  78 004b EC A5                   		mov.L	[r10], r5
  79                             		.loc 1 64 9
  80 004d CC 55                   		mov.B	[r5], r5
  81 004f 5B 55                   		movu.B	r5, r5
  65:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\include\tk\sysdepend\cpu\rx65n\syslib.h **** }
  82                             		.loc 1 65 1
  83 0051 EF 51                   		mov.L	r5, r1
  84 0053 3F AA 02                		rtsd	#8, r10-r10
  85                             	.LFE5:
  87                             		.section C,"a",@progbits
  88                             		.p2align 2
  89                             		.balign 4
  92                             	_ba:
  93 0000 00 90 08 00             		.long	0x89000
  94 0004 00 91 08 00             		.long	0x89100
  95                             		.local	_ll_devcb
  96                             		.comm	_ll_devcb,16,4
  97                             		.section P,"ax"
  98                             		.global	_adc_inthdr
 100                             	_adc_inthdr:
 101                             	.LFB6:
 102                             		.file 2 "../device/adc/sysdepend/rx65n/adc_rx65n.c"
   1:../device/adc/sysdepend/rx65n/adc_rx65n.c **** ﻿/*
   2:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  *----------------------------------------------------------------------
   3:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  *    Device Driver for μT-Kernel 3.0
   4:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  *
   5:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  *    Copyright (C) 2020-2022 by Ken Sakamura.
   6:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  *    This software is distributed under the T-License 2.2.
   7:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  *----------------------------------------------------------------------
   8:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  *
   9:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  *    Released by TRON Forum(http://www.tron.org) at 2022/04.
  10:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  *
  11:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  *----------------------------------------------------------------------
  12:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  */
  13:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
  14:../device/adc/sysdepend/rx65n/adc_rx65n.c **** #include <sys/machine.h>
  15:../device/adc/sysdepend/rx65n/adc_rx65n.c **** #ifdef CPU_RX65N
  16:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
  17:../device/adc/sysdepend/rx65n/adc_rx65n.c **** #include <tk/tkernel.h>
  18:../device/adc/sysdepend/rx65n/adc_rx65n.c **** #include "../../adc.h"
  19:../device/adc/sysdepend/rx65n/adc_rx65n.c **** #include "../../../include/dev_def.h"
  20:../device/adc/sysdepend/rx65n/adc_rx65n.c **** #if DEV_ADC_ENABLE
  21:../device/adc/sysdepend/rx65n/adc_rx65n.c **** /*
  22:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  *	dev_adc_rx65n.c
  23:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  *	A/D converter device driver
  24:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  *	System dependent processing for RX65N
  25:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  */
  26:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
  27:../device/adc/sysdepend/rx65n/adc_rx65n.c **** /*----------------------------------------------------------------------
  28:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  * Device register base address
  29:../device/adc/sysdepend/rx65n/adc_rx65n.c **** */
  30:../device/adc/sysdepend/rx65n/adc_rx65n.c **** const LOCAL UW ba[DEV_ADC_UNITNM] = { ADC0_BASE, ADC1_BASE };
  31:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
  32:../device/adc/sysdepend/rx65n/adc_rx65n.c **** #define	ADC_ADCSR(x)	(ba[x] + ADCSR)		// A/DC control reg
  33:../device/adc/sysdepend/rx65n/adc_rx65n.c **** #define	ADC_ADANSA0(x)	(ba[x] + ADANSA0)	// A/DC chanel select reg. A0
  34:../device/adc/sysdepend/rx65n/adc_rx65n.c **** #define	ADC_ADANSA1(x)	(ba[x] + ADANSA1)	// A/DC chanel select reg. A1
  35:../device/adc/sysdepend/rx65n/adc_rx65n.c **** #define	ADC_ADCER(x)	(ba[x] + ADCER)		// A/DC Control extension reg
  36:../device/adc/sysdepend/rx65n/adc_rx65n.c **** #define	ADC_ADANSB0(x)	(ba[x] + ADANSB0)	// A/DC chanel select reg. B0
  37:../device/adc/sysdepend/rx65n/adc_rx65n.c **** #define	ADC_ADANSB1(x)	(ba[x] + ADANSB1)	// A/DC chanel select reg. B1
  38:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
  39:../device/adc/sysdepend/rx65n/adc_rx65n.c **** #define	ADC_ADDR(x,c)	(ba[x] + ADDR(c))	//A/DC Data reg
  40:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
  41:../device/adc/sysdepend/rx65n/adc_rx65n.c **** #define	ADC_ADSSTR(x,c)	(ba[x] + ADSSTR(c))	//A/DC Sampling state reg
  42:../device/adc/sysdepend/rx65n/adc_rx65n.c **** #define	ADC_ADSSTRL	(ADSSTRL)
  43:../device/adc/sysdepend/rx65n/adc_rx65n.c **** #define	ADC_ADSSTRT	(ADSSTRT)
  44:../device/adc/sysdepend/rx65n/adc_rx65n.c **** #define	ADC_ADSSTRO	(ADSSTRO)
  45:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
  46:../device/adc/sysdepend/rx65n/adc_rx65n.c **** /*----------------------------------------------------------------------
  47:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  * Device control data
  48:../device/adc/sysdepend/rx65n/adc_rx65n.c **** */
  49:../device/adc/sysdepend/rx65n/adc_rx65n.c **** LOCAL struct {
  50:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	ID	wait_tskid;
  51:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	UINT	intno;
  52:../device/adc/sysdepend/rx65n/adc_rx65n.c **** } ll_devcb[DEV_ADC_UNITNM];
  53:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
  54:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
  55:../device/adc/sysdepend/rx65n/adc_rx65n.c **** /*----------------------------------------------------------------------
  56:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  * Interrupt handler
  57:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  */
  58:../device/adc/sysdepend/rx65n/adc_rx65n.c **** void adc_inthdr( UINT intno)
  59:../device/adc/sysdepend/rx65n/adc_rx65n.c **** {
 103                             		.loc 2 59 1
 104 0056 7E AA                   		push.l	r10
 105                             	.LCFI8:
 106 0058 71 0A F8                		add	#-8, r0, r10
 107                             	.LCFI9:
 108 005b EF A0                   		mov.L	r10, r0
 109 005d E7 A1 01                		mov.L	r1, 4[r10]
  60:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	UW	unit;
  61:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
  62:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	ClearInt(intno);
 110                             		.loc 2 62 2
 111 0060 ED A1 01                		mov.L	4[r10], r1
 112 0063 05 00 00 00             		bsr	_ClearInt
  63:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	if(intno == INTNO_S12ADI0) unit = 0;
 113                             		.loc 2 63 4
 114 0067 ED A5 01                		mov.L	4[r10], r5
 115 006a 75 55 80                		cmp	#0x80, r5
 116 006d 1E                      		bne	.L8
 117                             		.loc 2 63 34 discriminator 1
 118 006e F8 A6 00                		mov.L	#0, [r10]
 119 0071 2E 0D                   		bra	.L9
 120                             	.L8:
  64:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	else if(intno == INTNO_S12ADI1) unit = 1;
 121                             		.loc 2 64 9
 122 0073 ED A5 01                		mov.L	4[r10], r5
 123 0076 75 55 81                		cmp	#0x81, r5
 124 0079 21 2D                   		bne	.L12
 125                             		.loc 2 64 39 discriminator 1
 126 007b F8 A6 01                		mov.L	#1, [r10]
 127                             	.L9:
  65:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	else return ;
  66:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
  67:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	if(ll_devcb[unit].wait_tskid) {
 128                             		.loc 2 67 19
 129 007e FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 130 0084 EC A5                   		mov.L	[r10], r5
 131 0086 6C 35                   		shll	#3, r5
 132 0088 4B 45                   		add	r4, r5
 133 008a EC 55                   		mov.L	[r5], r5
 134                             		.loc 2 67 4
 135 008c 61 05                   		cmp	#0, r5
 136 008e 20 19                   		beq	.L7
  68:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		tk_wup_tsk(ll_devcb[unit].wait_tskid);
 137                             		.loc 2 68 3
 138 0090 FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 139 0096 EC A5                   		mov.L	[r10], r5
 140 0098 6C 35                   		shll	#3, r5
 141 009a 4B 45                   		add	r4, r5
 142 009c EC 55                   		mov.L	[r5], r5
 143 009e EF 51                   		mov.L	r5, r1
 144 00a0 05 00 00 00             		bsr	_tk_wup_tsk
 145 00a4 2E 03                   		bra	.L7
 146                             	.L12:
  65:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	else return ;
 147                             		.loc 2 65 7
 148 00a6 03                      		nop
 149                             	.L7:
  69:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	}
  70:../device/adc/sysdepend/rx65n/adc_rx65n.c **** }
 150                             		.loc 2 70 1
 151 00a7 3F AA 03                		rtsd	#12, r10-r10
 152                             	.LFE6:
 155                             	_adc_convert:
 156                             	.LFB7:
  71:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
  72:../device/adc/sysdepend/rx65n/adc_rx65n.c **** /*----------------------------------------------------------------------
  73:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  * A/D convert
  74:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  */
  75:../device/adc/sysdepend/rx65n/adc_rx65n.c **** LOCAL UW adc_convert( UW unit, INT start, INT size, UW *buf )
  76:../device/adc/sysdepend/rx65n/adc_rx65n.c **** {
 157                             		.loc 2 76 1
 158 00aa 6E 7A                   		pushm	r7-r10
 159                             	.LCFI10:
 160 00ac 71 0A E4                		add	#-28, r0, r10
 161                             	.LCFI11:
 162 00af EF A0                   		mov.L	r10, r0
 163 00b1 E7 A1 03                		mov.L	r1, 12[r10]
 164 00b4 E7 A2 04                		mov.L	r2, 16[r10]
 165 00b7 E7 A3 05                		mov.L	r3, 20[r10]
 166 00ba E7 A4 06                		mov.L	r4, 24[r10]
  77:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	INT	ch, end;
  78:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	ER	err;
  79:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
  80:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	ll_devcb[unit].wait_tskid = tk_get_tid();
 167                             		.loc 2 80 30
 168 00bd 05 00 00 00             		bsr	_tk_get_tid
 169 00c1 EF 13                   		mov.L	r1, r3
 170                             		.loc 2 80 28
 171 00c3 FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 172 00c9 ED A5 03                		mov.L	12[r10], r5
 173 00cc 6C 35                   		shll	#3, r5
 174 00ce 4B 45                   		add	r4, r5
 175 00d0 E3 53                   		mov.L	r3, [r5]
  81:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	tk_can_wup(TSK_SELF);
 176                             		.loc 2 81 2
 177 00d2 66 01                   		mov.L	#0, r1
 178 00d4 05 00 00 00             		bsr	_tk_can_wup
  82:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
  83:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	if(unit == 0) {		// S12AD
 179                             		.loc 2 83 4
 180 00d8 ED A5 03                		mov.L	12[r10], r5
 181 00db 61 05                   		cmp	#0, r5
 182 00dd 21 64                   		bne	.L14
  84:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		if(start >= ADC_CH_NUM0) return (UW)E_PAR;
 183                             		.loc 2 84 5
 184 00df ED A5 04                		mov.L	16[r10], r5
 185 00e2 61 75                   		cmp	#7, r5
 186 00e4 2B 08                   		ble	.L15
 187                             		.loc 2 84 35 discriminator 1
 188 00e6 FB 56 EF                		mov.L	#-17, r5
 189 00e9 38 55 01                		bra	.L16
 190                             	.L15:
  85:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		end = start + size -1;
 191                             		.loc 2 85 15
 192 00ec ED A5 04                		mov.L	16[r10], r5
 193 00ef 06 89 A5 05             		add	20[r10].L, r5
 194                             		.loc 2 85 7
 195 00f3 60 15                   		sub	#1, r5
 196 00f5 E7 A5 01                		mov.L	r5, 4[r10]
  86:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		if(end >= ADC_CH_NUM0) return (UW)E_PAR;
 197                             		.loc 2 86 5
 198 00f8 ED A5 01                		mov.L	4[r10], r5
 199 00fb 61 75                   		cmp	#7, r5
 200 00fd 2B 08                   		ble	.L17
 201                             		.loc 2 86 33 discriminator 1
 202 00ff FB 56 EF                		mov.L	#-17, r5
 203 0102 38 3C 01                		bra	.L16
 204                             	.L17:
  87:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
  88:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		for(ch = start; ch <= end; ch++) {
 205                             		.loc 2 88 10
 206 0105 ED A5 04                		mov.L	16[r10], r5
 207 0108 E3 A5                   		mov.L	r5, [r10]
 208                             		.loc 2 88 3
 209 010a 2E 2B                   		bra	.L18
 210                             	.L19:
  89:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 			*(UH*)(ADC_ADANSA0(0)) |= (1<<ch);
 211                             		.loc 2 89 11 discriminator 3
 212 010c FB 5E 00 90 08          		mov.L	#0x89000, r5
 213 0111 62 45                   		add	#4, r5
 214                             		.loc 2 89 27 discriminator 3
 215 0113 DC 55                   		mov.W	[r5], r5
 216 0115 DF 54                   		mov.W	r5, r4
 217                             		.loc 2 89 32 discriminator 3
 218 0117 66 13                   		mov.L	#1, r3
 219 0119 EC A5                   		mov.L	[r10], r5
 220 011b EF 37                   		mov.L	r3, r7
 221 011d FD 62 57                		shll	r5, r7
 222 0120 EF 75                   		mov.L	r7, r5
 223                             		.loc 2 89 27 discriminator 3
 224 0122 57 45                   		or	r4, r5
 225 0124 DF 54                   		mov.W	r5, r4
 226                             		.loc 2 89 11 discriminator 3
 227 0126 FB 5E 00 90 08          		mov.L	#0x89000, r5
 228 012b 62 45                   		add	#4, r5
 229                             		.loc 2 89 27 discriminator 3
 230 012d D3 54                   		mov.W	r4, [r5]
  88:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 			*(UH*)(ADC_ADANSA0(0)) |= (1<<ch);
 231                             		.loc 2 88 32 discriminator 3
 232 012f EC A5                   		mov.L	[r10], r5
 233 0131 62 15                   		add	#1, r5
 234 0133 E3 A5                   		mov.L	r5, [r10]
 235                             	.L18:
  88:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 			*(UH*)(ADC_ADANSA0(0)) |= (1<<ch);
 236                             		.loc 2 88 3 discriminator 1
 237 0135 EC A4                   		mov.L	[r10], r4
 238 0137 ED A5 01                		mov.L	4[r10], r5
 239 013a 47 54                   		cmp	r5, r4
 240 013c 2B D0                   		ble	.L19
 241 013e 38 91 00                		bra	.L20
 242                             	.L14:
  90:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		}
  91:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	} else {		// S12AD1
  92:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		if(start >= ADC_CH_NUM1) return (UW)E_PAR;
 243                             		.loc 2 92 5
 244 0141 ED A5 04                		mov.L	16[r10], r5
 245 0144 75 55 14                		cmp	#20, r5
 246 0147 2B 08                   		ble	.L21
 247                             		.loc 2 92 35 discriminator 1
 248 0149 FB 56 EF                		mov.L	#-17, r5
 249 014c 38 F2 00                		bra	.L16
 250                             	.L21:
  93:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		end = start + size -1;
 251                             		.loc 2 93 15
 252 014f ED A5 04                		mov.L	16[r10], r5
 253 0152 06 89 A5 05             		add	20[r10].L, r5
 254                             		.loc 2 93 7
 255 0156 60 15                   		sub	#1, r5
 256 0158 E7 A5 01                		mov.L	r5, 4[r10]
  94:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		if(end >= ADC_CH_NUM1) return (UW)E_PAR;
 257                             		.loc 2 94 5
 258 015b ED A5 01                		mov.L	4[r10], r5
 259 015e 75 55 14                		cmp	#20, r5
 260 0161 2B 08                   		ble	.L22
 261                             		.loc 2 94 33 discriminator 1
 262 0163 FB 56 EF                		mov.L	#-17, r5
 263 0166 38 D8 00                		bra	.L16
 264                             	.L22:
  95:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
  96:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		for(ch = start; ch <= end; ch++) {
 265                             		.loc 2 96 10
 266 0169 ED A5 04                		mov.L	16[r10], r5
 267 016c E3 A5                   		mov.L	r5, [r10]
 268                             		.loc 2 96 3
 269 016e 2E 58                   		bra	.L23
 270                             	.L26:
  97:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 			if(ch <= 7) {
 271                             		.loc 2 97 6
 272 0170 EC A5                   		mov.L	[r10], r5
 273 0172 61 75                   		cmp	#7, r5
 274 0174 2A 27                   		bgt	.L24
  98:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 				*(UH*)(ADC_ADANSA0(1)) |= (1<<ch);
 275                             		.loc 2 98 12
 276 0176 FB 5E 00 91 08          		mov.L	#0x89100, r5
 277 017b 62 45                   		add	#4, r5
 278                             		.loc 2 98 28
 279 017d DC 55                   		mov.W	[r5], r5
 280 017f DF 54                   		mov.W	r5, r4
 281                             		.loc 2 98 33
 282 0181 66 13                   		mov.L	#1, r3
 283 0183 EC A5                   		mov.L	[r10], r5
 284 0185 EF 37                   		mov.L	r3, r7
 285 0187 FD 62 57                		shll	r5, r7
 286 018a EF 75                   		mov.L	r7, r5
 287                             		.loc 2 98 28
 288 018c 57 45                   		or	r4, r5
 289 018e DF 54                   		mov.W	r5, r4
 290                             		.loc 2 98 12
 291 0190 FB 5E 00 91 08          		mov.L	#0x89100, r5
 292 0195 62 45                   		add	#4, r5
 293                             		.loc 2 98 28
 294 0197 D3 54                   		mov.W	r4, [r5]
 295 0199 2E 27                   		bra	.L25
 296                             	.L24:
  99:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 			} else {
 100:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 				*(UH*)(ADC_ADANSA1(1)) |= (1<<(ch-8));
 297                             		.loc 2 100 12
 298 019b FB 5E 00 91 08          		mov.L	#0x89100, r5
 299 01a0 62 65                   		add	#6, r5
 300                             		.loc 2 100 28
 301 01a2 DC 55                   		mov.W	[r5], r5
 302 01a4 DF 54                   		mov.W	r5, r4
 303                             		.loc 2 100 38
 304 01a6 EC A5                   		mov.L	[r10], r5
 305 01a8 60 85                   		sub	#8, r5
 306                             		.loc 2 100 33
 307 01aa 66 13                   		mov.L	#1, r3
 308 01ac EF 37                   		mov.L	r3, r7
 309 01ae FD 62 57                		shll	r5, r7
 310 01b1 EF 75                   		mov.L	r7, r5
 311                             		.loc 2 100 28
 312 01b3 57 45                   		or	r4, r5
 313 01b5 DF 54                   		mov.W	r5, r4
 314                             		.loc 2 100 12
 315 01b7 FB 5E 00 91 08          		mov.L	#0x89100, r5
 316 01bc 62 65                   		add	#6, r5
 317                             		.loc 2 100 28
 318 01be D3 54                   		mov.W	r4, [r5]
 319                             	.L25:
  96:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 			if(ch <= 7) {
 320                             		.loc 2 96 32 discriminator 2
 321 01c0 EC A5                   		mov.L	[r10], r5
 322 01c2 62 15                   		add	#1, r5
 323 01c4 E3 A5                   		mov.L	r5, [r10]
 324                             	.L23:
  96:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 			if(ch <= 7) {
 325                             		.loc 2 96 3 discriminator 1
 326 01c6 EC A4                   		mov.L	[r10], r4
 327 01c8 ED A5 01                		mov.L	4[r10], r5
 328 01cb 47 54                   		cmp	r5, r4
 329 01cd 2B A3                   		ble	.L26
 330                             	.L20:
 101:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 			}
 102:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		}
 103:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	}
 104:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 105:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	out_h(ADC_ADCSR(unit), ADCSR_ADST | ADCSR_ADIE);	// Start Covert
 331                             		.loc 2 105 8
 332 01cf FB 52 00 00 00 00       		mov.L	#_ba, r5
 333 01d5 ED A4 03                		mov.L	12[r10], r4
 334 01d8 FE 64 55                		mov.L	[r4,r5], r5
 335                             		.loc 2 105 2
 336 01db FB 2A 00 90             		mov	#-28672, r2
 337 01df EF 51                   		mov.L	r5, r1
 338 01e1 39 1F FE                		bsr	_out_h
 106:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 107:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	err = tk_slp_tsk(DEVCNF_ADC_TMOSCAN);
 339                             		.loc 2 107 8
 340 01e4 FB 1A E8 03             		mov.L	#0x3e8, r1
 341 01e8 05 00 00 00             		bsr	_tk_slp_tsk
 342 01ec E7 A1 02                		mov.L	r1, 8[r10]
 108:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	if(err != E_OK) return (UW)err;
 343                             		.loc 2 108 4
 344 01ef ED A5 02                		mov.L	8[r10], r5
 345 01f2 61 05                   		cmp	#0, r5
 346 01f4 16                      		beq	.L27
 347                             		.loc 2 108 25 discriminator 1
 348 01f5 ED A5 02                		mov.L	8[r10], r5
 349 01f8 2E 46                   		bra	.L16
 350                             	.L27:
 109:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 110:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	for(ch = start; ch <= end; ch++) {	/* Read data */
 351                             		.loc 2 110 9
 352 01fa ED A5 04                		mov.L	16[r10], r5
 353 01fd E3 A5                   		mov.L	r5, [r10]
 354                             		.loc 2 110 2
 355 01ff 2E 33                   		bra	.L28
 356                             	.L29:
 111:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		*buf++ = (UW)in_h(ADC_ADDR(unit, ch));
 357                             		.loc 2 111 21 discriminator 3
 358 0201 FB 52 00 00 00 00       		mov.L	#_ba, r5
 359 0207 ED A4 03                		mov.L	12[r10], r4
 360 020a FE 64 54                		mov.L	[r4,r5], r4
 361 020d EC A5                   		mov.L	[r10], r5
 362 020f 71 55 10                		add	#16, r5
 363 0212 4B 55                   		add	r5, r5
 364                             		.loc 2 111 16 discriminator 3
 365 0214 4B 45                   		add	r4, r5
 366 0216 EF 51                   		mov.L	r5, r1
 367 0218 39 16 FE                		bsr	_in_h
 368 021b EF 15                   		mov.L	r1, r5
 369 021d DF 53                   		mov.W	r5, r3
 370                             		.loc 2 111 7 discriminator 3
 371 021f ED A5 06                		mov.L	24[r10], r5
 372 0222 71 54 04                		add	#4, r5, r4
 373 0225 E7 A4 06                		mov.L	r4, 24[r10]
 374                             		.loc 2 111 12 discriminator 3
 375 0228 5F 34                   		movu.W	r3, r4
 376                             		.loc 2 111 10 discriminator 3
 377 022a E3 54                   		mov.L	r4, [r5]
 110:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		*buf++ = (UW)in_h(ADC_ADDR(unit, ch));
 378                             		.loc 2 110 31 discriminator 3
 379 022c EC A5                   		mov.L	[r10], r5
 380 022e 62 15                   		add	#1, r5
 381 0230 E3 A5                   		mov.L	r5, [r10]
 382                             	.L28:
 110:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		*buf++ = (UW)in_h(ADC_ADDR(unit, ch));
 383                             		.loc 2 110 2 discriminator 1
 384 0232 EC A4                   		mov.L	[r10], r4
 385 0234 ED A5 01                		mov.L	4[r10], r5
 386 0237 47 54                   		cmp	r5, r4
 387 0239 2B C8                   		ble	.L29
 112:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	}
 113:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	return (UW)size;
 388                             		.loc 2 113 9
 389 023b ED A5 05                		mov.L	20[r10], r5
 390                             		.balign 8,3,1
 391                             	.L16:
 114:../device/adc/sysdepend/rx65n/adc_rx65n.c **** }
 392                             		.loc 2 114 1
 393 023e EF 51                   		mov.L	r5, r1
 394 0240 3F 7A 0B                		rtsd	#44, r7-r10
 395                             	.LFE7:
 397                             		.global	_dev_adc_llctl
 399                             	_dev_adc_llctl:
 400                             	.LFB8:
 115:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 116:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 117:../device/adc/sysdepend/rx65n/adc_rx65n.c **** /*----------------------------------------------------------------------
 118:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  * Low level device control
 119:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  */
 120:../device/adc/sysdepend/rx65n/adc_rx65n.c **** EXPORT W dev_adc_llctl( UW unit, INT cmd, UW p1, UW p2, UW *pp)
 121:../device/adc/sysdepend/rx65n/adc_rx65n.c **** {
 401                             		.loc 2 121 1
 402 0243 7E AA                   		push.l	r10
 403                             	.LCFI12:
 404 0245 71 0A E8                		add	#-24, r0, r10
 405                             	.LCFI13:
 406 0248 EF A0                   		mov.L	r10, r0
 407 024a 75 45 20                		mov.L	#32, r5
 408 024d 4B A5                   		add	r10, r5
 409 024f E7 A1 01                		mov.L	r1, 4[r10]
 410 0252 E7 A2 02                		mov.L	r2, 8[r10]
 411 0255 E7 A3 03                		mov.L	r3, 12[r10]
 412 0258 E7 A4 04                		mov.L	r4, 16[r10]
 122:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	UW	rtn = (UW)E_OK;
 413                             		.loc 2 122 5
 414 025b F8 A6 00                		mov.L	#0, [r10]
 123:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 124:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	switch(cmd) {
 415                             		.loc 2 124 2
 416 025e ED A4 02                		mov.L	8[r10], r4
 417 0261 61 14                   		cmp	#1, r4
 418 0263 20 70                   		beq	.L31
 419 0265 ED A4 02                		mov.L	8[r10], r4
 420 0268 61 14                   		cmp	#1, r4
 421 026a 2A 0C                   		bgt	.L32
 422 026c ED A5 02                		mov.L	8[r10], r5
 423 026f 61 05                   		cmp	#0, r5
 424 0271 20 16                   		beq	.L33
 425 0273 38 C8 00                		bra	.L34
 426                             	.L32:
 427 0276 ED A4 02                		mov.L	8[r10], r4
 428 0279 61 24                   		cmp	#2, r4
 429 027b 20 71                   		beq	.L35
 430 027d ED A5 02                		mov.L	8[r10], r5
 431 0280 61 35                   		cmp	#3, r5
 432 0282 20 7C                   		beq	.L36
 433 0284 38 B7 00                		bra	.L34
 434                             	.L33:
 125:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	case LLD_ADC_OPEN:	/* Open A/DC */
 126:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADANSA0(unit), 0);
 435                             		.loc 2 126 9
 436 0287 FB 52 00 00 00 00       		mov.L	#_ba, r5
 437 028d ED A4 01                		mov.L	4[r10], r4
 438 0290 FE 64 55                		mov.L	[r4,r5], r5
 439                             		.loc 2 126 3
 440 0293 62 45                   		add	#4, r5
 441 0295 66 02                   		mov	#0, r2
 442 0297 EF 51                   		mov.L	r5, r1
 443 0299 39 67 FD                		bsr	_out_h
 127:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		if(unit == 1) {
 444                             		.loc 2 127 5
 445 029c ED A5 01                		mov.L	4[r10], r5
 446 029f 61 15                   		cmp	#1, r5
 447 02a1 21 17                   		bne	.L37
 128:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 			out_h(ADC_ADANSA1(unit), 0);
 448                             		.loc 2 128 10
 449 02a3 FB 52 00 00 00 00       		mov.L	#_ba, r5
 450 02a9 ED A4 01                		mov.L	4[r10], r4
 451 02ac FE 64 55                		mov.L	[r4,r5], r5
 452                             		.loc 2 128 4
 453 02af 62 65                   		add	#6, r5
 454 02b1 66 02                   		mov	#0, r2
 455 02b3 EF 51                   		mov.L	r5, r1
 456 02b5 39 4B FD                		bsr	_out_h
 457                             	.L37:
 129:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		}
 130:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		EnableInt(ll_devcb[unit].intno, unit?DEVCNF_ADC1_INTPRI:DEVCNF_ADC0_INTPRI);
 458                             		.loc 2 130 3
 459 02b8 FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 460 02be ED A5 01                		mov.L	4[r10], r5
 461 02c1 6C 35                   		shll	#3, r5
 462 02c3 4B 45                   		add	r4, r5
 463 02c5 62 45                   		add	#4, r5
 464 02c7 EC 55                   		mov.L	[r5], r5
 465 02c9 66 52                   		mov.L	#5, r2
 466 02cb EF 51                   		mov.L	r5, r1
 467 02cd 05 00 00 00             		bsr	_EnableInt
 131:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		break;
 468                             		.loc 2 131 3
 469 02d1 2E 6A                   		bra	.L34
 470                             	.L31:
 132:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 133:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	case LLD_ADC_CLOSE:	/* Close　A/DC */
 134:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		DisableInt(ll_devcb[unit].intno);
 471                             		.loc 2 134 3
 472 02d3 FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 473 02d9 ED A5 01                		mov.L	4[r10], r5
 474 02dc 6C 35                   		shll	#3, r5
 475 02de 4B 45                   		add	r4, r5
 476 02e0 62 45                   		add	#4, r5
 477 02e2 EC 55                   		mov.L	[r5], r5
 478 02e4 EF 51                   		mov.L	r5, r1
 479 02e6 05 00 00 00             		bsr	_DisableInt
 135:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		break;
 480                             		.loc 2 135 3
 481 02ea 2E 51                   		bra	.L34
 482                             	.L35:
 136:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	
 137:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	case LLD_ADC_READ:	/* Read A/DC data */
 138:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		rtn = adc_convert(unit, p1, p2, pp);
 483                             		.loc 2 138 9
 484 02ec ED A2 03                		mov.L	12[r10], r2
 485 02ef ED A3 04                		mov.L	16[r10], r3
 486 02f2 EC 54                   		mov.L	[r5], r4
 487 02f4 ED A1 01                		mov.L	4[r10], r1
 488 02f7 39 B3 FD                		bsr	_adc_convert
 489 02fa E3 A1                   		mov.L	r1, [r10]
 139:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		break;
 490                             		.loc 2 139 3
 491 02fc 2E 3F                   		bra	.L34
 492                             	.L36:
 140:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	
 141:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	case LLD_ADC_RSIZE:	/* Get read data size */
 142:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		if((p1 > 7 && p1 <16) || p1 > 31) return (UW)E_PAR;
 493                             		.loc 2 142 5
 494 02fe ED A5 03                		mov.L	12[r10], r5
 495 0301 61 75                   		cmp	#7, r5
 496 0303 25 09                   		bleu	.L38
 497                             		.loc 2 142 14 discriminator 1
 498 0305 ED A5 03                		mov.L	12[r10], r5
 499 0308 61 F5                   		cmp	#15, r5
 500 030a 25 0A                   		bleu	.L39
 501                             	.L38:
 502                             		.loc 2 142 25 discriminator 4
 503 030c ED A5 03                		mov.L	12[r10], r5
 504 030f 75 55 1F                		cmp	#31, r5
 505 0312 25 07                   		bleu	.L40
 506                             	.L39:
 507                             		.loc 2 142 44 discriminator 5
 508 0314 FB 56 EF                		mov.L	#-17, r5
 509 0317 2E 26                   		bra	.L41
 510                             	.L40:
 143:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		rtn = (unit?ADC_CH_NUM1:ADC_CH_NUM0) - (p1<=7?p1:p1-8);
 511                             		.loc 2 143 26
 512 0319 ED A5 01                		mov.L	4[r10], r5
 513 031c 61 05                   		cmp	#0, r5
 514 031e 15                      		beq	.L42
 515                             		.loc 2 143 26 is_stmt 0 discriminator 1
 516 031f 75 44 15                		mov.L	#21, r4
 517 0322 0B                      		bra	.L43
 518                             	.L42:
 519                             		.loc 2 143 26 discriminator 2
 520 0323 66 84                   		mov.L	#8, r4
 521                             	.L43:
 522                             		.loc 2 143 51 is_stmt 1 discriminator 4
 523 0325 ED A5 03                		mov.L	12[r10], r5
 524 0328 61 75                   		cmp	#7, r5
 525 032a 25 08                   		bleu	.L44
 526                             		.loc 2 143 51 is_stmt 0 discriminator 5
 527 032c ED A5 03                		mov.L	12[r10], r5
 528 032f 60 85                   		sub	#8, r5
 529 0331 0C                      		bra	.L45
 530                             	.L44:
 531                             		.loc 2 143 51 discriminator 6
 532 0332 ED A5 03                		mov.L	12[r10], r5
 533                             	.L45:
 534                             		.loc 2 143 7 is_stmt 1 discriminator 8
 535 0335 FF 05 54                		sub	r5, r4, r5
 536 0338 E3 A5                   		mov.L	r5, [r10]
 144:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		if(rtn < 0 ) rtn = 0;
 145:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		break;
 537                             		.loc 2 145 3 discriminator 8
 538 033a 03                      		nop
 539                             		.balign 8,3,1
 540                             	.L34:
 146:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 147:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	}
 148:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	
 149:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	return rtn;
 541                             		.loc 2 149 9
 542 033b EC A5                   		mov.L	[r10], r5
 543                             	.L41:
 150:../device/adc/sysdepend/rx65n/adc_rx65n.c **** }
 544                             		.loc 2 150 1
 545 033d EF 51                   		mov.L	r5, r1
 546 033f 3F AA 07                		rtsd	#28, r10-r10
 547                             	.LFE8:
 549                             		.global	_dev_adc_llinit
 551                             	_dev_adc_llinit:
 552                             	.LFB9:
 151:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 152:../device/adc/sysdepend/rx65n/adc_rx65n.c **** /*----------------------------------------------------------------------
 153:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  * Device initialization
 154:../device/adc/sysdepend/rx65n/adc_rx65n.c ****  */
 155:../device/adc/sysdepend/rx65n/adc_rx65n.c **** EXPORT ER dev_adc_llinit( T_ADC_DCB *p_dcb)
 156:../device/adc/sysdepend/rx65n/adc_rx65n.c **** {
 553                             		.loc 2 156 1
 554 0342 6E 6A                   		pushm	r6-r10
 555                             	.LCFI14:
 556 0344 71 0A E8                		add	#-24, r0, r10
 557                             	.LCFI15:
 558 0347 EF A0                   		mov.L	r10, r0
 559 0349 E7 A1 05                		mov.L	r1, 20[r10]
 157:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	const T_DINT	dint = {
 560                             		.loc 2 157 15
 561 034c F9 A6 03 01             		mov.L	#1, 12[r10]
 562 0350 F9 A2 04 00 00 00 00    		mov.L	#_adc_inthdr, 16[r10]
 158:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		.intatr	= TA_HLNG,
 159:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		.inthdr	= adc_inthdr,
 160:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	};
 161:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	UW	unit;
 162:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	UINT	intno;
 163:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	ER	err;
 164:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 165:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	unit = p_dcb->unit;
 563                             		.loc 2 165 7
 564 0357 ED A5 05                		mov.L	20[r10], r5
 565 035a EC 55                   		mov.L	[r5], r5
 566 035c E3 A5                   		mov.L	r5, [r10]
 166:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 167:../device/adc/sysdepend/rx65n/adc_rx65n.c **** #if DEVCONF_ADC_INIT_MSTP		// Initialize module stop
 168:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	UINT	sts;
 169:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	UW	mstpa;
 170:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 171:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	mstpa = (1<<19) | (1<<((unit)?16:17));
 172:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	DI(sts);
 173:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	out_h(SYSTEM_PRCR, 0xA502);	/* Disable Register Protect */
 174:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	*(UW*)(MSTPCRA) &= ~mstpa;	/* Release module stop */
 175:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	out_h(SYSTEM_PRCR, 0xA500);	/* Enable Register protect */
 176:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	EI(sts);
 177:../device/adc/sysdepend/rx65n/adc_rx65n.c **** #endif	/* DEVCONF_ADC_INIT_MSTP */
 178:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 179:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	/* ADC device initialize */
 180:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	out_h(ADC_ADCER(unit), ADCER_INI);
 567                             		.loc 2 180 8
 568 035e FB 52 00 00 00 00       		mov.L	#_ba, r5
 569 0364 EC A4                   		mov.L	[r10], r4
 570 0366 FE 64 55                		mov.L	[r4,r5], r5
 571                             		.loc 2 180 2
 572 0369 62 E5                   		add	#14, r5
 573 036b 75 42 20                		mov	#32, r2
 574 036e EF 51                   		mov.L	r5, r1
 575 0370 39 90 FC                		bsr	_out_h
 181:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 182:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 183:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	/* Set sampling rate */
 184:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	if(unit == 0) {
 576                             		.loc 2 184 4
 577 0373 EC A5                   		mov.L	[r10], r5
 578 0375 61 05                   		cmp	#0, r5
 579 0377 3B 86 00                		bne	.L47
 185:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(0,0), DEVCNF_ADC0_ADSSTR0_INI);
 580                             		.loc 2 185 9
 581 037a FB 5E 00 90 08          		mov.L	#0x89000, r5
 582                             		.loc 2 185 3
 583 037f 72 55 E0 00             		add	#0xe0, r5
 584 0383 66 B2                   		mov	#11, r2
 585 0385 EF 51                   		mov.L	r5, r1
 586 0387 39 79 FC                		bsr	_out_h
 186:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(0,1), DEVCNF_ADC0_ADSSTR1_INI);
 587                             		.loc 2 186 9
 588 038a FB 5E 00 90 08          		mov.L	#0x89000, r5
 589                             		.loc 2 186 3
 590 038f 72 55 E1 00             		add	#0xe1, r5
 591 0393 66 B2                   		mov	#11, r2
 592 0395 EF 51                   		mov.L	r5, r1
 593 0397 39 69 FC                		bsr	_out_h
 187:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(0,2), DEVCNF_ADC0_ADSSTR2_INI);
 594                             		.loc 2 187 9
 595 039a FB 5E 00 90 08          		mov.L	#0x89000, r5
 596                             		.loc 2 187 3
 597 039f 72 55 E2 00             		add	#0xe2, r5
 598 03a3 66 B2                   		mov	#11, r2
 599 03a5 EF 51                   		mov.L	r5, r1
 600 03a7 39 59 FC                		bsr	_out_h
 188:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(0,3), DEVCNF_ADC0_ADSSTR3_INI);
 601                             		.loc 2 188 9
 602 03aa FB 5E 00 90 08          		mov.L	#0x89000, r5
 603                             		.loc 2 188 3
 604 03af 72 55 E3 00             		add	#0xe3, r5
 605 03b3 66 B2                   		mov	#11, r2
 606 03b5 EF 51                   		mov.L	r5, r1
 607 03b7 39 49 FC                		bsr	_out_h
 189:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(0,4), DEVCNF_ADC0_ADSSTR4_INI);
 608                             		.loc 2 189 9
 609 03ba FB 5E 00 90 08          		mov.L	#0x89000, r5
 610                             		.loc 2 189 3
 611 03bf 72 55 E4 00             		add	#0xe4, r5
 612 03c3 66 B2                   		mov	#11, r2
 613 03c5 EF 51                   		mov.L	r5, r1
 614 03c7 39 39 FC                		bsr	_out_h
 190:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(0,5), DEVCNF_ADC0_ADSSTR5_INI);
 615                             		.loc 2 190 9
 616 03ca FB 5E 00 90 08          		mov.L	#0x89000, r5
 617                             		.loc 2 190 3
 618 03cf 72 55 E5 00             		add	#0xe5, r5
 619 03d3 66 B2                   		mov	#11, r2
 620 03d5 EF 51                   		mov.L	r5, r1
 621 03d7 39 29 FC                		bsr	_out_h
 191:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(0,6), DEVCNF_ADC0_ADSSTR6_INI);
 622                             		.loc 2 191 9
 623 03da FB 5E 00 90 08          		mov.L	#0x89000, r5
 624                             		.loc 2 191 3
 625 03df 72 55 E6 00             		add	#0xe6, r5
 626 03e3 66 B2                   		mov	#11, r2
 627 03e5 EF 51                   		mov.L	r5, r1
 628 03e7 39 19 FC                		bsr	_out_h
 192:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(0,7), DEVCNF_ADC0_ADSSTR7_INI);
 629                             		.loc 2 192 9
 630 03ea FB 5E 00 90 08          		mov.L	#0x89000, r5
 631                             		.loc 2 192 3
 632 03ef 72 55 E7 00             		add	#0xe7, r5
 633 03f3 66 B2                   		mov	#11, r2
 634 03f5 EF 51                   		mov.L	r5, r1
 635 03f7 39 09 FC                		bsr	_out_h
 636 03fa 38 21 01                		bra	.L48
 637                             	.L47:
 193:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	} else {
 194:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(1,0), DEVCNF_ADC1_ADSSTR0_INI);
 638                             		.loc 2 194 9
 639 03fd FB 5E 00 91 08          		mov.L	#0x89100, r5
 640                             		.loc 2 194 3
 641 0402 72 55 E0 00             		add	#0xe0, r5
 642 0406 66 B2                   		mov	#11, r2
 643 0408 EF 51                   		mov.L	r5, r1
 644 040a 39 F6 FB                		bsr	_out_h
 195:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(1,1), DEVCNF_ADC1_ADSSTR1_INI);
 645                             		.loc 2 195 9
 646 040d FB 5E 00 91 08          		mov.L	#0x89100, r5
 647                             		.loc 2 195 3
 648 0412 72 55 E1 00             		add	#0xe1, r5
 649 0416 66 B2                   		mov	#11, r2
 650 0418 EF 51                   		mov.L	r5, r1
 651 041a 39 E6 FB                		bsr	_out_h
 196:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(1,2), DEVCNF_ADC1_ADSSTR2_INI);
 652                             		.loc 2 196 9
 653 041d FB 5E 00 91 08          		mov.L	#0x89100, r5
 654                             		.loc 2 196 3
 655 0422 72 55 E2 00             		add	#0xe2, r5
 656 0426 66 B2                   		mov	#11, r2
 657 0428 EF 51                   		mov.L	r5, r1
 658 042a 39 D6 FB                		bsr	_out_h
 197:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(1,3), DEVCNF_ADC1_ADSSTR3_INI);
 659                             		.loc 2 197 9
 660 042d FB 5E 00 91 08          		mov.L	#0x89100, r5
 661                             		.loc 2 197 3
 662 0432 72 55 E3 00             		add	#0xe3, r5
 663 0436 66 B2                   		mov	#11, r2
 664 0438 EF 51                   		mov.L	r5, r1
 665 043a 39 C6 FB                		bsr	_out_h
 198:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(1,4), DEVCNF_ADC1_ADSSTR4_INI);
 666                             		.loc 2 198 9
 667 043d FB 5E 00 91 08          		mov.L	#0x89100, r5
 668                             		.loc 2 198 3
 669 0442 72 55 E4 00             		add	#0xe4, r5
 670 0446 66 B2                   		mov	#11, r2
 671 0448 EF 51                   		mov.L	r5, r1
 672 044a 39 B6 FB                		bsr	_out_h
 199:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(1,5), DEVCNF_ADC1_ADSSTR5_INI);
 673                             		.loc 2 199 9
 674 044d FB 5E 00 91 08          		mov.L	#0x89100, r5
 675                             		.loc 2 199 3
 676 0452 72 55 E5 00             		add	#0xe5, r5
 677 0456 66 B2                   		mov	#11, r2
 678 0458 EF 51                   		mov.L	r5, r1
 679 045a 39 A6 FB                		bsr	_out_h
 200:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(1,6), DEVCNF_ADC1_ADSSTR6_INI);
 680                             		.loc 2 200 9
 681 045d FB 5E 00 91 08          		mov.L	#0x89100, r5
 682                             		.loc 2 200 3
 683 0462 72 55 E6 00             		add	#0xe6, r5
 684 0466 66 B2                   		mov	#11, r2
 685 0468 EF 51                   		mov.L	r5, r1
 686 046a 39 96 FB                		bsr	_out_h
 201:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(1,7), DEVCNF_ADC1_ADSSTR7_INI);
 687                             		.loc 2 201 9
 688 046d FB 5E 00 91 08          		mov.L	#0x89100, r5
 689                             		.loc 2 201 3
 690 0472 72 55 E7 00             		add	#0xe7, r5
 691 0476 66 B2                   		mov	#11, r2
 692 0478 EF 51                   		mov.L	r5, r1
 693 047a 39 86 FB                		bsr	_out_h
 202:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(1,8), DEVCNF_ADC1_ADSSTR0_INI);
 694                             		.loc 2 202 9
 695 047d FB 5E 00 91 08          		mov.L	#0x89100, r5
 696                             		.loc 2 202 3
 697 0482 72 55 E8 00             		add	#0xe8, r5
 698 0486 66 B2                   		mov	#11, r2
 699 0488 EF 51                   		mov.L	r5, r1
 700 048a 39 76 FB                		bsr	_out_h
 203:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(1,9), DEVCNF_ADC1_ADSSTR1_INI);
 701                             		.loc 2 203 9
 702 048d FB 5E 00 91 08          		mov.L	#0x89100, r5
 703                             		.loc 2 203 3
 704 0492 72 55 E9 00             		add	#0xe9, r5
 705 0496 66 B2                   		mov	#11, r2
 706 0498 EF 51                   		mov.L	r5, r1
 707 049a 39 66 FB                		bsr	_out_h
 204:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(1,10), DEVCNF_ADC1_ADSSTR2_INI);
 708                             		.loc 2 204 9
 709 049d FB 5E 00 91 08          		mov.L	#0x89100, r5
 710                             		.loc 2 204 3
 711 04a2 72 55 EA 00             		add	#0xea, r5
 712 04a6 66 B2                   		mov	#11, r2
 713 04a8 EF 51                   		mov.L	r5, r1
 714 04aa 39 56 FB                		bsr	_out_h
 205:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(1,11), DEVCNF_ADC1_ADSSTR3_INI);
 715                             		.loc 2 205 9
 716 04ad FB 5E 00 91 08          		mov.L	#0x89100, r5
 717                             		.loc 2 205 3
 718 04b2 72 55 EB 00             		add	#0xeb, r5
 719 04b6 66 B2                   		mov	#11, r2
 720 04b8 EF 51                   		mov.L	r5, r1
 721 04ba 39 46 FB                		bsr	_out_h
 206:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(1,12), DEVCNF_ADC1_ADSSTR4_INI);
 722                             		.loc 2 206 9
 723 04bd FB 5E 00 91 08          		mov.L	#0x89100, r5
 724                             		.loc 2 206 3
 725 04c2 72 55 EC 00             		add	#0xec, r5
 726 04c6 66 B2                   		mov	#11, r2
 727 04c8 EF 51                   		mov.L	r5, r1
 728 04ca 39 36 FB                		bsr	_out_h
 207:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(1,13), DEVCNF_ADC1_ADSSTR5_INI);
 729                             		.loc 2 207 9
 730 04cd FB 5E 00 91 08          		mov.L	#0x89100, r5
 731                             		.loc 2 207 3
 732 04d2 72 55 ED 00             		add	#0xed, r5
 733 04d6 66 B2                   		mov	#11, r2
 734 04d8 EF 51                   		mov.L	r5, r1
 735 04da 39 26 FB                		bsr	_out_h
 208:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(1,14), DEVCNF_ADC1_ADSSTR6_INI);
 736                             		.loc 2 208 9
 737 04dd FB 5E 00 91 08          		mov.L	#0x89100, r5
 738                             		.loc 2 208 3
 739 04e2 72 55 EE 00             		add	#0xee, r5
 740 04e6 66 B2                   		mov	#11, r2
 741 04e8 EF 51                   		mov.L	r5, r1
 742 04ea 39 16 FB                		bsr	_out_h
 209:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTR(1,15), DEVCNF_ADC1_ADSSTR7_INI);
 743                             		.loc 2 209 9
 744 04ed FB 5E 00 91 08          		mov.L	#0x89100, r5
 745                             		.loc 2 209 3
 746 04f2 72 55 EF 00             		add	#0xef, r5
 747 04f6 66 B2                   		mov	#11, r2
 748 04f8 EF 51                   		mov.L	r5, r1
 749 04fa 39 06 FB                		bsr	_out_h
 210:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTRL, DEVCNF_ADC1_ADSSTRL_INI);
 750                             		.loc 2 210 3
 751 04fd 66 B2                   		mov	#11, r2
 752 04ff FB 1E DD 91 08          		mov.L	#0x891dd, r1
 753 0504 39 FC FA                		bsr	_out_h
 211:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTRT, DEVCNF_ADC1_ADSSTRT_INI);
 754                             		.loc 2 211 3
 755 0507 66 B2                   		mov	#11, r2
 756 0509 FB 1E DE 91 08          		mov.L	#0x891de, r1
 757 050e 39 F2 FA                		bsr	_out_h
 212:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_h(ADC_ADSSTRO, DEVCNF_ADC1_ADSSTRO_INI);
 758                             		.loc 2 212 3
 759 0511 66 B2                   		mov	#11, r2
 760 0513 FB 1E DF 91 08          		mov.L	#0x891df, r1
 761 0518 39 E8 FA                		bsr	_out_h
 762                             	.L48:
 213:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	}
 214:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 215:../device/adc/sysdepend/rx65n/adc_rx65n.c **** #if DEVCONF_ADC_SET_PERI	// Set Software Configurable Interrupt
 216:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	intno = unit?INTNO_S12ADI1:INTNO_S12ADI0;
 763                             		.loc 2 216 28
 764 051b EC A5                   		mov.L	[r10], r5
 765 051d 61 05                   		cmp	#0, r5
 766 051f 15                      		beq	.L49
 767                             		.loc 2 216 28 is_stmt 0 discriminator 1
 768 0520 75 45 81                		mov.L	#0x81, r5
 769 0523 0C                      		bra	.L50
 770                             	.L49:
 771                             		.loc 2 216 28 discriminator 2
 772 0524 75 45 80                		mov.L	#0x80, r5
 773                             	.L50:
 774                             		.loc 2 216 8 is_stmt 1 discriminator 4
 775 0527 E7 A5 01                		mov.L	r5, 4[r10]
 217:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 218:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	out_b(ICU_IER(intno), (in_b(ICU_IER(intno)) & ~(ICU_IER_IEN(intno))));
 776                             		.loc 2 218 8 discriminator 4
 777 052a ED A5 01                		mov.L	4[r10], r5
 778 052d 68 35                   		shlr	#3, r5
 779                             		.loc 2 218 2 discriminator 4
 780 052f 73 56 00 72 08          		add	#0x87200, r5, r6
 781                             		.loc 2 218 30 discriminator 4
 782 0534 ED A5 01                		mov.L	4[r10], r5
 783 0537 68 35                   		shlr	#3, r5
 784                             		.loc 2 218 25 discriminator 4
 785 0539 73 55 00 72 08          		add	#0x87200, r5
 786 053e EF 51                   		mov.L	r5, r1
 787 0540 39 02 FB                		bsr	_in_b
 788 0543 EF 15                   		mov.L	r1, r5
 789 0545 CF 53                   		mov.B	r5, r3
 790                             		.loc 2 218 50 discriminator 4
 791 0547 ED A5 01                		mov.L	4[r10], r5
 792 054a 64 75                   		and	#7, r5
 793 054c 66 14                   		mov.L	#1, r4
 794 054e EF 47                   		mov.L	r4, r7
 795 0550 FD 62 57                		shll	r5, r7
 796 0553 EF 75                   		mov.L	r7, r5
 797                             		.loc 2 218 46 discriminator 4
 798 0555 7E 05                   		not	r5
 799 0557 53 35                   		and	r3, r5
 800                             		.loc 2 218 2 discriminator 4
 801 0559 CF 52                   		mov.B	r5, r2
 802 055b EF 61                   		mov.L	r6, r1
 803 055d 39 BA FA                		bsr	_out_b
 219:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 220:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	if(intno >= 128 && intno <= 143) {
 804                             		.loc 2 220 4 discriminator 4
 805 0560 ED A5 01                		mov.L	4[r10], r5
 806 0563 75 55 7F                		cmp	#0x7f, r5
 807 0566 25 27                   		bleu	.L51
 808                             		.loc 2 220 18 discriminator 1
 809 0568 ED A5 01                		mov.L	4[r10], r5
 810 056b 75 55 8F                		cmp	#0x8f, r5
 811 056e 24 1F                   		bgtu	.L51
 221:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_b(ICU_SLIBXR(intno), unit?INT_S12ADI1:INT_S12ADI0);
 812                             		.loc 2 221 3
 813 0570 ED A5 01                		mov.L	4[r10], r5
 814 0573 73 54 00 77 08          		add	#0x87700, r5, r4
 815 0578 EC A5                   		mov.L	[r10], r5
 816 057a 61 05                   		cmp	#0, r5
 817 057c 15                      		beq	.L52
 818                             		.loc 2 221 3 is_stmt 0 discriminator 1
 819 057d 75 45 44                		mov	#0x44, r5
 820 0580 0C                      		bra	.L53
 821                             	.L52:
 822                             		.loc 2 221 3 discriminator 2
 823 0581 75 45 40                		mov	#0x40, r5
 824                             	.L53:
 825                             		.loc 2 221 3 discriminator 4
 826 0584 CF 52                   		mov.B	r5, r2
 827 0586 EF 41                   		mov.L	r4, r1
 828 0588 39 8F FA                		bsr	_out_b
 829 058b 2E 33                   		bra	.L54
 830                             	.L51:
 222:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	} else if(intno >= 144 && intno <= 207) {
 831                             		.loc 2 222 11 is_stmt 1
 832 058d ED A5 01                		mov.L	4[r10], r5
 833 0590 75 55 8F                		cmp	#0x8f, r5
 834 0593 25 26                   		bleu	.L55
 835                             		.loc 2 222 25 discriminator 1
 836 0595 ED A5 01                		mov.L	4[r10], r5
 837 0598 75 55 CF                		cmp	#0xcf, r5
 838 059b 24 1E                   		bgtu	.L55
 223:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		out_b(ICU_SLIBR(intno), unit?INT_S12ADI1:INT_S12ADI0);
 839                             		.loc 2 223 3
 840 059d ED A5 01                		mov.L	4[r10], r5
 841 05a0 73 54 00 77 08          		add	#0x87700, r5, r4
 842 05a5 EC A5                   		mov.L	[r10], r5
 843 05a7 61 05                   		cmp	#0, r5
 844 05a9 15                      		beq	.L56
 845                             		.loc 2 223 3 is_stmt 0 discriminator 1
 846 05aa 75 45 44                		mov	#0x44, r5
 847 05ad 0C                      		bra	.L57
 848                             	.L56:
 849                             		.loc 2 223 3 discriminator 2
 850 05ae 75 45 40                		mov	#0x40, r5
 851                             	.L57:
 852                             		.loc 2 223 3 discriminator 4
 853 05b1 CF 52                   		mov.B	r5, r2
 854 05b3 EF 41                   		mov.L	r4, r1
 855 05b5 39 62 FA                		bsr	_out_b
 856 05b8 0E                      		bra	.L54
 857                             	.L55:
 224:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	} else {
 225:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 		return E_SYS;
 858                             		.loc 2 225 10 is_stmt 1
 859 05b9 FB 56 FB                		mov.L	#-5, r5
 860 05bc 2E 75                   		bra	.L61
 861                             	.L54:
 226:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	}
 227:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 228:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	out_b(ICU_IR(intno), 0);
 862                             		.loc 2 228 2
 863 05be ED A5 01                		mov.L	4[r10], r5
 864 05c1 73 55 00 70 08          		add	#0x87000, r5
 865 05c6 66 02                   		mov	#0, r2
 866 05c8 EF 51                   		mov.L	r5, r1
 867 05ca 39 4D FA                		bsr	_out_b
 229:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	out_b(ICU_IER(intno), (in_b(ICU_IER(intno)) | (ICU_IER_IEN(intno))));
 868                             		.loc 2 229 8
 869 05cd ED A5 01                		mov.L	4[r10], r5
 870 05d0 68 35                   		shlr	#3, r5
 871                             		.loc 2 229 2
 872 05d2 73 56 00 72 08          		add	#0x87200, r5, r6
 873                             		.loc 2 229 30
 874 05d7 ED A5 01                		mov.L	4[r10], r5
 875 05da 68 35                   		shlr	#3, r5
 876                             		.loc 2 229 25
 877 05dc 73 55 00 72 08          		add	#0x87200, r5
 878 05e1 EF 51                   		mov.L	r5, r1
 879 05e3 39 5F FA                		bsr	_in_b
 880 05e6 EF 15                   		mov.L	r1, r5
 881 05e8 CF 54                   		mov.B	r5, r4
 882                             		.loc 2 229 49
 883 05ea ED A5 01                		mov.L	4[r10], r5
 884 05ed 64 75                   		and	#7, r5
 885 05ef 66 13                   		mov.L	#1, r3
 886 05f1 EF 37                   		mov.L	r3, r7
 887 05f3 FD 62 57                		shll	r5, r7
 888 05f6 EF 75                   		mov.L	r7, r5
 889                             		.loc 2 229 46
 890 05f8 57 45                   		or	r4, r5
 891                             		.loc 2 229 2
 892 05fa CF 52                   		mov.B	r5, r2
 893 05fc EF 61                   		mov.L	r6, r1
 894 05fe 39 19 FA                		bsr	_out_b
 230:../device/adc/sysdepend/rx65n/adc_rx65n.c **** #endif /* DEVCONF_ADC_SET_PERI */
 231:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 232:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	ll_devcb[unit].intno = intno;
 895                             		.loc 2 232 23
 896 0601 FB 42 00 00 00 00       		mov.L	#_ll_devcb, r4
 897 0607 EC A5                   		mov.L	[r10], r5
 898 0609 6C 35                   		shll	#3, r5
 899 060b 4B 45                   		add	r4, r5
 900 060d 62 45                   		add	#4, r5
 901 060f ED A4 01                		mov.L	4[r10], r4
 902 0612 E3 54                   		mov.L	r4, [r5]
 233:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 234:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	/* Interrupt handler definition */
 235:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	err = tk_def_int(unit?INTNO_S12ADI1:INTNO_S12ADI0, &dint);
 903                             		.loc 2 235 8
 904 0614 EC A5                   		mov.L	[r10], r5
 905 0616 61 05                   		cmp	#0, r5
 906 0618 15                      		beq	.L59
 907                             		.loc 2 235 8 is_stmt 0 discriminator 1
 908 0619 75 45 81                		mov.L	#0x81, r5
 909 061c 0C                      		bra	.L60
 910                             	.L59:
 911                             		.loc 2 235 8 discriminator 2
 912 061d 75 45 80                		mov.L	#0x80, r5
 913                             	.L60:
 914                             		.loc 2 235 8 discriminator 4
 915 0620 71 A4 0C                		add	#12, r10, r4
 916 0623 EF 42                   		mov.L	r4, r2
 917 0625 EF 51                   		mov.L	r5, r1
 918 0627 05 00 00 00             		bsr	_tk_def_int
 919 062b E7 A1 02                		mov.L	r1, 8[r10]
 236:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 
 237:../device/adc/sysdepend/rx65n/adc_rx65n.c **** 	return err;
 920                             		.loc 2 237 9 is_stmt 1 discriminator 4
 921 062e ED A5 02                		mov.L	8[r10], r5
 922                             	.L61:
 238:../device/adc/sysdepend/rx65n/adc_rx65n.c **** }
 923                             		.loc 2 238 1 discriminator 1
 924 0631 EF 51                   		mov.L	r5, r1
 925 0633 3F 6A 0B                		rtsd	#44, r6-r10
 926                             	.LFE9:
 1112                             	.Letext0:
 1113                             		.file 3 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/tk/typedef.h"
 1114                             		.file 4 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/tk/syscall.h"
 1115                             		.file 5 "../device/adc/sysdepend/rx65n/../../adc.h"
