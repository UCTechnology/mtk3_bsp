   1                             		.file	"fastmlock.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   5                             	_INC:
   6                             	.LFB6:
   7                             		.file 1 "../lib/libtk/fastmlock.c"
   1:../lib/libtk/fastmlock.c **** /*
   2:../lib/libtk/fastmlock.c ****  *----------------------------------------------------------------------
   3:../lib/libtk/fastmlock.c ****  *    micro T-Kernel 3.00.00
   4:../lib/libtk/fastmlock.c ****  *
   5:../lib/libtk/fastmlock.c ****  *    Copyright (C) 2006-2019 by Ken Sakamura.
   6:../lib/libtk/fastmlock.c ****  *    This software is distributed under the T-License 2.1.
   7:../lib/libtk/fastmlock.c ****  *----------------------------------------------------------------------
   8:../lib/libtk/fastmlock.c ****  *
   9:../lib/libtk/fastmlock.c ****  *    Released by TRON Forum(http://www.tron.org) at 2019/12/11.
  10:../lib/libtk/fastmlock.c ****  *
  11:../lib/libtk/fastmlock.c ****  *----------------------------------------------------------------------
  12:../lib/libtk/fastmlock.c ****  */
  13:../lib/libtk/fastmlock.c **** 
  14:../lib/libtk/fastmlock.c **** /*
  15:../lib/libtk/fastmlock.c ****  *	fastmlock.c
  16:../lib/libtk/fastmlock.c ****  *
  17:../lib/libtk/fastmlock.c ****  *	High-speed exclusive control multi-lock 
  18:../lib/libtk/fastmlock.c ****  */
  19:../lib/libtk/fastmlock.c **** 
  20:../lib/libtk/fastmlock.c **** #include <config.h>
  21:../lib/libtk/fastmlock.c **** #include <tk/tkernel.h>
  22:../lib/libtk/fastmlock.c **** 
  23:../lib/libtk/fastmlock.c **** #if USE_MULTI_LOCK
  24:../lib/libtk/fastmlock.c **** /* ------------------------------------------------------------------------ */
  25:../lib/libtk/fastmlock.c **** /*
  26:../lib/libtk/fastmlock.c ****  *	void INC( INT *val )		increment 
  27:../lib/libtk/fastmlock.c ****  *	void DEC( INT *val )		decrement 
  28:../lib/libtk/fastmlock.c ****  *	BOOL BTS( UINT *val, INT no )	bit test and set 
  29:../lib/libtk/fastmlock.c ****  *	void BR( UINT *val, INT no )	bit reset 
  30:../lib/libtk/fastmlock.c ****  *
  31:../lib/libtk/fastmlock.c ****  *	The above must be operated exclusively.
  32:../lib/libtk/fastmlock.c ****  */
  33:../lib/libtk/fastmlock.c **** 
  34:../lib/libtk/fastmlock.c **** Inline void INC( INT *val )
  35:../lib/libtk/fastmlock.c **** {
   8                             		.loc 1 35 1
   9 0000 7E AA                   		push.l	r10
  10                             	.LCFI0:
  11 0002 71 0A F8                		add	#-8, r0, r10
  12                             	.LCFI1:
  13 0005 EF A0                   		mov.L	r10, r0
  14 0007 E7 A1 01                		mov.L	r1, 4[r10]
  36:../lib/libtk/fastmlock.c **** 	UINT	imask;
  37:../lib/libtk/fastmlock.c **** 
  38:../lib/libtk/fastmlock.c **** 	DI(imask);
  15                             		.loc 1 38 2
  16 000a 05 00 00 00             		bsr	_disint
  17 000e E3 A1                   		mov.L	r1, [r10]
  39:../lib/libtk/fastmlock.c **** 	(*val)++;
  18                             		.loc 1 39 3
  19 0010 ED A5 01                		mov.L	4[r10], r5
  20 0013 EC 55                   		mov.L	[r5], r5
  21                             		.loc 1 39 8
  22 0015 71 54 01                		add	#1, r5, r4
  23 0018 ED A5 01                		mov.L	4[r10], r5
  24 001b E3 54                   		mov.L	r4, [r5]
  40:../lib/libtk/fastmlock.c **** 	EI(imask);
  25                             		.loc 1 40 2
  26 001d EC A1                   		mov.L	[r10], r1
  27 001f 05 00 00 00             		bsr	_setint
  41:../lib/libtk/fastmlock.c **** }
  28                             		.loc 1 41 1
  29 0023 03                      		nop
  30 0024 3F AA 03                		rtsd	#12, r10-r10
  31                             	.LFE6:
  34                             	_DEC:
  35                             	.LFB7:
  42:../lib/libtk/fastmlock.c **** 
  43:../lib/libtk/fastmlock.c **** Inline void DEC( INT *val )
  44:../lib/libtk/fastmlock.c **** {
  36                             		.loc 1 44 1
  37 0027 7E AA                   		push.l	r10
  38                             	.LCFI2:
  39 0029 71 0A F8                		add	#-8, r0, r10
  40                             	.LCFI3:
  41 002c EF A0                   		mov.L	r10, r0
  42 002e E7 A1 01                		mov.L	r1, 4[r10]
  45:../lib/libtk/fastmlock.c **** 	UINT	imask;
  46:../lib/libtk/fastmlock.c **** 
  47:../lib/libtk/fastmlock.c **** 	DI(imask);
  43                             		.loc 1 47 2
  44 0031 05 00 00 00             		bsr	_disint
  45 0035 E3 A1                   		mov.L	r1, [r10]
  48:../lib/libtk/fastmlock.c **** 	(*val)--;
  46                             		.loc 1 48 3
  47 0037 ED A5 01                		mov.L	4[r10], r5
  48 003a EC 55                   		mov.L	[r5], r5
  49                             		.loc 1 48 8
  50 003c 71 54 FF                		add	#-1, r5, r4
  51 003f ED A5 01                		mov.L	4[r10], r5
  52 0042 E3 54                   		mov.L	r4, [r5]
  49:../lib/libtk/fastmlock.c **** 	EI(imask);
  53                             		.loc 1 49 2
  54 0044 EC A1                   		mov.L	[r10], r1
  55 0046 05 00 00 00             		bsr	_setint
  50:../lib/libtk/fastmlock.c **** }
  56                             		.loc 1 50 1
  57 004a 03                      		nop
  58 004b 3F AA 03                		rtsd	#12, r10-r10
  59                             	.LFE7:
  62                             	_BTS:
  63                             	.LFB8:
  51:../lib/libtk/fastmlock.c **** 
  52:../lib/libtk/fastmlock.c **** Inline BOOL BTS( UINT *val, INT no )
  53:../lib/libtk/fastmlock.c **** {
  64                             		.loc 1 53 1
  65 004e 6E 7A                   		pushm	r7-r10
  66                             	.LCFI4:
  67 0050 71 0A EC                		add	#-20, r0, r10
  68                             	.LCFI5:
  69 0053 EF A0                   		mov.L	r10, r0
  70 0055 E7 A1 03                		mov.L	r1, 12[r10]
  71 0058 E7 A2 04                		mov.L	r2, 16[r10]
  54:../lib/libtk/fastmlock.c **** 	UINT	imask;
  55:../lib/libtk/fastmlock.c **** 	UINT	b;
  56:../lib/libtk/fastmlock.c **** 	UINT	bm = (UINT)(1 << no);
  72                             		.loc 1 56 21
  73 005b 66 14                   		mov.L	#1, r4
  74 005d ED A5 04                		mov.L	16[r10], r5
  75 0060 EF 47                   		mov.L	r4, r7
  76 0062 FD 62 57                		shll	r5, r7
  77 0065 EF 75                   		mov.L	r7, r5
  78                             		.loc 1 56 7
  79 0067 E3 A5                   		mov.L	r5, [r10]
  57:../lib/libtk/fastmlock.c **** 
  58:../lib/libtk/fastmlock.c **** 	DI(imask);
  80                             		.loc 1 58 2
  81 0069 05 00 00 00             		bsr	_disint
  82 006d E7 A1 01                		mov.L	r1, 4[r10]
  59:../lib/libtk/fastmlock.c **** 	b = *val & bm;
  83                             		.loc 1 59 6
  84 0070 ED A5 03                		mov.L	12[r10], r5
  85 0073 EC 55                   		mov.L	[r5], r5
  86                             		.loc 1 59 4
  87 0075 EC A4                   		mov.L	[r10], r4
  88 0077 53 45                   		and	r4, r5
  89 0079 E7 A5 02                		mov.L	r5, 8[r10]
  60:../lib/libtk/fastmlock.c **** 	*val |= bm;
  90                             		.loc 1 60 7
  91 007c ED A5 03                		mov.L	12[r10], r5
  92 007f EC 54                   		mov.L	[r5], r4
  93 0081 EC A5                   		mov.L	[r10], r5
  94 0083 57 54                   		or	r5, r4
  95 0085 ED A5 03                		mov.L	12[r10], r5
  96 0088 E3 54                   		mov.L	r4, [r5]
  61:../lib/libtk/fastmlock.c **** 	EI(imask);
  97                             		.loc 1 61 2
  98 008a ED A1 01                		mov.L	4[r10], r1
  99 008d 05 00 00 00             		bsr	_setint
  62:../lib/libtk/fastmlock.c **** 	return (BOOL)b;
 100                             		.loc 1 62 9
 101 0091 ED A5 02                		mov.L	8[r10], r5
  63:../lib/libtk/fastmlock.c **** }
 102                             		.loc 1 63 1
 103 0094 EF 51                   		mov.L	r5, r1
 104 0096 3F 7A 09                		rtsd	#36, r7-r10
 105                             	.LFE8:
 108                             	_BR:
 109                             	.LFB9:
  64:../lib/libtk/fastmlock.c **** 
  65:../lib/libtk/fastmlock.c **** Inline void BR( UINT *val, INT no )
  66:../lib/libtk/fastmlock.c **** {
 110                             		.loc 1 66 1
 111 0099 6E 7A                   		pushm	r7-r10
 112                             	.LCFI6:
 113 009b 71 0A F4                		add	#-12, r0, r10
 114                             	.LCFI7:
 115 009e EF A0                   		mov.L	r10, r0
 116 00a0 E7 A1 01                		mov.L	r1, 4[r10]
 117 00a3 E7 A2 02                		mov.L	r2, 8[r10]
  67:../lib/libtk/fastmlock.c **** 	UINT	imask;
  68:../lib/libtk/fastmlock.c **** 
  69:../lib/libtk/fastmlock.c **** 	DI(imask);
 118                             		.loc 1 69 2
 119 00a6 05 00 00 00             		bsr	_disint
 120 00aa E3 A1                   		mov.L	r1, [r10]
  70:../lib/libtk/fastmlock.c **** 	*val &= ~(UINT)(1 << no);
 121                             		.loc 1 70 7
 122 00ac ED A5 01                		mov.L	4[r10], r5
 123 00af EC 53                   		mov.L	[r5], r3
 124                             		.loc 1 70 20
 125 00b1 66 14                   		mov.L	#1, r4
 126 00b3 ED A5 02                		mov.L	8[r10], r5
 127 00b6 EF 47                   		mov.L	r4, r7
 128 00b8 FD 62 57                		shll	r5, r7
 129 00bb EF 75                   		mov.L	r7, r5
 130                             		.loc 1 70 10
 131 00bd 7E 05                   		not	r5
 132                             		.loc 1 70 7
 133 00bf FF 44 53                		and	r5, r3, r4
 134 00c2 ED A5 01                		mov.L	4[r10], r5
 135 00c5 E3 54                   		mov.L	r4, [r5]
  71:../lib/libtk/fastmlock.c **** 	EI(imask);
 136                             		.loc 1 71 2
 137 00c7 EC A1                   		mov.L	[r10], r1
 138 00c9 05 00 00 00             		bsr	_setint
  72:../lib/libtk/fastmlock.c **** }
 139                             		.loc 1 72 1
 140 00cd 03                      		nop
 141 00ce 3F 7A 07                		rtsd	#28, r7-r10
 142                             	.LFE9:
 144                             		.global	_MLockTmo
 146                             	_MLockTmo:
 147                             	.LFB10:
  73:../lib/libtk/fastmlock.c **** 
  74:../lib/libtk/fastmlock.c **** 
  75:../lib/libtk/fastmlock.c **** /*
  76:../lib/libtk/fastmlock.c ****  * Lock with wait time designation 
  77:../lib/libtk/fastmlock.c ****  *	no	lock number 0 - 31 
  78:../lib/libtk/fastmlock.c ****  */
  79:../lib/libtk/fastmlock.c **** EXPORT ER MLockTmo( FastMLock *lock, INT no, TMO tmo )
  80:../lib/libtk/fastmlock.c **** {
 148                             		.loc 1 80 1
 149 00d1 6E 7A                   		pushm	r7-r10
 150                             	.LCFI8:
 151 00d3 71 0A E8                		add	#-24, r0, r10
 152                             	.LCFI9:
 153 00d6 71 A0 FC                		add	#-4, r10, r0
 154                             	.LCFI10:
 155 00d9 E7 A1 03                		mov.L	r1, 12[r10]
 156 00dc E7 A2 04                		mov.L	r2, 16[r10]
 157 00df E7 A3 05                		mov.L	r3, 20[r10]
  81:../lib/libtk/fastmlock.c **** 	UINT	ptn = (UINT)(1 << no);
 158                             		.loc 1 81 22
 159 00e2 66 14                   		mov.L	#1, r4
 160 00e4 ED A5 04                		mov.L	16[r10], r5
 161 00e7 EF 47                   		mov.L	r4, r7
 162 00e9 FD 62 57                		shll	r5, r7
 163 00ec EF 75                   		mov.L	r7, r5
 164                             		.loc 1 81 7
 165 00ee E7 A5 01                		mov.L	r5, 4[r10]
  82:../lib/libtk/fastmlock.c **** 	UINT	flg;
  83:../lib/libtk/fastmlock.c **** 	ER	ercd;
  84:../lib/libtk/fastmlock.c **** 
  85:../lib/libtk/fastmlock.c **** 	INC(&lock->wai);
 166                             		.loc 1 85 2
 167 00f1 ED A5 03                		mov.L	12[r10], r5
 168 00f4 62 45                   		add	#4, r5
 169 00f6 EF 51                   		mov.L	r5, r1
 170 00f8 39 08 FF                		bsr	_INC
 171                             	.L10:
  86:../lib/libtk/fastmlock.c **** 	for ( ;; ) {
  87:../lib/libtk/fastmlock.c **** 		if ( !BTS(&lock->flg, no) ) {
 172                             		.loc 1 87 9
 173 00fb ED A5 03                		mov.L	12[r10], r5
 174 00fe ED A2 04                		mov.L	16[r10], r2
 175 0101 EF 51                   		mov.L	r5, r1
 176 0103 39 4B FF                		bsr	_BTS
 177 0106 EF 15                   		mov.L	r1, r5
 178                             		.loc 1 87 6
 179 0108 61 05                   		cmp	#0, r5
 180 010a 1E                      		bne	.L7
  88:../lib/libtk/fastmlock.c **** 			ercd = E_OK;
 181                             		.loc 1 88 9
 182 010b F8 A6 00                		mov.L	#0, [r10]
  89:../lib/libtk/fastmlock.c **** 			break;
 183                             		.loc 1 89 4
 184 010e 2E 26                   		bra	.L8
 185                             	.L7:
  90:../lib/libtk/fastmlock.c **** 		}
  91:../lib/libtk/fastmlock.c **** 
  92:../lib/libtk/fastmlock.c **** 		ercd = tk_wai_flg(lock->id, ptn, TWF_ORW|TWF_BITCLR, &flg, tmo);
 186                             		.loc 1 92 10
 187 0110 ED A5 03                		mov.L	12[r10], r5
 188 0113 A8 D1                   		mov.L	8[r5], r1
 189 0115 71 A5 08                		add	#8, r10, r5
 190 0118 ED A4 05                		mov.L	20[r10], r4
 191 011b E3 04                   		mov.L	r4, [r0]
 192 011d EF 54                   		mov.L	r5, r4
 193 011f 75 43 21                		mov.L	#33, r3
 194 0122 ED A2 01                		mov.L	4[r10], r2
 195 0125 05 00 00 00             		bsr	_tk_wai_flg
 196 0129 E3 A1                   		mov.L	r1, [r10]
  93:../lib/libtk/fastmlock.c **** 		if ( ercd < E_OK ) {
 197                             		.loc 1 93 6
 198 012b EC A5                   		mov.L	[r10], r5
 199 012d 61 05                   		cmp	#0, r5
 200 012f 29 04                   		blt	.L12
  87:../lib/libtk/fastmlock.c **** 			ercd = E_OK;
 201                             		.loc 1 87 6
 202 0131 2E CA                   		bra	.L10
 203                             	.L12:
  94:../lib/libtk/fastmlock.c **** 			break;
 204                             		.loc 1 94 4
 205 0133 03                      		nop
 206                             	.L8:
  95:../lib/libtk/fastmlock.c **** 		}
  96:../lib/libtk/fastmlock.c **** 	}
  97:../lib/libtk/fastmlock.c **** 	DEC(&lock->wai);
 207                             		.loc 1 97 2
 208 0134 ED A5 03                		mov.L	12[r10], r5
 209 0137 62 45                   		add	#4, r5
 210 0139 EF 51                   		mov.L	r5, r1
 211 013b 39 EC FE                		bsr	_DEC
  98:../lib/libtk/fastmlock.c **** 
  99:../lib/libtk/fastmlock.c **** 	return ercd;
 212                             		.loc 1 99 9
 213 013e EC A5                   		mov.L	[r10], r5
 100:../lib/libtk/fastmlock.c **** }
 214                             		.loc 1 100 1
 215 0140 EF 51                   		mov.L	r5, r1
 216 0142 3F 7A 0B                		rtsd	#44, r7-r10
 217                             	.LFE10:
 219                             		.global	_MLock
 221                             	_MLock:
 222                             	.LFB11:
 101:../lib/libtk/fastmlock.c **** 
 102:../lib/libtk/fastmlock.c **** /*
 103:../lib/libtk/fastmlock.c ****  * Lock 
 104:../lib/libtk/fastmlock.c ****  *	no	Lock number 0 - 31 
 105:../lib/libtk/fastmlock.c ****  */
 106:../lib/libtk/fastmlock.c **** EXPORT ER MLock( FastMLock *lock, INT no )
 107:../lib/libtk/fastmlock.c **** {
 223                             		.loc 1 107 1
 224 0145 7E AA                   		push.l	r10
 225                             	.LCFI11:
 226 0147 71 0A F8                		add	#-8, r0, r10
 227                             	.LCFI12:
 228 014a EF A0                   		mov.L	r10, r0
 229 014c E3 A1                   		mov.L	r1, [r10]
 230 014e E7 A2 01                		mov.L	r2, 4[r10]
 108:../lib/libtk/fastmlock.c **** 	return MLockTmo(lock, no, TMO_FEVR);
 231                             		.loc 1 108 9
 232 0151 FB 36 FF                		mov.L	#-1, r3
 233 0154 ED A2 01                		mov.L	4[r10], r2
 234 0157 EC A1                   		mov.L	[r10], r1
 235 0159 05 00 00 00             		bsr	_MLockTmo
 236 015d EF 15                   		mov.L	r1, r5
 109:../lib/libtk/fastmlock.c **** }
 237                             		.loc 1 109 1
 238 015f EF 51                   		mov.L	r5, r1
 239 0161 3F AA 03                		rtsd	#12, r10-r10
 240                             	.LFE11:
 242                             		.global	_MUnlock
 244                             	_MUnlock:
 245                             	.LFB12:
 110:../lib/libtk/fastmlock.c **** 
 111:../lib/libtk/fastmlock.c **** /*
 112:../lib/libtk/fastmlock.c ****  * Lock release 
 113:../lib/libtk/fastmlock.c ****  *	no	Lock number 0 - 31 
 114:../lib/libtk/fastmlock.c ****  */
 115:../lib/libtk/fastmlock.c **** EXPORT ER MUnlock( FastMLock *lock, INT no )
 116:../lib/libtk/fastmlock.c **** {
 246                             		.loc 1 116 1
 247 0164 6E 7A                   		pushm	r7-r10
 248                             	.LCFI13:
 249 0166 71 0A F0                		add	#-16, r0, r10
 250                             	.LCFI14:
 251 0169 EF A0                   		mov.L	r10, r0
 252 016b E7 A1 02                		mov.L	r1, 8[r10]
 253 016e E7 A2 03                		mov.L	r2, 12[r10]
 117:../lib/libtk/fastmlock.c **** 	UINT	ptn = (UINT)(1 << no);
 254                             		.loc 1 117 22
 255 0171 66 14                   		mov.L	#1, r4
 256 0173 ED A5 03                		mov.L	12[r10], r5
 257 0176 EF 47                   		mov.L	r4, r7
 258 0178 FD 62 57                		shll	r5, r7
 259 017b EF 75                   		mov.L	r7, r5
 260                             		.loc 1 117 7
 261 017d E3 A5                   		mov.L	r5, [r10]
 118:../lib/libtk/fastmlock.c **** 	ER	ercd;
 119:../lib/libtk/fastmlock.c **** 
 120:../lib/libtk/fastmlock.c **** 	BR(&lock->flg, no);
 262                             		.loc 1 120 2
 263 017f ED A5 02                		mov.L	8[r10], r5
 264 0182 ED A2 03                		mov.L	12[r10], r2
 265 0185 EF 51                   		mov.L	r5, r1
 266 0187 39 12 FF                		bsr	_BR
 121:../lib/libtk/fastmlock.c **** 	ercd = ( lock->wai == 0 )? E_OK: tk_set_flg(lock->id, ptn);
 267                             		.loc 1 121 15
 268 018a ED A5 02                		mov.L	8[r10], r5
 269 018d A8 5D                   		mov.L	4[r5], r5
 270                             		.loc 1 121 33
 271 018f 61 05                   		cmp	#0, r5
 272 0191 20 12                   		beq	.L16
 273                             		.loc 1 121 35 discriminator 1
 274 0193 ED A5 02                		mov.L	8[r10], r5
 275 0196 A8 D5                   		mov.L	8[r5], r5
 276 0198 EC A2                   		mov.L	[r10], r2
 277 019a EF 51                   		mov.L	r5, r1
 278 019c 05 00 00 00             		bsr	_tk_set_flg
 279 01a0 EF 15                   		mov.L	r1, r5
 280 01a2 0B                      		bra	.L17
 281                             	.L16:
 282                             		.loc 1 121 33 discriminator 2
 283 01a3 66 05                   		mov.L	#0, r5
 284                             	.L17:
 285                             		.loc 1 121 7 discriminator 4
 286 01a5 E7 A5 01                		mov.L	r5, 4[r10]
 122:../lib/libtk/fastmlock.c **** 
 123:../lib/libtk/fastmlock.c **** 	return ercd;
 287                             		.loc 1 123 9 discriminator 4
 288 01a8 ED A5 01                		mov.L	4[r10], r5
 124:../lib/libtk/fastmlock.c **** }
 289                             		.loc 1 124 1 discriminator 4
 290 01ab EF 51                   		mov.L	r5, r1
 291 01ad 3F 7A 08                		rtsd	#32, r7-r10
 292                             	.LFE12:
 294                             		.section C,"a",@progbits
 295                             		.p2align 2
 296                             	.LC0:
 297 0000 4D 4C 4F 43 00          		.string	"MLOC"
 298 0005 00 00 00                		.section P,"ax"
 299                             		.global	_CreateMLock
 301                             	_CreateMLock:
 302                             	.LFB13:
 125:../lib/libtk/fastmlock.c **** 
 126:../lib/libtk/fastmlock.c **** /*
 127:../lib/libtk/fastmlock.c ****  * Create multi-lock 
 128:../lib/libtk/fastmlock.c ****  */
 129:../lib/libtk/fastmlock.c **** EXPORT ER CreateMLock( FastMLock *lock, CONST UB *name )
 130:../lib/libtk/fastmlock.c **** {
 303                             		.loc 1 130 1
 304 01b0 7E AA                   		push.l	r10
 305                             	.LCFI15:
 306 01b2 71 0A DC                		add	#-36, r0, r10
 307                             	.LCFI16:
 308 01b5 EF A0                   		mov.L	r10, r0
 309 01b7 E7 A1 07                		mov.L	r1, 28[r10]
 310 01ba E7 A2 08                		mov.L	r2, 32[r10]
 131:../lib/libtk/fastmlock.c **** 	T_CFLG	cflg;
 132:../lib/libtk/fastmlock.c **** 	ER	ercd;
 133:../lib/libtk/fastmlock.c **** 
 134:../lib/libtk/fastmlock.c **** 	cflg.flgatr  = TA_TPRI | TA_WMUL;
 311                             		.loc 1 134 15
 312 01bd F9 A6 05 09             		mov.L	#9, 20[r10]
 135:../lib/libtk/fastmlock.c **** 	cflg.iflgptn = 0;
 313                             		.loc 1 135 15
 314 01c1 F9 A6 06 00             		mov.L	#0, 24[r10]
 315                             	.LBB2:
 136:../lib/libtk/fastmlock.c **** 	SetOBJNAME(cflg.exinf, "MLOC");
 316                             		.loc 1 136 2
 317 01c5 71 A5 10                		add	#16, r10, r5
 318 01c8 E3 A5                   		mov.L	r5, [r10]
 319 01ca F9 A2 01 00 00 00 00    		mov.L	#.LC0, 4[r10]
 320 01d1 F9 A6 02 00             		mov.L	#0, 8[r10]
 321 01d5 2E 1E                   		bra	.L20
 322                             	.L21:
 323                             		.loc 1 136 2 is_stmt 0 discriminator 3
 324 01d7 ED A4 01                		mov.L	4[r10], r4
 325 01da 71 45 01                		add	#1, r4, r5
 326 01dd E7 A5 01                		mov.L	r5, 4[r10]
 327 01e0 EC A5                   		mov.L	[r10], r5
 328 01e2 71 53 01                		add	#1, r5, r3
 329 01e5 E3 A3                   		mov.L	r3, [r10]
 330 01e7 CC 44                   		mov.B	[r4], r4
 331 01e9 C3 54                   		mov.B	r4, [r5]
 332 01eb ED A5 02                		mov.L	8[r10], r5
 333 01ee 62 15                   		add	#1, r5
 334 01f0 E7 A5 02                		mov.L	r5, 8[r10]
 335                             	.L20:
 336                             		.loc 1 136 2 discriminator 1
 337 01f3 ED A5 02                		mov.L	8[r10], r5
 338 01f6 61 35                   		cmp	#3, r5
 339 01f8 2B DF                   		ble	.L21
 340                             	.LBE2:
 137:../lib/libtk/fastmlock.c **** 
 138:../lib/libtk/fastmlock.c **** 	lock->id = ercd = tk_cre_flg(&cflg);
 341                             		.loc 1 138 20 is_stmt 1
 342 01fa 71 A5 10                		add	#16, r10, r5
 343 01fd EF 51                   		mov.L	r5, r1
 344 01ff 05 00 00 00             		bsr	_tk_cre_flg
 345 0203 E7 A1 03                		mov.L	r1, 12[r10]
 346                             		.loc 1 138 11
 347 0206 ED A5 07                		mov.L	28[r10], r5
 348 0209 ED A4 03                		mov.L	12[r10], r4
 349 020c A0 D4                   		mov.L	r4, 8[r5]
 139:../lib/libtk/fastmlock.c **** 	if ( ercd < E_OK ) {
 350                             		.loc 1 139 5
 351 020e ED A5 03                		mov.L	12[r10], r5
 352 0211 61 05                   		cmp	#0, r5
 353 0213 28 07                   		bge	.L22
 140:../lib/libtk/fastmlock.c **** 		return ercd;
 354                             		.loc 1 140 10
 355 0215 ED A5 03                		mov.L	12[r10], r5
 356 0218 2E 18                   		bra	.L24
 357                             	.L22:
 141:../lib/libtk/fastmlock.c **** 	}
 142:../lib/libtk/fastmlock.c **** 
 143:../lib/libtk/fastmlock.c **** 	lock->wai = 0;
 358                             		.loc 1 143 12
 359 021a ED A5 07                		mov.L	28[r10], r5
 360 021d 3E 51 00                		mov.L	#0, 4[r5]
 144:../lib/libtk/fastmlock.c **** 	lock->flg = 0;
 361                             		.loc 1 144 12
 362 0220 ED A5 07                		mov.L	28[r10], r5
 363 0223 F8 56 00                		mov.L	#0, [r5]
 145:../lib/libtk/fastmlock.c **** 	lock->name = name;
 364                             		.loc 1 145 13
 365 0226 ED A5 07                		mov.L	28[r10], r5
 366 0229 ED A4 08                		mov.L	32[r10], r4
 367 022c A0 DC                   		mov.L	r4, 12[r5]
 146:../lib/libtk/fastmlock.c **** 
 147:../lib/libtk/fastmlock.c **** 	return E_OK;
 368                             		.loc 1 147 9
 369 022e 66 05                   		mov.L	#0, r5
 370                             	.L24:
 148:../lib/libtk/fastmlock.c **** }
 371                             		.loc 1 148 1 discriminator 1
 372 0230 EF 51                   		mov.L	r5, r1
 373 0232 3F AA 0A                		rtsd	#40, r10-r10
 374                             	.LFE13:
 376                             		.global	_DeleteMLock
 378                             	_DeleteMLock:
 379                             	.LFB14:
 149:../lib/libtk/fastmlock.c **** 
 150:../lib/libtk/fastmlock.c **** /*
 151:../lib/libtk/fastmlock.c ****  * Delete multi-lock 
 152:../lib/libtk/fastmlock.c ****  */
 153:../lib/libtk/fastmlock.c **** EXPORT ER DeleteMLock( FastMLock *lock )
 154:../lib/libtk/fastmlock.c **** {
 380                             		.loc 1 154 1
 381 0235 7E AA                   		push.l	r10
 382                             	.LCFI17:
 383 0237 71 0A F8                		add	#-8, r0, r10
 384                             	.LCFI18:
 385 023a EF A0                   		mov.L	r10, r0
 386 023c E7 A1 01                		mov.L	r1, 4[r10]
 155:../lib/libtk/fastmlock.c **** 	ER	ercd;
 156:../lib/libtk/fastmlock.c **** 
 157:../lib/libtk/fastmlock.c **** 	if ( lock->id <= 0 ) {
 387                             		.loc 1 157 11
 388 023f ED A5 01                		mov.L	4[r10], r5
 389 0242 A8 D5                   		mov.L	8[r5], r5
 390                             		.loc 1 157 5
 391 0244 61 05                   		cmp	#0, r5
 392 0246 2A 07                   		bgt	.L26
 158:../lib/libtk/fastmlock.c **** 		return E_PAR;
 393                             		.loc 1 158 10
 394 0248 FB 56 EF                		mov.L	#-17, r5
 395 024b 2E 20                   		bra	.L27
 396                             	.L26:
 159:../lib/libtk/fastmlock.c **** 	}
 160:../lib/libtk/fastmlock.c **** 
 161:../lib/libtk/fastmlock.c **** 	ercd = tk_del_flg(lock->id);
 397                             		.loc 1 161 9
 398 024d ED A5 01                		mov.L	4[r10], r5
 399 0250 A8 D5                   		mov.L	8[r5], r5
 400 0252 EF 51                   		mov.L	r5, r1
 401 0254 05 00 00 00             		bsr	_tk_del_flg
 402 0258 E3 A1                   		mov.L	r1, [r10]
 162:../lib/libtk/fastmlock.c **** 	if ( ercd < E_OK ) {
 403                             		.loc 1 162 5
 404 025a EC A5                   		mov.L	[r10], r5
 405 025c 61 05                   		cmp	#0, r5
 406 025e 28 05                   		bge	.L28
 163:../lib/libtk/fastmlock.c **** 		return ercd;
 407                             		.loc 1 163 10
 408 0260 EC A5                   		mov.L	[r10], r5
 409 0262 09                      		bra	.L27
 410                             	.L28:
 164:../lib/libtk/fastmlock.c **** 	}
 165:../lib/libtk/fastmlock.c **** 
 166:../lib/libtk/fastmlock.c **** 	lock->id = 0;
 411                             		.loc 1 166 11
 412 0263 ED A5 01                		mov.L	4[r10], r5
 413 0266 3E 52 00                		mov.L	#0, 8[r5]
 167:../lib/libtk/fastmlock.c **** 
 168:../lib/libtk/fastmlock.c **** 	return E_OK;
 414                             		.loc 1 168 9
 415 0269 66 05                   		mov.L	#0, r5
 416                             	.L27:
 169:../lib/libtk/fastmlock.c **** }
 417                             		.loc 1 169 1
 418 026b EF 51                   		mov.L	r5, r1
 419 026d 3F AA 03                		rtsd	#12, r10-r10
 420                             	.LFE14:
 640                             	.Letext0:
 641                             		.file 2 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\include/tk/typedef.h"
 642                             		.file 3 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\include/tk/syscall.h"
 643                             		.file 4 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\include/tk/syslib.h"
