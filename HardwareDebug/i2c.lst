   1                             		.file	"i2c.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.local	_dev_i2c_cb
   5                             		.comm	_dev_i2c_cb,12,4
   7                             	_read_atr:
   8                             	.LFB6:
   9                             		.file 1 "../device/i2c/i2c.c"
   1:../device/i2c/i2c.c **** /*
   2:../device/i2c/i2c.c ****  *----------------------------------------------------------------------
   3:../device/i2c/i2c.c ****  *    Device Driver for Î¼T-Kernel 3.0
   4:../device/i2c/i2c.c ****  *
   5:../device/i2c/i2c.c ****  *    Copyright (C) 2020-2022 by Ken Sakamura.
   6:../device/i2c/i2c.c ****  *    This software is distributed under the T-License 2.2.
   7:../device/i2c/i2c.c ****  *----------------------------------------------------------------------
   8:../device/i2c/i2c.c ****  *
   9:../device/i2c/i2c.c ****  *    Released by TRON Forum(http://www.tron.org) at 2022/02.
  10:../device/i2c/i2c.c ****  *
  11:../device/i2c/i2c.c ****  *----------------------------------------------------------------------
  12:../device/i2c/i2c.c ****  */
  13:../device/i2c/i2c.c **** #include <sys/machine.h>
  14:../device/i2c/i2c.c **** #include <tk/tkernel.h>
  15:../device/i2c/i2c.c **** #include <tstdlib.h>
  16:../device/i2c/i2c.c **** 
  17:../device/i2c/i2c.c **** #include "i2c.h"
  18:../device/i2c/i2c.c **** #include "../include/dev_def.h"
  19:../device/i2c/i2c.c **** #if DEV_IIC_ENABLE
  20:../device/i2c/i2c.c **** 
  21:../device/i2c/i2c.c **** /*
  22:../device/i2c/i2c.c ****  *	i2c.c
  23:../device/i2c/i2c.c ****  *	I2C device driver
  24:../device/i2c/i2c.c **** */
  25:../device/i2c/i2c.c **** 
  26:../device/i2c/i2c.c **** /*---------------------------------------------------------------------*/
  27:../device/i2c/i2c.c **** /*I2C Device driver Control block
  28:../device/i2c/i2c.c ****  */
  29:../device/i2c/i2c.c **** #if TK_SUPPORT_MEMLIB
  30:../device/i2c/i2c.c **** 
  31:../device/i2c/i2c.c **** LOCAL T_I2C_DCB	*dev_i2c_cb[DEV_I2C_UNITNM];
  32:../device/i2c/i2c.c **** #define		get_dcb_ptr(unit)	(dev_i2c_cb[unit])
  33:../device/i2c/i2c.c **** #define		get_dcb_mem(unit,a)	(&dev_i2c_cb[unit]->a)
  34:../device/i2c/i2c.c **** 
  35:../device/i2c/i2c.c **** #else
  36:../device/i2c/i2c.c **** 
  37:../device/i2c/i2c.c **** LOCAL T_I2C_DCB	dev_i2c_cb[DEV_I2C_UNITNM];
  38:../device/i2c/i2c.c **** #define		get_dcb_ptr(unit)	(&dev_I2C_cb[unit])
  39:../device/i2c/i2c.c **** #define		get_dcb_mem(unit,a)	(&dev_i2c_cb[unit].a)
  40:../device/i2c/i2c.c **** 
  41:../device/i2c/i2c.c **** #endif
  42:../device/i2c/i2c.c **** 
  43:../device/i2c/i2c.c **** /*---------------------------------------------------------------------*/
  44:../device/i2c/i2c.c **** /* Attribute data control
  45:../device/i2c/i2c.c ****  */
  46:../device/i2c/i2c.c **** LOCAL ER read_atr(T_I2C_DCB *p_dcb, T_DEVREQ *req)
  47:../device/i2c/i2c.c **** {
  10                             		.loc 1 47 1
  11 0000 7E AA                   		push.l	r10
  12                             	.LCFI0:
  13 0002 71 0A F4                		add	#-12, r0, r10
  14                             	.LCFI1:
  15 0005 EF A0                   		mov.L	r10, r0
  16 0007 E7 A1 01                		mov.L	r1, 4[r10]
  17 000a E7 A2 02                		mov.L	r2, 8[r10]
  48:../device/i2c/i2c.c **** 	ER	err	= E_OK;
  18                             		.loc 1 48 5
  19 000d F8 A6 00                		mov.L	#0, [r10]
  49:../device/i2c/i2c.c **** 
  50:../device/i2c/i2c.c **** 	switch(req->start) {
  20                             		.loc 1 50 12
  21 0010 ED A5 02                		mov.L	8[r10], r5
  22 0013 A9 55                   		mov.L	16[r5], r5
  23                             		.loc 1 50 2
  24 0015 75 05 FF                		cmp	#-1, r5
  25 0018 21 2D                   		bne	.L2
  51:../device/i2c/i2c.c **** 	case TDN_EVENT:			/* MBF ID for event notification */
  52:../device/i2c/i2c.c **** 		if(req->size >= sizeof(ID)) {
  26                             		.loc 1 52 9
  27 001a ED A5 02                		mov.L	8[r10], r5
  28 001d A9 5D                   		mov.L	20[r5], r5
  29                             		.loc 1 52 5
  30 001f 61 35                   		cmp	#3, r5
  31 0021 25 10                   		bleu	.L3
  53:../device/i2c/i2c.c **** 			*(ID*)req->buf = p_dcb->evtmbfid;
  32                             		.loc 1 53 13
  33 0023 ED A5 02                		mov.L	8[r10], r5
  34 0026 A9 D5                   		mov.L	24[r5], r5
  35                             		.loc 1 53 26
  36 0028 ED A4 01                		mov.L	4[r10], r4
  37 002b A8 C4                   		mov.L	8[r4], r4
  38                             		.loc 1 53 19
  39 002d E3 54                   		mov.L	r4, [r5]
  40 002f 2E 0F                   		bra	.L4
  41                             	.L3:
  54:../device/i2c/i2c.c **** 		} else if(req->size != 0) {
  42                             		.loc 1 54 16
  43 0031 ED A5 02                		mov.L	8[r10], r5
  44 0034 A9 5D                   		mov.L	20[r5], r5
  45                             		.loc 1 54 12
  46 0036 61 05                   		cmp	#0, r5
  47 0038 16                      		beq	.L4
  55:../device/i2c/i2c.c **** 			err = E_PAR;
  48                             		.loc 1 55 8
  49 0039 F8 A6 EF                		mov.L	#-17, [r10]
  56:../device/i2c/i2c.c **** 			break;
  50                             		.loc 1 56 4
  51 003c 2E 0D                   		bra	.L5
  52                             	.L4:
  57:../device/i2c/i2c.c **** 		}
  58:../device/i2c/i2c.c **** 		req->asize = sizeof(ID);
  53                             		.loc 1 58 14
  54 003e ED A5 02                		mov.L	8[r10], r5
  55 0041 3E 57 04                		mov.L	#4, 28[r5]
  59:../device/i2c/i2c.c **** 		break;
  56                             		.loc 1 59 3
  57 0044 0D                      		bra	.L5
  58                             	.L2:
  60:../device/i2c/i2c.c **** 	default:
  61:../device/i2c/i2c.c **** 		err = E_PAR;
  59                             		.loc 1 61 7
  60 0045 F8 A6 EF                		mov.L	#-17, [r10]
  62:../device/i2c/i2c.c **** 		break;
  61                             		.loc 1 62 3
  62 0048 03                      		nop
  63                             	.L5:
  63:../device/i2c/i2c.c **** 	}
  64:../device/i2c/i2c.c **** 
  65:../device/i2c/i2c.c **** 	return err;
  64                             		.loc 1 65 9
  65 0049 EC A5                   		mov.L	[r10], r5
  66:../device/i2c/i2c.c **** }
  66                             		.loc 1 66 1
  67 004b EF 51                   		mov.L	r5, r1
  68 004d 3F AA 04                		rtsd	#16, r10-r10
  69                             	.LFE6:
  72                             	_write_atr:
  73                             	.LFB7:
  67:../device/i2c/i2c.c **** 
  68:../device/i2c/i2c.c **** 
  69:../device/i2c/i2c.c **** LOCAL ER write_atr(T_I2C_DCB *p_dcb, T_DEVREQ *req)
  70:../device/i2c/i2c.c **** {
  74                             		.loc 1 70 1
  75 0050 7E AA                   		push.l	r10
  76                             	.LCFI2:
  77 0052 71 0A EC                		add	#-20, r0, r10
  78                             	.LCFI3:
  79 0055 71 A0 FC                		add	#-4, r10, r0
  80                             	.LCFI4:
  81 0058 E7 A1 03                		mov.L	r1, 12[r10]
  82 005b E7 A2 04                		mov.L	r2, 16[r10]
  71:../device/i2c/i2c.c **** 	T_I2C_EXEC	*p_ex;
  72:../device/i2c/i2c.c **** 	W		rtn;
  73:../device/i2c/i2c.c **** 	ER		err	= E_OK;
  83                             		.loc 1 73 6
  84 005e F8 A6 00                		mov.L	#0, [r10]
  74:../device/i2c/i2c.c **** 
  75:../device/i2c/i2c.c **** 	switch(req->start) {
  85                             		.loc 1 75 12
  86 0061 ED A5 04                		mov.L	16[r10], r5
  87 0064 A9 55                   		mov.L	16[r5], r5
  88                             		.loc 1 75 2
  89 0066 75 05 9C                		cmp	#-100, r5
  90 0069 20 36                   		beq	.L8
  91 006b 75 05 FF                		cmp	#-1, r5
  92 006e 3B BD 00                		bne	.L9
  76:../device/i2c/i2c.c **** 	case TDN_EVENT:			/* MBF ID for event notification */
  77:../device/i2c/i2c.c **** 		if(req->size >= sizeof(ID)) {
  93                             		.loc 1 77 9
  94 0071 ED A5 04                		mov.L	16[r10], r5
  95 0074 A9 5D                   		mov.L	20[r5], r5
  96                             		.loc 1 77 5
  97 0076 61 35                   		cmp	#3, r5
  98 0078 25 10                   		bleu	.L10
  78:../device/i2c/i2c.c **** 			p_dcb->evtmbfid = *(ID*)(req->buf);
  99                             		.loc 1 78 32
 100 007a ED A5 04                		mov.L	16[r10], r5
 101 007d A9 D5                   		mov.L	24[r5], r5
 102                             		.loc 1 78 22
 103 007f EC 54                   		mov.L	[r5], r4
 104                             		.loc 1 78 20
 105 0081 ED A5 03                		mov.L	12[r10], r5
 106 0084 A0 D4                   		mov.L	r4, 8[r5]
 107 0086 2E 10                   		bra	.L11
 108                             	.L10:
  79:../device/i2c/i2c.c **** 		} else if(req->size != 0) {
 109                             		.loc 1 79 16
 110 0088 ED A5 04                		mov.L	16[r10], r5
 111 008b A9 5D                   		mov.L	20[r5], r5
 112                             		.loc 1 79 12
 113 008d 61 05                   		cmp	#0, r5
 114 008f 17                      		beq	.L11
  80:../device/i2c/i2c.c **** 			err = E_PAR;
 115                             		.loc 1 80 8
 116 0090 F8 A6 EF                		mov.L	#-17, [r10]
  81:../device/i2c/i2c.c **** 			break;
 117                             		.loc 1 81 4
 118 0093 38 9D 00                		bra	.L12
 119                             	.L11:
  82:../device/i2c/i2c.c **** 		}
  83:../device/i2c/i2c.c **** 		req->asize = sizeof(ID);
 120                             		.loc 1 83 14
 121 0096 ED A5 04                		mov.L	16[r10], r5
 122 0099 3E 57 04                		mov.L	#4, 28[r5]
  84:../device/i2c/i2c.c **** 		break;
 123                             		.loc 1 84 3
 124 009c 38 94 00                		bra	.L12
 125                             	.L8:
  85:../device/i2c/i2c.c **** 	case TDN_I2C_EXEC:
  86:../device/i2c/i2c.c **** 		if(req->size >= sizeof(T_I2C_EXEC)) {
 126                             		.loc 1 86 9
 127 009f ED A5 04                		mov.L	16[r10], r5
 128 00a2 A9 5D                   		mov.L	20[r5], r5
 129                             		.loc 1 86 5
 130 00a4 75 55 13                		cmp	#19, r5
 131 00a7 25 71                   		bleu	.L13
  87:../device/i2c/i2c.c **** 			p_ex = (T_I2C_EXEC*)(req->buf);
 132                             		.loc 1 87 9
 133 00a9 ED A5 04                		mov.L	16[r10], r5
 134 00ac A9 D5                   		mov.L	24[r5], r5
 135 00ae E7 A5 01                		mov.L	r5, 4[r10]
  88:../device/i2c/i2c.c **** 			if(p_ex->snd_size <=0 || p_ex->snd_size > DEVCNF_I2C_MAX_SDATSZ) return E_PAR;
 136                             		.loc 1 88 11
 137 00b1 ED A5 01                		mov.L	4[r10], r5
 138 00b4 A8 5D                   		mov.L	4[r5], r5
 139                             		.loc 1 88 6
 140 00b6 61 05                   		cmp	#0, r5
 141 00b8 2B 0C                   		ble	.L14
 142                             		.loc 1 88 33 discriminator 2
 143 00ba ED A5 01                		mov.L	4[r10], r5
 144 00bd A8 5D                   		mov.L	4[r5], r5
 145                             		.loc 1 88 26 discriminator 2
 146 00bf 75 55 64                		cmp	#0x64, r5
 147 00c2 2B 07                   		ble	.L15
 148                             	.L14:
 149                             		.loc 1 88 76 discriminator 3
 150 00c4 FB 56 EF                		mov.L	#-17, r5
 151 00c7 2E 6B                   		bra	.L16
 152                             	.L15:
  89:../device/i2c/i2c.c **** 			if(p_ex->rcv_size <=0 || p_ex->rcv_size > DEVCNF_I2C_MAX_RDATSZ) return E_PAR;
 153                             		.loc 1 89 11
 154 00c9 ED A5 01                		mov.L	4[r10], r5
 155 00cc A8 DD                   		mov.L	12[r5], r5
 156                             		.loc 1 89 6
 157 00ce 61 05                   		cmp	#0, r5
 158 00d0 2B 0C                   		ble	.L17
 159                             		.loc 1 89 33 discriminator 2
 160 00d2 ED A5 01                		mov.L	4[r10], r5
 161 00d5 A8 DD                   		mov.L	12[r5], r5
 162                             		.loc 1 89 26 discriminator 2
 163 00d7 75 55 64                		cmp	#0x64, r5
 164 00da 2B 07                   		ble	.L18
 165                             	.L17:
 166                             		.loc 1 89 76 discriminator 3
 167 00dc FB 56 EF                		mov.L	#-17, r5
 168 00df 2E 53                   		bra	.L16
 169                             	.L18:
  90:../device/i2c/i2c.c **** 
  91:../device/i2c/i2c.c **** 			rtn = dev_i2c_llctl(p_dcb->unit, LLD_I2C_EXEC, req->start, req->size, (UW*)p_ex);
 170                             		.loc 1 91 10
 171 00e1 ED A5 03                		mov.L	12[r10], r5
 172 00e4 EC 51                   		mov.L	[r5], r1
 173                             		.loc 1 91 54
 174 00e6 ED A5 04                		mov.L	16[r10], r5
 175 00e9 A9 55                   		mov.L	16[r5], r5
 176                             		.loc 1 91 10
 177 00eb EF 53                   		mov.L	r5, r3
 178                             		.loc 1 91 66
 179 00ed ED A5 04                		mov.L	16[r10], r5
 180 00f0 A9 5D                   		mov.L	20[r5], r5
 181                             		.loc 1 91 10
 182 00f2 ED A4 01                		mov.L	4[r10], r4
 183 00f5 E3 04                   		mov.L	r4, [r0]
 184 00f7 EF 54                   		mov.L	r5, r4
 185 00f9 66 42                   		mov.L	#4, r2
 186 00fb 05 00 00 00             		bsr	_dev_i2c_llctl
 187 00ff E7 A1 02                		mov.L	r1, 8[r10]
  92:../device/i2c/i2c.c **** 			if(rtn > 0) {
 188                             		.loc 1 92 6
 189 0102 ED A5 02                		mov.L	8[r10], r5
 190 0105 61 05                   		cmp	#0, r5
 191 0107 2B 0A                   		ble	.L19
  93:../device/i2c/i2c.c **** 				req->asize = sizeof(T_I2C_EXEC);
 192                             		.loc 1 93 16
 193 0109 ED A5 04                		mov.L	16[r10], r5
 194 010c 3E 57 14                		mov.L	#20, 28[r5]
  94:../device/i2c/i2c.c **** 			} else {
  95:../device/i2c/i2c.c **** 				err = (ER)rtn;
  96:../device/i2c/i2c.c **** 			}
  97:../device/i2c/i2c.c **** 		} else if(req->size == 0){
  98:../device/i2c/i2c.c **** 			req->asize = sizeof(T_I2C_EXEC);
  99:../device/i2c/i2c.c **** 		} else {
 100:../device/i2c/i2c.c **** 			err = E_PAR;
 101:../device/i2c/i2c.c **** 		}
 102:../device/i2c/i2c.c **** 		break;
 195                             		.loc 1 102 3
 196 010f 2E 21                   		bra	.L12
 197                             	.L19:
  95:../device/i2c/i2c.c **** 			}
 198                             		.loc 1 95 9
 199 0111 ED A5 02                		mov.L	8[r10], r5
 200 0114 E3 A5                   		mov.L	r5, [r10]
 201                             		.loc 1 102 3
 202 0116 2E 1A                   		bra	.L12
 203                             	.L13:
  97:../device/i2c/i2c.c **** 			req->asize = sizeof(T_I2C_EXEC);
 204                             		.loc 1 97 16
 205 0118 ED A5 04                		mov.L	16[r10], r5
 206 011b A9 5D                   		mov.L	20[r5], r5
  97:../device/i2c/i2c.c **** 			req->asize = sizeof(T_I2C_EXEC);
 207                             		.loc 1 97 12
 208 011d 61 05                   		cmp	#0, r5
 209 011f 18                      		bne	.L22
  98:../device/i2c/i2c.c **** 		} else {
 210                             		.loc 1 98 15
 211 0120 ED A5 04                		mov.L	16[r10], r5
 212 0123 3E 57 14                		mov.L	#20, 28[r5]
 213                             		.loc 1 102 3
 214 0126 0A                      		bra	.L12
 215                             	.L22:
 100:../device/i2c/i2c.c **** 		}
 216                             		.loc 1 100 8
 217 0127 F8 A6 EF                		mov.L	#-17, [r10]
 218                             		.loc 1 102 3
 219 012a 0E                      		bra	.L12
 220                             	.L9:
 103:../device/i2c/i2c.c **** 
 104:../device/i2c/i2c.c **** 	default:
 105:../device/i2c/i2c.c **** 		err = E_PAR;
 221                             		.loc 1 105 7
 222 012b F8 A6 EF                		mov.L	#-17, [r10]
 106:../device/i2c/i2c.c **** 		break;
 223                             		.loc 1 106 3
 224 012e 03                      		nop
 225 012f 03                      		.balign 8,3,1
 226                             	.L12:
 107:../device/i2c/i2c.c **** 	}
 108:../device/i2c/i2c.c **** 
 109:../device/i2c/i2c.c **** 	return err;
 227                             		.loc 1 109 9
 228 0130 EC A5                   		mov.L	[r10], r5
 229                             	.L16:
 110:../device/i2c/i2c.c **** }
 230                             		.loc 1 110 1
 231 0132 EF 51                   		mov.L	r5, r1
 232 0134 3F AA 07                		rtsd	#28, r10-r10
 233                             	.LFE7:
 236                             	_read_data:
 237                             	.LFB8:
 111:../device/i2c/i2c.c **** 
 112:../device/i2c/i2c.c **** /*---------------------------------------------------------------------*/
 113:../device/i2c/i2c.c **** /*Device-specific data control
 114:../device/i2c/i2c.c ****  */
 115:../device/i2c/i2c.c **** LOCAL ER read_data(T_I2C_DCB *p_dcb, T_DEVREQ *req)
 116:../device/i2c/i2c.c **** {
 238                             		.loc 1 116 1
 239 0137 7E AA                   		push.l	r10
 240                             	.LCFI5:
 241 0139 71 0A F0                		add	#-16, r0, r10
 242                             	.LCFI6:
 243 013c 71 A0 FC                		add	#-4, r10, r0
 244                             	.LCFI7:
 245 013f E7 A1 02                		mov.L	r1, 8[r10]
 246 0142 E7 A2 03                		mov.L	r2, 12[r10]
 117:../device/i2c/i2c.c **** 	W	rtn;
 118:../device/i2c/i2c.c **** 	ER	err	= E_OK;
 247                             		.loc 1 118 5
 248 0145 F8 A6 00                		mov.L	#0, [r10]
 119:../device/i2c/i2c.c **** 
 120:../device/i2c/i2c.c **** 	if(req->size <=0 || req->size > DEVCNF_I2C_MAX_RDATSZ) return E_PAR;
 249                             		.loc 1 120 8
 250 0148 ED A5 03                		mov.L	12[r10], r5
 251 014b A9 5D                   		mov.L	20[r5], r5
 252                             		.loc 1 120 4
 253 014d 61 05                   		cmp	#0, r5
 254 014f 2B 0C                   		ble	.L24
 255                             		.loc 1 120 25 discriminator 2
 256 0151 ED A5 03                		mov.L	12[r10], r5
 257 0154 A9 5D                   		mov.L	20[r5], r5
 258                             		.loc 1 120 19 discriminator 2
 259 0156 75 55 64                		cmp	#0x64, r5
 260 0159 2B 07                   		ble	.L25
 261                             	.L24:
 262                             		.loc 1 120 64 discriminator 3
 263 015b FB 56 EF                		mov.L	#-17, r5
 264 015e 2E 52                   		bra	.L26
 265                             	.L25:
 121:../device/i2c/i2c.c **** 
 122:../device/i2c/i2c.c **** 	if(req->size) {
 266                             		.loc 1 122 8
 267 0160 ED A5 03                		mov.L	12[r10], r5
 268 0163 A9 5D                   		mov.L	20[r5], r5
 269                             		.loc 1 122 4
 270 0165 61 05                   		cmp	#0, r5
 271 0167 20 3D                   		beq	.L27
 123:../device/i2c/i2c.c **** 		rtn = dev_i2c_llctl(p_dcb->unit, LLD_I2C_READ, req->start, req->size, req->buf);
 272                             		.loc 1 123 9
 273 0169 ED A5 02                		mov.L	8[r10], r5
 274 016c EC 51                   		mov.L	[r5], r1
 275                             		.loc 1 123 53
 276 016e ED A5 03                		mov.L	12[r10], r5
 277 0171 A9 55                   		mov.L	16[r5], r5
 278                             		.loc 1 123 9
 279 0173 EF 53                   		mov.L	r5, r3
 280                             		.loc 1 123 65
 281 0175 ED A5 03                		mov.L	12[r10], r5
 282 0178 A9 5D                   		mov.L	20[r5], r5
 283                             		.loc 1 123 9
 284 017a EF 54                   		mov.L	r5, r4
 285                             		.loc 1 123 76
 286 017c ED A5 03                		mov.L	12[r10], r5
 287 017f A9 D5                   		mov.L	24[r5], r5
 288                             		.loc 1 123 9
 289 0181 E3 05                   		mov.L	r5, [r0]
 290 0183 66 22                   		mov.L	#2, r2
 291 0185 05 00 00 00             		bsr	_dev_i2c_llctl
 292 0189 E7 A1 01                		mov.L	r1, 4[r10]
 124:../device/i2c/i2c.c **** 		if(rtn > 0) {
 293                             		.loc 1 124 5
 294 018c ED A5 01                		mov.L	4[r10], r5
 295 018f 61 05                   		cmp	#0, r5
 296 0191 2B 0C                   		ble	.L28
 125:../device/i2c/i2c.c **** 			req->asize = rtn;
 297                             		.loc 1 125 15
 298 0193 ED A5 03                		mov.L	12[r10], r5
 299 0196 ED A4 01                		mov.L	4[r10], r4
 300 0199 A1 DC                   		mov.L	r4, 28[r5]
 301 019b 2E 13                   		bra	.L30
 302                             	.L28:
 126:../device/i2c/i2c.c **** 		} else {
 127:../device/i2c/i2c.c **** 			err = (ER)rtn;
 303                             		.loc 1 127 8
 304 019d ED A5 01                		mov.L	4[r10], r5
 305 01a0 E3 A5                   		mov.L	r5, [r10]
 306 01a2 2E 0C                   		bra	.L30
 307                             	.L27:
 128:../device/i2c/i2c.c **** 		}
 129:../device/i2c/i2c.c **** 
 130:../device/i2c/i2c.c **** 	} else {
 131:../device/i2c/i2c.c **** 		req->asize = req->size;
 308                             		.loc 1 131 19
 309 01a4 ED A5 03                		mov.L	12[r10], r5
 310 01a7 A9 5C                   		mov.L	20[r5], r4
 311                             		.loc 1 131 14
 312 01a9 ED A5 03                		mov.L	12[r10], r5
 313 01ac A1 DC                   		mov.L	r4, 28[r5]
 314                             	.L30:
 132:../device/i2c/i2c.c **** 	}
 133:../device/i2c/i2c.c **** 
 134:../device/i2c/i2c.c **** 	return err;
 315                             		.loc 1 134 9
 316 01ae EC A5                   		mov.L	[r10], r5
 317                             	.L26:
 135:../device/i2c/i2c.c **** }
 318                             		.loc 1 135 1
 319 01b0 EF 51                   		mov.L	r5, r1
 320 01b2 3F AA 06                		rtsd	#24, r10-r10
 321                             	.LFE8:
 324                             	_write_data:
 325                             	.LFB9:
 136:../device/i2c/i2c.c **** 
 137:../device/i2c/i2c.c **** 
 138:../device/i2c/i2c.c **** LOCAL ER write_data(T_I2C_DCB *p_dcb, T_DEVREQ *req)
 139:../device/i2c/i2c.c **** {
 326                             		.loc 1 139 1
 327 01b5 7E AA                   		push.l	r10
 328                             	.LCFI8:
 329 01b7 71 0A F0                		add	#-16, r0, r10
 330                             	.LCFI9:
 331 01ba 71 A0 FC                		add	#-4, r10, r0
 332                             	.LCFI10:
 333 01bd E7 A1 02                		mov.L	r1, 8[r10]
 334 01c0 E7 A2 03                		mov.L	r2, 12[r10]
 140:../device/i2c/i2c.c **** 	W	rtn;
 141:../device/i2c/i2c.c **** 	ER	err	= E_OK;
 335                             		.loc 1 141 5
 336 01c3 F8 A6 00                		mov.L	#0, [r10]
 142:../device/i2c/i2c.c **** 
 143:../device/i2c/i2c.c **** 	if(req->size <=0 || req->size > DEVCNF_I2C_MAX_SDATSZ) return E_PAR;
 337                             		.loc 1 143 8
 338 01c6 ED A5 03                		mov.L	12[r10], r5
 339 01c9 A9 5D                   		mov.L	20[r5], r5
 340                             		.loc 1 143 4
 341 01cb 61 05                   		cmp	#0, r5
 342 01cd 2B 0C                   		ble	.L32
 343                             		.loc 1 143 25 discriminator 2
 344 01cf ED A5 03                		mov.L	12[r10], r5
 345 01d2 A9 5D                   		mov.L	20[r5], r5
 346                             		.loc 1 143 19 discriminator 2
 347 01d4 75 55 64                		cmp	#0x64, r5
 348 01d7 2B 07                   		ble	.L33
 349                             	.L32:
 350                             		.loc 1 143 64 discriminator 3
 351 01d9 FB 56 EF                		mov.L	#-17, r5
 352 01dc 2E 52                   		bra	.L34
 353                             	.L33:
 144:../device/i2c/i2c.c **** 
 145:../device/i2c/i2c.c **** 	if(req->size) {
 354                             		.loc 1 145 8
 355 01de ED A5 03                		mov.L	12[r10], r5
 356 01e1 A9 5D                   		mov.L	20[r5], r5
 357                             		.loc 1 145 4
 358 01e3 61 05                   		cmp	#0, r5
 359 01e5 20 3D                   		beq	.L35
 146:../device/i2c/i2c.c **** 		rtn = dev_i2c_llctl(p_dcb->unit, LLD_I2C_WRITE, req->start, req->size, req->buf);
 360                             		.loc 1 146 9
 361 01e7 ED A5 02                		mov.L	8[r10], r5
 362 01ea EC 51                   		mov.L	[r5], r1
 363                             		.loc 1 146 54
 364 01ec ED A5 03                		mov.L	12[r10], r5
 365 01ef A9 55                   		mov.L	16[r5], r5
 366                             		.loc 1 146 9
 367 01f1 EF 53                   		mov.L	r5, r3
 368                             		.loc 1 146 66
 369 01f3 ED A5 03                		mov.L	12[r10], r5
 370 01f6 A9 5D                   		mov.L	20[r5], r5
 371                             		.loc 1 146 9
 372 01f8 EF 54                   		mov.L	r5, r4
 373                             		.loc 1 146 77
 374 01fa ED A5 03                		mov.L	12[r10], r5
 375 01fd A9 D5                   		mov.L	24[r5], r5
 376                             		.loc 1 146 9
 377 01ff E3 05                   		mov.L	r5, [r0]
 378 0201 66 32                   		mov.L	#3, r2
 379 0203 05 00 00 00             		bsr	_dev_i2c_llctl
 380 0207 E7 A1 01                		mov.L	r1, 4[r10]
 147:../device/i2c/i2c.c **** 		if(rtn > 0) {
 381                             		.loc 1 147 5
 382 020a ED A5 01                		mov.L	4[r10], r5
 383 020d 61 05                   		cmp	#0, r5
 384 020f 2B 0C                   		ble	.L36
 148:../device/i2c/i2c.c **** 			req->asize = rtn;
 385                             		.loc 1 148 15
 386 0211 ED A5 03                		mov.L	12[r10], r5
 387 0214 ED A4 01                		mov.L	4[r10], r4
 388 0217 A1 DC                   		mov.L	r4, 28[r5]
 389 0219 2E 13                   		bra	.L38
 390                             	.L36:
 149:../device/i2c/i2c.c **** 		} else {
 150:../device/i2c/i2c.c **** 			err = (ER)rtn;
 391                             		.loc 1 150 8
 392 021b ED A5 01                		mov.L	4[r10], r5
 393 021e E3 A5                   		mov.L	r5, [r10]
 394 0220 2E 0C                   		bra	.L38
 395                             	.L35:
 151:../device/i2c/i2c.c **** 		}
 152:../device/i2c/i2c.c **** 
 153:../device/i2c/i2c.c **** 	} else {
 154:../device/i2c/i2c.c **** 		req->asize = req->size;
 396                             		.loc 1 154 19
 397 0222 ED A5 03                		mov.L	12[r10], r5
 398 0225 A9 5C                   		mov.L	20[r5], r4
 399                             		.loc 1 154 14
 400 0227 ED A5 03                		mov.L	12[r10], r5
 401 022a A1 DC                   		mov.L	r4, 28[r5]
 402                             	.L38:
 155:../device/i2c/i2c.c **** 	}
 156:../device/i2c/i2c.c **** 
 157:../device/i2c/i2c.c **** 
 158:../device/i2c/i2c.c **** 	return err;
 403                             		.loc 1 158 9
 404 022c EC A5                   		mov.L	[r10], r5
 405                             	.L34:
 159:../device/i2c/i2c.c **** }
 406                             		.loc 1 159 1
 407 022e EF 51                   		mov.L	r5, r1
 408 0230 3F AA 06                		rtsd	#24, r10-r10
 409                             	.LFE9:
 411                             		.global	_dev_i2c_openfn
 413                             	_dev_i2c_openfn:
 414                             	.LFB10:
 160:../device/i2c/i2c.c **** 
 161:../device/i2c/i2c.c **** /*-------------------------------------------------------
 162:../device/i2c/i2c.c ****  * mSDI I/F function
 163:../device/i2c/i2c.c ****  *-------------------------------------------------------
 164:../device/i2c/i2c.c ****  */
 165:../device/i2c/i2c.c **** /*----------------------------------------------------------------------
 166:../device/i2c/i2c.c ****  * Open device
 167:../device/i2c/i2c.c ****  */
 168:../device/i2c/i2c.c **** ER dev_i2c_openfn( ID devid, UINT omode, T_MSDI *msdi)
 169:../device/i2c/i2c.c **** {
 415                             		.loc 1 169 1
 416 0233 7E AA                   		push.l	r10
 417                             	.LCFI11:
 418 0235 71 0A EC                		add	#-20, r0, r10
 419                             	.LCFI12:
 420 0238 71 A0 FC                		add	#-4, r10, r0
 421                             	.LCFI13:
 422 023b E7 A1 02                		mov.L	r1, 8[r10]
 423 023e E7 A2 03                		mov.L	r2, 12[r10]
 424 0241 E7 A3 04                		mov.L	r3, 16[r10]
 170:../device/i2c/i2c.c **** 	T_I2C_DCB	*p_dcb;
 171:../device/i2c/i2c.c **** 	ER		err;
 172:../device/i2c/i2c.c **** 
 173:../device/i2c/i2c.c **** 	p_dcb = (T_I2C_DCB*)(msdi->dmsdi.exinf);
 425                             		.loc 1 173 8
 426 0244 ED A5 04                		mov.L	16[r10], r5
 427 0247 A9 55                   		mov.L	16[r5], r5
 428 0249 E3 A5                   		mov.L	r5, [r10]
 174:../device/i2c/i2c.c **** 
 175:../device/i2c/i2c.c **** 	/* Device Open operation */
 176:../device/i2c/i2c.c **** 	p_dcb->omode = omode;
 429                             		.loc 1 176 15
 430 024b EC A5                   		mov.L	[r10], r5
 431 024d ED A4 03                		mov.L	12[r10], r4
 432 0250 A0 5C                   		mov.L	r4, 4[r5]
 177:../device/i2c/i2c.c **** 	err = (ER)dev_i2c_llctl(p_dcb->unit, LLD_I2C_OPEN, 0, 0, 0);
 433                             		.loc 1 177 12
 434 0252 EC A5                   		mov.L	[r10], r5
 435 0254 EC 55                   		mov.L	[r5], r5
 436 0256 F8 06 00                		mov.L	#0, [r0]
 437 0259 66 04                   		mov.L	#0, r4
 438 025b 66 03                   		mov.L	#0, r3
 439 025d 66 02                   		mov.L	#0, r2
 440 025f EF 51                   		mov.L	r5, r1
 441 0261 05 00 00 00             		bsr	_dev_i2c_llctl
 442 0265 E7 A1 01                		mov.L	r1, 4[r10]
 178:../device/i2c/i2c.c **** 
 179:../device/i2c/i2c.c **** 	return err;
 443                             		.loc 1 179 9
 444 0268 ED A5 01                		mov.L	4[r10], r5
 180:../device/i2c/i2c.c **** }
 445                             		.loc 1 180 1
 446 026b EF 51                   		mov.L	r5, r1
 447 026d 3F AA 07                		rtsd	#28, r10-r10
 448                             	.LFE10:
 450                             		.global	_dev_i2c_closefn
 452                             	_dev_i2c_closefn:
 453                             	.LFB11:
 181:../device/i2c/i2c.c **** 
 182:../device/i2c/i2c.c **** /*----------------------------------------------------------------------
 183:../device/i2c/i2c.c ****  * Close Device
 184:../device/i2c/i2c.c ****  */
 185:../device/i2c/i2c.c **** ER dev_i2c_closefn( ID devid, UINT option, T_MSDI *msdi)
 186:../device/i2c/i2c.c **** {
 454                             		.loc 1 186 1
 455 0270 7E AA                   		push.l	r10
 456                             	.LCFI14:
 457 0272 71 0A EC                		add	#-20, r0, r10
 458                             	.LCFI15:
 459 0275 71 A0 FC                		add	#-4, r10, r0
 460                             	.LCFI16:
 461 0278 E7 A1 02                		mov.L	r1, 8[r10]
 462 027b E7 A2 03                		mov.L	r2, 12[r10]
 463 027e E7 A3 04                		mov.L	r3, 16[r10]
 187:../device/i2c/i2c.c **** 	T_I2C_DCB	*p_dcb;
 188:../device/i2c/i2c.c **** 	ER		err;
 189:../device/i2c/i2c.c **** 
 190:../device/i2c/i2c.c **** 	p_dcb = (T_I2C_DCB*)(msdi->dmsdi.exinf);
 464                             		.loc 1 190 8
 465 0281 ED A5 04                		mov.L	16[r10], r5
 466 0284 A9 55                   		mov.L	16[r5], r5
 467 0286 E3 A5                   		mov.L	r5, [r10]
 191:../device/i2c/i2c.c **** 
 192:../device/i2c/i2c.c **** 	/* Device Close operation */
 193:../device/i2c/i2c.c **** 	err = (ER)dev_i2c_llctl(p_dcb->unit, LLD_I2C_CLOSE, 0, 0, 0);
 468                             		.loc 1 193 12
 469 0288 EC A5                   		mov.L	[r10], r5
 470 028a EC 55                   		mov.L	[r5], r5
 471 028c F8 06 00                		mov.L	#0, [r0]
 472 028f 66 04                   		mov.L	#0, r4
 473 0291 66 03                   		mov.L	#0, r3
 474 0293 66 12                   		mov.L	#1, r2
 475 0295 EF 51                   		mov.L	r5, r1
 476 0297 05 00 00 00             		bsr	_dev_i2c_llctl
 477 029b E7 A1 01                		mov.L	r1, 4[r10]
 194:../device/i2c/i2c.c **** 
 195:../device/i2c/i2c.c **** 	return err;
 478                             		.loc 1 195 9
 479 029e ED A5 01                		mov.L	4[r10], r5
 196:../device/i2c/i2c.c **** }
 480                             		.loc 1 196 1
 481 02a1 EF 51                   		mov.L	r5, r1
 482 02a3 3F AA 07                		rtsd	#28, r10-r10
 483                             	.LFE11:
 485                             		.global	_dev_i2c_readfn
 487                             	_dev_i2c_readfn:
 488                             	.LFB12:
 197:../device/i2c/i2c.c **** 
 198:../device/i2c/i2c.c **** /*----------------------------------------------------------------------
 199:../device/i2c/i2c.c ****  * Read Device
 200:../device/i2c/i2c.c ****  */
 201:../device/i2c/i2c.c **** ER dev_i2c_readfn( T_DEVREQ *req, T_MSDI *p_msdi)
 202:../device/i2c/i2c.c **** {
 489                             		.loc 1 202 1
 490 02a6 7E AA                   		push.l	r10
 491                             	.LCFI17:
 492 02a8 71 0A F0                		add	#-16, r0, r10
 493                             	.LCFI18:
 494 02ab EF A0                   		mov.L	r10, r0
 495 02ad E7 A1 02                		mov.L	r1, 8[r10]
 496 02b0 E7 A2 03                		mov.L	r2, 12[r10]
 203:../device/i2c/i2c.c **** 	T_I2C_DCB	*p_dcb;
 204:../device/i2c/i2c.c **** 	ER		err;
 205:../device/i2c/i2c.c **** 
 206:../device/i2c/i2c.c **** 	p_dcb = (T_I2C_DCB*)(p_msdi->dmsdi.exinf);
 497                             		.loc 1 206 8
 498 02b3 ED A5 03                		mov.L	12[r10], r5
 499 02b6 A9 55                   		mov.L	16[r5], r5
 500 02b8 E7 A5 01                		mov.L	r5, 4[r10]
 207:../device/i2c/i2c.c **** 
 208:../device/i2c/i2c.c **** 	if(req->start >= 0) {
 501                             		.loc 1 208 8
 502 02bb ED A5 02                		mov.L	8[r10], r5
 503 02be A9 55                   		mov.L	16[r5], r5
 504                             		.loc 1 208 4
 505 02c0 61 05                   		cmp	#0, r5
 506 02c2 29 0F                   		blt	.L44
 209:../device/i2c/i2c.c **** 		// Device specific data
 210:../device/i2c/i2c.c **** 		err = read_data( p_dcb, req);
 507                             		.loc 1 210 9
 508 02c4 ED A2 02                		mov.L	8[r10], r2
 509 02c7 ED A1 01                		mov.L	4[r10], r1
 510 02ca 39 6D FE                		bsr	_read_data
 511 02cd E3 A1                   		mov.L	r1, [r10]
 512 02cf 2E 0D                   		bra	.L45
 513                             	.L44:
 211:../device/i2c/i2c.c **** 	} else {
 212:../device/i2c/i2c.c **** 		// Device attribute data
 213:../device/i2c/i2c.c **** 		err = read_atr( p_dcb, req);
 514                             		.loc 1 213 9
 515 02d1 ED A2 02                		mov.L	8[r10], r2
 516 02d4 ED A1 01                		mov.L	4[r10], r1
 517 02d7 39 29 FD                		bsr	_read_atr
 518 02da E3 A1                   		mov.L	r1, [r10]
 519                             	.L45:
 214:../device/i2c/i2c.c **** 	}
 215:../device/i2c/i2c.c **** 
 216:../device/i2c/i2c.c **** 	return err;
 520                             		.loc 1 216 9
 521 02dc EC A5                   		mov.L	[r10], r5
 217:../device/i2c/i2c.c **** }
 522                             		.loc 1 217 1
 523 02de EF 51                   		mov.L	r5, r1
 524 02e0 3F AA 05                		rtsd	#20, r10-r10
 525                             	.LFE12:
 527                             		.global	_dev_i2c_writefn
 529                             	_dev_i2c_writefn:
 530                             	.LFB13:
 218:../device/i2c/i2c.c **** 
 219:../device/i2c/i2c.c **** /*----------------------------------------------------------------------
 220:../device/i2c/i2c.c ****  * Write Device
 221:../device/i2c/i2c.c ****  */
 222:../device/i2c/i2c.c **** ER dev_i2c_writefn( T_DEVREQ *req, T_MSDI *p_msdi)
 223:../device/i2c/i2c.c **** {
 531                             		.loc 1 223 1
 532 02e3 7E AA                   		push.l	r10
 533                             	.LCFI19:
 534 02e5 71 0A F0                		add	#-16, r0, r10
 535                             	.LCFI20:
 536 02e8 EF A0                   		mov.L	r10, r0
 537 02ea E7 A1 02                		mov.L	r1, 8[r10]
 538 02ed E7 A2 03                		mov.L	r2, 12[r10]
 224:../device/i2c/i2c.c **** 	T_I2C_DCB	*p_dcb;
 225:../device/i2c/i2c.c **** 	ER		rtn;
 226:../device/i2c/i2c.c **** 
 227:../device/i2c/i2c.c **** 	p_dcb = (T_I2C_DCB*)(p_msdi->dmsdi.exinf);
 539                             		.loc 1 227 8
 540 02f0 ED A5 03                		mov.L	12[r10], r5
 541 02f3 A9 55                   		mov.L	16[r5], r5
 542 02f5 E7 A5 01                		mov.L	r5, 4[r10]
 228:../device/i2c/i2c.c **** 
 229:../device/i2c/i2c.c **** 	if(req->start >= 0) {
 543                             		.loc 1 229 8
 544 02f8 ED A5 02                		mov.L	8[r10], r5
 545 02fb A9 55                   		mov.L	16[r5], r5
 546                             		.loc 1 229 4
 547 02fd 61 05                   		cmp	#0, r5
 548 02ff 29 0F                   		blt	.L48
 230:../device/i2c/i2c.c **** 		// Device specific data
 231:../device/i2c/i2c.c **** 		rtn = write_data( p_dcb, req);
 549                             		.loc 1 231 9
 550 0301 ED A2 02                		mov.L	8[r10], r2
 551 0304 ED A1 01                		mov.L	4[r10], r1
 552 0307 39 AE FE                		bsr	_write_data
 553 030a E3 A1                   		mov.L	r1, [r10]
 554 030c 2E 0D                   		bra	.L49
 555                             	.L48:
 232:../device/i2c/i2c.c **** 	} else {
 233:../device/i2c/i2c.c **** 		// Device attribute data
 234:../device/i2c/i2c.c **** 		rtn = write_atr( p_dcb, req);
 556                             		.loc 1 234 9
 557 030e ED A2 02                		mov.L	8[r10], r2
 558 0311 ED A1 01                		mov.L	4[r10], r1
 559 0314 39 3C FD                		bsr	_write_atr
 560 0317 E3 A1                   		mov.L	r1, [r10]
 561                             	.L49:
 235:../device/i2c/i2c.c **** 	}
 236:../device/i2c/i2c.c **** 
 237:../device/i2c/i2c.c **** 	return rtn;
 562                             		.loc 1 237 9
 563 0319 EC A5                   		mov.L	[r10], r5
 238:../device/i2c/i2c.c **** }
 564                             		.loc 1 238 1
 565 031b EF 51                   		mov.L	r5, r1
 566 031d 3F AA 05                		rtsd	#20, r10-r10
 567                             	.LFE13:
 569                             		.global	_dev_i2c_eventfn
 571                             	_dev_i2c_eventfn:
 572                             	.LFB14:
 239:../device/i2c/i2c.c **** 
 240:../device/i2c/i2c.c **** /*----------------------------------------------------------------------
 241:../device/i2c/i2c.c ****  * Event Device
 242:../device/i2c/i2c.c ****  */
 243:../device/i2c/i2c.c **** ER dev_i2c_eventfn( INT evttyp, void *evtinf, T_MSDI *msdi)
 244:../device/i2c/i2c.c **** {
 573                             		.loc 1 244 1
 574 0320 7E AA                   		push.l	r10
 575                             	.LCFI21:
 576 0322 71 0A F4                		add	#-12, r0, r10
 577                             	.LCFI22:
 578 0325 EF A0                   		mov.L	r10, r0
 579 0327 E3 A1                   		mov.L	r1, [r10]
 580 0329 E7 A2 01                		mov.L	r2, 4[r10]
 581 032c E7 A3 02                		mov.L	r3, 8[r10]
 245:../device/i2c/i2c.c **** 	return E_NOSPT;
 582                             		.loc 1 245 9
 583 032f FB 56 F7                		mov.L	#-9, r5
 246:../device/i2c/i2c.c **** }
 584                             		.loc 1 246 1
 585 0332 EF 51                   		mov.L	r5, r1
 586 0334 3F AA 04                		rtsd	#16, r10-r10
 587                             	.LFE14:
 589                             		.section C,"a",@progbits
 590                             		.p2align 2
 591                             	.LC0:
 592 0000 69 69 63 00             		.string	"iic"
 593                             		.section P,"ax"
 594                             		.global	_dev_init_i2c
 596                             	_dev_init_i2c:
 597                             	.LFB15:
 247:../device/i2c/i2c.c **** 
 248:../device/i2c/i2c.c **** /*----------------------------------------------------------------------
 249:../device/i2c/i2c.c ****  * Device driver initialization and registration
 250:../device/i2c/i2c.c ****  */
 251:../device/i2c/i2c.c **** EXPORT ER dev_init_i2c( UW unit )
 252:../device/i2c/i2c.c **** {
 598                             		.loc 1 252 1
 599 0337 7E AA                   		push.l	r10
 600                             	.LCFI23:
 601 0339 71 0A B4                		add	#-76, r0, r10
 602                             	.LCFI24:
 603 033c EF A0                   		mov.L	r10, r0
 604 033e E7 A1 12                		mov.L	r1, 72[r10]
 253:../device/i2c/i2c.c **** 	T_I2C_DCB	*p_dcb;
 254:../device/i2c/i2c.c **** 	T_IDEV		idev;
 255:../device/i2c/i2c.c **** 	T_MSDI		*p_msdi;
 256:../device/i2c/i2c.c **** 	T_DMSDI		dmsdi;
 257:../device/i2c/i2c.c **** 	ER		err;
 258:../device/i2c/i2c.c **** 	INT		i;
 259:../device/i2c/i2c.c **** 
 260:../device/i2c/i2c.c **** 	if( unit >= DEV_I2C_UNITNM) return E_PAR;
 605                             		.loc 1 260 4
 606 0341 ED A5 12                		mov.L	72[r10], r5
 607 0344 61 25                   		cmp	#2, r5
 608 0346 25 08                   		bleu	.L54
 609                             		.loc 1 260 37 discriminator 1
 610 0348 FB 56 EF                		mov.L	#-17, r5
 611 034b 38 F5 00                		bra	.L61
 612                             	.L54:
 261:../device/i2c/i2c.c **** 
 262:../device/i2c/i2c.c **** #if TK_SUPPORT_MEMLIB
 263:../device/i2c/i2c.c **** 	p_dcb = (T_I2C_DCB*)Kmalloc(sizeof(T_I2C_DCB));
 613                             		.loc 1 263 22
 614 034e 66 C1                   		mov.L	#12, r1
 615 0350 05 00 00 00             		bsr	_Kmalloc
 616 0354 E7 A1 01                		mov.L	r1, 4[r10]
 264:../device/i2c/i2c.c **** 	if( p_dcb == NULL) return E_NOMEM;
 617                             		.loc 1 264 4
 618 0357 ED A5 01                		mov.L	4[r10], r5
 619 035a 61 05                   		cmp	#0, r5
 620 035c 1F                      		bne	.L56
 621                             		.loc 1 264 28 discriminator 1
 622 035d FB 56 DF                		mov.L	#-33, r5
 623 0360 38 E0 00                		bra	.L61
 624                             	.L56:
 265:../device/i2c/i2c.c **** 	dev_i2c_cb[unit]	= p_dcb;
 625                             		.loc 1 265 19
 626 0363 FB 52 00 00 00 00       		mov.L	#_dev_i2c_cb, r5
 627 0369 ED A4 12                		mov.L	72[r10], r4
 628 036c ED A3 01                		mov.L	4[r10], r3
 629 036f FE 24 53                		mov.L	r3, [r4,r5]
 266:../device/i2c/i2c.c **** #else
 267:../device/i2c/i2c.c **** 	p_dcb = &dev_i2c_cb[unit];
 268:../device/i2c/i2c.c **** #endif
 269:../device/i2c/i2c.c **** 
 270:../device/i2c/i2c.c **** 	/* Device registration information */
 271:../device/i2c/i2c.c **** 	dmsdi.exinf	= p_dcb;
 630                             		.loc 1 271 14
 631 0372 ED A5 01                		mov.L	4[r10], r5
 632 0375 E7 A5 05                		mov.L	r5, 20[r10]
 272:../device/i2c/i2c.c **** 	dmsdi.drvatr	= 0;			/* Driver attributes */
 633                             		.loc 1 272 15
 634 0378 F9 A6 09 00             		mov.L	#0, 36[r10]
 273:../device/i2c/i2c.c **** 	dmsdi.devatr	= TDK_UNDEF;		/* Device attributes */
 635                             		.loc 1 273 15
 636 037c F9 A6 0A 00             		mov.L	#0, 40[r10]
 274:../device/i2c/i2c.c **** 	dmsdi.nsub	= 0;			/* Number of sub units */
 637                             		.loc 1 274 13
 638 0380 F9 A6 0B 00             		mov.L	#0, 44[r10]
 275:../device/i2c/i2c.c **** 	dmsdi.blksz	= 1;			/* Unique data block size (-1 = unknown) */
 639                             		.loc 1 275 14
 640 0384 F9 A6 0C 01             		mov.L	#1, 48[r10]
 276:../device/i2c/i2c.c **** 	dmsdi.openfn	= dev_i2c_openfn;
 641                             		.loc 1 276 15
 642 0388 F9 A2 0D 00 00 00 00    		mov.L	#_dev_i2c_openfn, 52[r10]
 277:../device/i2c/i2c.c **** 	dmsdi.closefn	= dev_i2c_closefn;
 643                             		.loc 1 277 16
 644 038f F9 A2 0E 00 00 00 00    		mov.L	#_dev_i2c_closefn, 56[r10]
 278:../device/i2c/i2c.c **** 	dmsdi.readfn	= dev_i2c_readfn;
 645                             		.loc 1 278 15
 646 0396 F9 A2 0F 00 00 00 00    		mov.L	#_dev_i2c_readfn, 60[r10]
 279:../device/i2c/i2c.c **** 	dmsdi.writefn	= dev_i2c_writefn;
 647                             		.loc 1 279 16
 648 039d F9 A2 10 00 00 00 00    		mov.L	#_dev_i2c_writefn, 64[r10]
 280:../device/i2c/i2c.c **** 	dmsdi.eventfn	= dev_i2c_eventfn;
 649                             		.loc 1 280 16
 650 03a4 F9 A2 11 00 00 00 00    		mov.L	#_dev_i2c_eventfn, 68[r10]
 281:../device/i2c/i2c.c **** 	
 282:../device/i2c/i2c.c **** 	knl_strcpy( (char*)dmsdi.devnm, DEVCNF_I2C_DEVNAME);
 651                             		.loc 1 282 2
 652 03ab 71 A5 14                		add	#20, r10, r5
 653 03ae 62 45                   		add	#4, r5
 654 03b0 FB 22 00 00 00 00       		mov.L	#.LC0, r2
 655 03b6 EF 51                   		mov.L	r5, r1
 656 03b8 05 00 00 00             		bsr	_knl_strcpy
 283:../device/i2c/i2c.c **** 	i = knl_strlen(DEVCNF_I2C_DEVNAME);
 657                             		.loc 1 283 6
 658 03bc FB 12 00 00 00 00       		mov.L	#.LC0, r1
 659 03c2 05 00 00 00             		bsr	_knl_strlen
 660 03c6 E7 A1 02                		mov.L	r1, 8[r10]
 284:../device/i2c/i2c.c **** 	dmsdi.devnm[i] = (UB)('a' + unit);
 661                             		.loc 1 284 19
 662 03c9 ED A5 12                		mov.L	72[r10], r5
 663 03cc 71 55 61                		add	#0x61, r5
 664 03cf CF 54                   		mov.B	r5, r4
 665                             		.loc 1 284 17
 666 03d1 71 A5 18                		add	#24, r10, r5
 667 03d4 06 89 A5 02             		add	8[r10].L, r5
 668 03d8 C3 54                   		mov.B	r4, [r5]
 285:../device/i2c/i2c.c **** 	dmsdi.devnm[i+1] = 0;
 669                             		.loc 1 285 15
 670 03da ED A5 02                		mov.L	8[r10], r5
 671 03dd 62 15                   		add	#1, r5
 672                             		.loc 1 285 19
 673 03df 4B A5                   		add	r10, r5
 674 03e1 3C D8 00                		mov.B	#0, 24[r5]
 286:../device/i2c/i2c.c **** 
 287:../device/i2c/i2c.c **** 	err = msdi_def_dev( &dmsdi, &idev, &p_msdi);
 675                             		.loc 1 287 8
 676 03e4 71 A3 10                		add	#16, r10, r3
 677 03e7 71 A4 0C                		add	#12, r10, r4
 678 03ea 71 A5 14                		add	#20, r10, r5
 679 03ed EF 42                   		mov.L	r4, r2
 680 03ef EF 51                   		mov.L	r5, r1
 681 03f1 05 00 00 00             		bsr	_msdi_def_dev
 682 03f5 E3 A1                   		mov.L	r1, [r10]
 288:../device/i2c/i2c.c **** 	if(err != E_OK) goto err_2;
 683                             		.loc 1 288 4
 684 03f7 EC A5                   		mov.L	[r10], r5
 685 03f9 61 05                   		cmp	#0, r5
 686 03fb 21 3B                   		bne	.L63
 289:../device/i2c/i2c.c **** 
 290:../device/i2c/i2c.c **** 	p_dcb->unit	= unit;
 687                             		.loc 1 290 14
 688 03fd ED A5 01                		mov.L	4[r10], r5
 689 0400 ED A4 12                		mov.L	72[r10], r4
 690 0403 E3 54                   		mov.L	r4, [r5]
 291:../device/i2c/i2c.c **** 	p_dcb->evtmbfid = idev.evtmbfid;
 691                             		.loc 1 291 24
 692 0405 ED A4 03                		mov.L	12[r10], r4
 693                             		.loc 1 291 18
 694 0408 ED A5 01                		mov.L	4[r10], r5
 695 040b A0 D4                   		mov.L	r4, 8[r5]
 292:../device/i2c/i2c.c **** 
 293:../device/i2c/i2c.c **** 	/* Low-level device initialization */
 294:../device/i2c/i2c.c **** 	err = dev_i2c_llinit( get_dcb_ptr(unit));
 696                             		.loc 1 294 8
 697 040d FB 52 00 00 00 00       		mov.L	#_dev_i2c_cb, r5
 698 0413 ED A4 12                		mov.L	72[r10], r4
 699 0416 FE 64 55                		mov.L	[r4,r5], r5
 700 0419 EF 51                   		mov.L	r5, r1
 701 041b 05 00 00 00             		bsr	_dev_i2c_llinit
 702 041f E3 A1                   		mov.L	r1, [r10]
 295:../device/i2c/i2c.c **** 	if(err != E_OK) goto err_1;
 703                             		.loc 1 295 4
 704 0421 EC A5                   		mov.L	[r10], r5
 705 0423 61 05                   		cmp	#0, r5
 706 0425 1D                      		bne	.L64
 296:../device/i2c/i2c.c **** 
 297:../device/i2c/i2c.c **** 	/* Set default value for attribute data */
 298:../device/i2c/i2c.c **** 
 299:../device/i2c/i2c.c **** 	return E_OK;
 707                             		.loc 1 299 9
 708 0426 66 05                   		mov.L	#0, r5
 709 0428 2E 18                   		bra	.L61
 710                             	.L64:
 295:../device/i2c/i2c.c **** 	if(err != E_OK) goto err_1;
 711                             		.loc 1 295 18
 712 042a 03                      		nop
 713                             	.L60:
 300:../device/i2c/i2c.c **** 
 301:../device/i2c/i2c.c **** err_1:
 302:../device/i2c/i2c.c **** 	msdi_del_dev(p_msdi);
 714                             		.loc 1 302 2
 715 042b ED A5 04                		mov.L	16[r10], r5
 716 042e EF 51                   		mov.L	r5, r1
 717 0430 05 00 00 00             		bsr	_msdi_del_dev
 718 0434 2E 03                   		bra	.L58
 719                             	.L63:
 288:../device/i2c/i2c.c **** 
 720                             		.loc 1 288 18
 721 0436 03                      		nop
 722                             	.L58:
 303:../device/i2c/i2c.c **** err_2:
 304:../device/i2c/i2c.c **** 	Kfree(p_dcb);
 723                             		.loc 1 304 2
 724 0437 ED A1 01                		mov.L	4[r10], r1
 725 043a 05 00 00 00             		bsr	_Kfree
 305:../device/i2c/i2c.c **** 	return err;
 726                             		.loc 1 305 9
 727 043e EC A5                   		mov.L	[r10], r5
 728                             		.balign 8,3,1
 729                             	.L61:
 306:../device/i2c/i2c.c **** }
 730                             		.loc 1 306 1 discriminator 1
 731 0440 EF 51                   		mov.L	r5, r1
 732 0442 3F AA 14                		rtsd	#80, r10-r10
 733                             	.LFE15:
 735                             		.global	_i2c_read_reg
 737                             	_i2c_read_reg:
 738                             	.LFB16:
 307:../device/i2c/i2c.c **** 
 308:../device/i2c/i2c.c **** /*----------------------------------------------------------------------
 309:../device/i2c/i2c.c ****  * I2C register access support function
 310:../device/i2c/i2c.c ****  */
 311:../device/i2c/i2c.c **** 
 312:../device/i2c/i2c.c **** EXPORT ER i2c_read_reg(ID dd, UW sadr, UW radr, UB *data)
 313:../device/i2c/i2c.c **** {
 739                             		.loc 1 313 1
 740 0445 7E AA                   		push.l	r10
 741                             	.LCFI25:
 742 0447 71 0A D4                		add	#-44, r0, r10
 743                             	.LCFI26:
 744 044a 71 A0 FC                		add	#-4, r10, r0
 745                             	.LCFI27:
 746 044d E7 A1 07                		mov.L	r1, 28[r10]
 747 0450 E7 A2 08                		mov.L	r2, 32[r10]
 748 0453 E7 A3 09                		mov.L	r3, 36[r10]
 749 0456 E7 A4 0A                		mov.L	r4, 40[r10]
 314:../device/i2c/i2c.c **** 	T_I2C_EXEC	exec;
 315:../device/i2c/i2c.c **** 	SZ		asz;
 316:../device/i2c/i2c.c **** 	ER		err;
 317:../device/i2c/i2c.c **** 
 318:../device/i2c/i2c.c **** 	exec.sadr	= sadr;
 750                             		.loc 1 318 12
 751 0459 ED A5 08                		mov.L	32[r10], r5
 752 045c E7 A5 01                		mov.L	r5, 4[r10]
 319:../device/i2c/i2c.c **** 	exec.snd_size	= 1;
 753                             		.loc 1 319 16
 754 045f F9 A6 02 01             		mov.L	#1, 8[r10]
 320:../device/i2c/i2c.c **** 	exec.snd_data	= (UB*)&radr;
 755                             		.loc 1 320 16
 756 0463 71 A5 24                		add	#36, r10, r5
 757 0466 E7 A5 03                		mov.L	r5, 12[r10]
 321:../device/i2c/i2c.c **** 	exec.rcv_size	= 1;
 758                             		.loc 1 321 16
 759 0469 F9 A6 04 01             		mov.L	#1, 16[r10]
 322:../device/i2c/i2c.c **** 	exec.rcv_data	= data;
 760                             		.loc 1 322 16
 761 046d ED A5 0A                		mov.L	40[r10], r5
 762 0470 E7 A5 05                		mov.L	r5, 20[r10]
 323:../device/i2c/i2c.c **** 
 324:../device/i2c/i2c.c **** 	err = tk_swri_dev(dd, TDN_I2C_EXEC, &exec, sizeof(T_I2C_EXEC), &asz);
 763                             		.loc 1 324 8
 764 0473 71 A5 04                		add	#4, r10, r5
 765 0476 71 A4 18                		add	#24, r10, r4
 766 0479 E3 04                   		mov.L	r4, [r0]
 767 047b 75 44 14                		mov.L	#20, r4
 768 047e EF 53                   		mov.L	r5, r3
 769 0480 FB 26 9C                		mov.L	#-100, r2
 770 0483 ED A1 07                		mov.L	28[r10], r1
 771 0486 05 00 00 00             		bsr	_tk_swri_dev
 772 048a E3 A1                   		mov.L	r1, [r10]
 325:../device/i2c/i2c.c **** 
 326:../device/i2c/i2c.c **** 	return err;
 773                             		.loc 1 326 9
 774 048c EC A5                   		mov.L	[r10], r5
 327:../device/i2c/i2c.c **** }
 775                             		.loc 1 327 1
 776 048e EF 51                   		mov.L	r5, r1
 777 0490 3F AA 0D                		rtsd	#52, r10-r10
 778                             	.LFE16:
 780                             		.global	_i2c_write_reg
 782                             	_i2c_write_reg:
 783                             	.LFB17:
 328:../device/i2c/i2c.c **** 
 329:../device/i2c/i2c.c **** EXPORT ER i2c_write_reg(ID dd, UW sadr, UW radr, UB data)
 330:../device/i2c/i2c.c **** {
 784                             		.loc 1 330 1
 785 0493 7E AA                   		push.l	r10
 786                             	.LCFI28:
 787 0495 71 0A E4                		add	#-28, r0, r10
 788                             	.LCFI29:
 789 0498 71 A0 FC                		add	#-4, r10, r0
 790                             	.LCFI30:
 791 049b E7 A1 03                		mov.L	r1, 12[r10]
 792 049e E7 A2 04                		mov.L	r2, 16[r10]
 793 04a1 E7 A3 05                		mov.L	r3, 20[r10]
 794 04a4 C7 A4 18                		mov.B	r4, 24[r10]
 331:../device/i2c/i2c.c **** 	UB	snd_data[2];
 332:../device/i2c/i2c.c **** 	SZ	asz;
 333:../device/i2c/i2c.c **** 	ER	err;
 334:../device/i2c/i2c.c **** 
 335:../device/i2c/i2c.c **** 	snd_data[0] = radr;
 795                             		.loc 1 335 14
 796 04a7 ED A5 05                		mov.L	20[r10], r5
 797 04aa C7 A5 04                		mov.B	r5, 4[r10]
 336:../device/i2c/i2c.c **** 	snd_data[1] = data;
 798                             		.loc 1 336 14
 799 04ad CD A5 18                		mov.B	24[r10], r5
 800 04b0 C7 A5 05                		mov.B	r5, 5[r10]
 337:../device/i2c/i2c.c **** 	
 338:../device/i2c/i2c.c **** 	err = tk_swri_dev(dd, sadr, snd_data, sizeof(snd_data), &asz);
 801                             		.loc 1 338 8
 802 04b3 ED A2 04                		mov.L	16[r10], r2
 803 04b6 71 A5 04                		add	#4, r10, r5
 804 04b9 71 A4 08                		add	#8, r10, r4
 805 04bc E3 04                   		mov.L	r4, [r0]
 806 04be 66 24                   		mov.L	#2, r4
 807 04c0 EF 53                   		mov.L	r5, r3
 808 04c2 ED A1 03                		mov.L	12[r10], r1
 809 04c5 05 00 00 00             		bsr	_tk_swri_dev
 810 04c9 E3 A1                   		mov.L	r1, [r10]
 339:../device/i2c/i2c.c **** 
 340:../device/i2c/i2c.c **** 	return err;
 811                             		.loc 1 340 9
 812 04cb EC A5                   		mov.L	[r10], r5
 341:../device/i2c/i2c.c **** }
 813                             		.loc 1 341 1
 814 04cd EF 51                   		mov.L	r5, r1
 815 04cf 3F AA 09                		rtsd	#36, r10-r10
 816                             	.LFE17:
 1099                             	.Letext0:
 1100                             		.file 2 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/tk/typedef.h"
 1101                             		.file 3 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/tk/syscall.h"
 1102                             		.file 4 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/tk/syslib.h"
 1103                             		.file 5 "../device/i2c/../common/drvif/msdrvif.h"
 1104                             		.file 6 "../device/i2c/../include/dev_i2c.h"
 1105                             		.file 7 "../device/i2c/i2c.h"
