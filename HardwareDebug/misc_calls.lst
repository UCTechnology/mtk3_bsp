   1                             		.file	"misc_calls.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   5                             	_knl_isTaskIndependent:
   6                             	.LFB16:
   7                             		.file 1 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\sysdepend\\cpu\\core\\rxv2\\cpu_st
   1:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
   2:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *----------------------------------------------------------------------
   3:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *    micro T-Kernel 3.00.03
   4:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *
   5:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *    Copyright (C) 2006-2021 by Ken Sakamura.
   6:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *    This software is distributed under the T-License 2.2.
   7:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *----------------------------------------------------------------------
   8:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *
   9:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *    Released by TRON Forum(http://www.tron.org) at 2021/03/31.
  10:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *
  11:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *----------------------------------------------------------------------
  12:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  13:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  14:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  15:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *	cpu_status.h (RXv2)
  16:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *	CPU-Dependent Status Definition
  17:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  18:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  19:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #ifndef _SYSDEPEND_CPU_CORE_STATUS_
  20:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define _SYSDEPEND_CPU_CORE_STATUS_
  21:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  22:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #include <tk/syslib.h>
  23:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #include <sys/sysdef.h>
  24:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  25:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #include "sysdepend.h"
  26:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  27:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  * Start/End critical section
  28:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  29:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define BEGIN_CRITICAL_SECTION	{ UINT _sr_ = disint();
  30:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define END_CRITICAL_SECTION	if ( !isDI(_sr_)			\
  31:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 				  && knl_ctxtsk != knl_schedtsk		\
  32:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 				  && !knl_isTaskIndependent()		\
  33:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 				  && !knl_dispatch_disabled ) {		\
  34:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 					knl_dispatch();			\
  35:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 				}					\
  36:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 				setint(_sr_); }
  37:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  38:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  * Start/End interrupt disable section
  39:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  40:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define BEGIN_DISABLE_INTERRUPT	{ UINT _sr_ = disint();
  41:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define END_DISABLE_INTERRUPT	setint(_sr_); }
  42:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  43:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  44:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  * Interrupt enable/disable
  45:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  46:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define ENABLE_INTERRUPT	{ setint(0); }
  47:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define DISABLE_INTERRUPT	{ disint(); }
  48:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  49:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  50:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  * Enable interrupt nesting
  51:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *	Enable the interrupt that has a higher priority than 'level.'
  52:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  53:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** #define ENABLE_INTERRUPT_UPTO(level)	{ setint(level); }
  54:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  55:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  56:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  *  Task-independent control
  57:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  58:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** IMPORT	W	knl_taskindp;		/* Task independent status */
  59:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 
  60:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** /*
  61:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  * If it is the task-independent part, TRUE
  62:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h ****  */
  63:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** Inline BOOL knl_isTaskIndependent( void )
  64:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** {
   8                             		.loc 1 64 1
   9 0000 7E AA                   		push.l	r10
  10                             	.LCFI0:
  11 0002 EF 0A                   		mov.L	r0, r10
  12                             	.LCFI1:
  65:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** 	return ( knl_taskindp > 0 )? TRUE: FALSE;
  13                             		.loc 1 65 35
  14 0004 FB 52 00 00 00 00       		mov.L	#_knl_taskindp, r5
  15 000a EC 55                   		mov.L	[r5], r5
  16 000c 61 05                   		cmp	#0, r5
  17 000e FC DB 5A                		scgt.L	r5
  18 0011 5B 55                   		movu.B	r5, r5
  66:d:\tkernel_dev\mtk3_bsp\dev_bsp_b2_tbrx65n\kernel\sysdepend\cpu\core\rxv2\cpu_status.h **** }
  19                             		.loc 1 66 1
  20 0013 EF 51                   		mov.L	r5, r1
  21 0015 3F AA 01                		rtsd	#4, r10-r10
  22                             	.LFE16:
  24                             		.global	_tk_ref_sys
  26                             	_tk_ref_sys:
  27                             	.LFB19:
  28                             		.file 2 "../kernel/tkernel/misc_calls.c"
   1:../kernel/tkernel/misc_calls.c **** /*
   2:../kernel/tkernel/misc_calls.c ****  *----------------------------------------------------------------------
   3:../kernel/tkernel/misc_calls.c ****  *    micro T-Kernel 3.00.01
   4:../kernel/tkernel/misc_calls.c ****  *
   5:../kernel/tkernel/misc_calls.c ****  *    Copyright (C) 2006-2020 by Ken Sakamura.
   6:../kernel/tkernel/misc_calls.c ****  *    This software is distributed under the T-License 2.2.
   7:../kernel/tkernel/misc_calls.c ****  *----------------------------------------------------------------------
   8:../kernel/tkernel/misc_calls.c ****  *
   9:../kernel/tkernel/misc_calls.c ****  *    Released by TRON Forum(http://www.tron.org) at 2020/05/29.
  10:../kernel/tkernel/misc_calls.c ****  *
  11:../kernel/tkernel/misc_calls.c ****  *----------------------------------------------------------------------
  12:../kernel/tkernel/misc_calls.c ****  */
  13:../kernel/tkernel/misc_calls.c **** 
  14:../kernel/tkernel/misc_calls.c **** /*
  15:../kernel/tkernel/misc_calls.c ****  *	misc_calls.c
  16:../kernel/tkernel/misc_calls.c ****  *	Other System Calls
  17:../kernel/tkernel/misc_calls.c ****  */
  18:../kernel/tkernel/misc_calls.c **** 
  19:../kernel/tkernel/misc_calls.c **** #include "kernel.h"
  20:../kernel/tkernel/misc_calls.c **** #include "check.h"
  21:../kernel/tkernel/misc_calls.c **** 
  22:../kernel/tkernel/misc_calls.c **** 
  23:../kernel/tkernel/misc_calls.c **** #ifdef USE_FUNC_TK_REF_SYS
  24:../kernel/tkernel/misc_calls.c **** /*
  25:../kernel/tkernel/misc_calls.c ****  * Refer system state
  26:../kernel/tkernel/misc_calls.c ****  */
  27:../kernel/tkernel/misc_calls.c **** SYSCALL ER tk_ref_sys( T_RSYS *pk_rsys )
  28:../kernel/tkernel/misc_calls.c **** {
  29                             		.loc 2 28 1
  30 0018 7E AA                   		push.l	r10
  31                             	.LCFI2:
  32 001a 71 0A F4                		add	#-12, r0, r10
  33                             	.LCFI3:
  34 001d EF A0                   		mov.L	r10, r0
  35 001f E7 A1 02                		mov.L	r1, 8[r10]
  29:../kernel/tkernel/misc_calls.c **** 	BOOL	b_qtsk;
  30:../kernel/tkernel/misc_calls.c **** 
  31:../kernel/tkernel/misc_calls.c **** 	if ( in_indp() ) {
  36                             		.loc 2 31 7
  37 0022 39 DE FF                		bsr	_knl_isTaskIndependent
  38 0025 EF 15                   		mov.L	r1, r5
  39                             		.loc 2 31 5
  40 0027 61 05                   		cmp	#0, r5
  41 0029 21 0D                   		bne	.L4
  42                             		.loc 2 31 7 discriminator 1
  43 002b FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
  44 0031 EC 55                   		mov.L	[r5], r5
  45 0033 61 05                   		cmp	#0, r5
  46 0035 1A                      		bne	.L5
  47                             	.L4:
  32:../kernel/tkernel/misc_calls.c **** 		pk_rsys->sysstat = TSS_INDP;
  48                             		.loc 2 32 20
  49 0036 ED A5 02                		mov.L	8[r10], r5
  50 0039 F8 56 04                		mov.L	#4, [r5]
  51 003c 38 AF 00                		bra	.L6
  52                             	.L5:
  53                             	.LBB2:
  33:../kernel/tkernel/misc_calls.c **** 	} else {
  34:../kernel/tkernel/misc_calls.c **** 		BEGIN_DISABLE_INTERRUPT;
  54                             		.loc 2 34 3
  55 003f 05 00 00 00             		bsr	_disint
  56 0043 E3 A1                   		mov.L	r1, [r10]
  35:../kernel/tkernel/misc_calls.c **** 		b_qtsk = in_qtsk();	
  57                             		.loc 2 35 12
  58 0045 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
  59 004b EC 55                   		mov.L	[r5], r5
  60 004d 9C 5C                   		mov.W	34[r5], r4
  61 004f FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
  62 0055 EC 55                   		mov.L	[r5], r5
  63 0057 CD 55 20                		mov.B	32[r5], r5
  64 005a CF 55                   		mov.B	r5, r5
  65 005c DF 44                   		mov.W	r4, r4
  66 005e DF 55                   		mov.W	r5, r5
  67 0060 47 54                   		cmp	r5, r4
  68 0062 FC DB 5A                		scgt.L	r5
  69                             		.loc 2 35 10
  70 0065 5B 55                   		movu.B	r5, r5
  71 0067 E7 A5 01                		mov.L	r5, 4[r10]
  36:../kernel/tkernel/misc_calls.c **** 		END_DISABLE_INTERRUPT;
  72                             		.loc 2 36 3
  73 006a EC A1                   		mov.L	[r10], r1
  74 006c 05 00 00 00             		bsr	_setint
  75                             	.LBE2:
  37:../kernel/tkernel/misc_calls.c **** 		
  38:../kernel/tkernel/misc_calls.c **** 		if ( b_qtsk ) {
  76                             		.loc 2 38 6
  77 0070 ED A5 01                		mov.L	4[r10], r5
  78 0073 61 05                   		cmp	#0, r5
  79 0075 10                      		beq	.L7
  39:../kernel/tkernel/misc_calls.c **** 			pk_rsys->sysstat = TSS_QTSK;
  80                             		.loc 2 39 21
  81 0076 ED A5 02                		mov.L	8[r10], r5
  82 0079 F8 56 08                		mov.L	#8, [r5]
  83 007c 0F                      		bra	.L8
  84                             	.L7:
  40:../kernel/tkernel/misc_calls.c **** 		} else {
  41:../kernel/tkernel/misc_calls.c **** 			pk_rsys->sysstat = TSS_TSK;
  85                             		.loc 2 41 21
  86 007d ED A5 02                		mov.L	8[r10], r5
  87 0080 F8 56 00                		mov.L	#0, [r5]
  88                             	.L8:
  42:../kernel/tkernel/misc_calls.c **** 		}
  43:../kernel/tkernel/misc_calls.c **** 		if ( in_loc() ) {
  89                             		.loc 2 43 8
  90 0083 05 00 00 00             		bsr	_GetCpuIntLevel
  91 0087 EF 15                   		mov.L	r1, r5
  92                             		.loc 2 43 6
  93 0089 75 55 10                		cmp	#16, r5
  94 008c 20 17                   		beq	.L9
  95                             		.loc 2 43 8 discriminator 1
  96 008e 39 72 FF                		bsr	_knl_isTaskIndependent
  97 0091 EF 15                   		mov.L	r1, r5
  98 0093 61 05                   		cmp	#0, r5
  99 0095 21 0E                   		bne	.L9
 100                             		.loc 2 43 8 is_stmt 0 discriminator 2
 101 0097 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 102 009d EC 55                   		mov.L	[r5], r5
 103 009f 61 05                   		cmp	#0, r5
 104 00a1 21 10                   		bne	.L10
 105                             	.L9:
  44:../kernel/tkernel/misc_calls.c **** 			pk_rsys->sysstat |= TSS_DINT;
 106                             		.loc 2 44 21 is_stmt 1
 107 00a3 ED A5 02                		mov.L	8[r10], r5
 108 00a6 EC 55                   		mov.L	[r5], r5
 109 00a8 66 24                   		mov.L	#2, r4
 110 00aa 57 54                   		or	r5, r4
 111 00ac ED A5 02                		mov.L	8[r10], r5
 112 00af E3 54                   		mov.L	r4, [r5]
 113                             	.L10:
  45:../kernel/tkernel/misc_calls.c **** 		}
  46:../kernel/tkernel/misc_calls.c **** 		if ( in_ddsp() ) {
 114                             		.loc 2 46 8
 115 00b1 FB 52 00 00 00 00       		mov.L	#_knl_dispatch_disabled, r5
 116 00b7 EC 55                   		mov.L	[r5], r5
 117                             		.loc 2 46 6
 118 00b9 61 05                   		cmp	#0, r5
 119 00bb 21 22                   		bne	.L11
 120                             		.loc 2 46 8 discriminator 1
 121 00bd 39 43 FF                		bsr	_knl_isTaskIndependent
 122 00c0 EF 15                   		mov.L	r1, r5
 123 00c2 61 05                   		cmp	#0, r5
 124 00c4 21 19                   		bne	.L11
 125                             		.loc 2 46 8 is_stmt 0 discriminator 2
 126 00c6 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 127 00cc EC 55                   		mov.L	[r5], r5
 128 00ce 61 05                   		cmp	#0, r5
 129 00d0 20 0D                   		beq	.L11
 130                             		.loc 2 46 8 discriminator 3
 131 00d2 05 00 00 00             		bsr	_GetCpuIntLevel
 132 00d6 EF 15                   		mov.L	r1, r5
 133 00d8 75 55 10                		cmp	#16, r5
 134 00db 21 10                   		bne	.L6
 135                             		.balign 8,3,1
 136                             	.L11:
  47:../kernel/tkernel/misc_calls.c **** 			pk_rsys->sysstat |= TSS_DDSP;
 137                             		.loc 2 47 21 is_stmt 1
 138 00dd ED A5 02                		mov.L	8[r10], r5
 139 00e0 EC 55                   		mov.L	[r5], r5
 140 00e2 66 14                   		mov.L	#1, r4
 141 00e4 57 54                   		or	r5, r4
 142 00e6 ED A5 02                		mov.L	8[r10], r5
 143 00e9 E3 54                   		mov.L	r4, [r5]
 144                             	.L6:
  48:../kernel/tkernel/misc_calls.c **** 		}
  49:../kernel/tkernel/misc_calls.c **** 	}
  50:../kernel/tkernel/misc_calls.c **** 	pk_rsys->runtskid = ( knl_ctxtsk != NULL )? knl_ctxtsk->tskid: 0;
 145                             		.loc 2 50 35
 146 00eb FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 147 00f1 EC 55                   		mov.L	[r5], r5
 148                             		.loc 2 50 63
 149 00f3 61 05                   		cmp	#0, r5
 150 00f5 20 0D                   		beq	.L12
 151                             		.loc 2 50 56 discriminator 1
 152 00f7 FB 52 00 00 00 00       		mov.L	#_knl_ctxtsk, r5
 153 00fd EC 55                   		mov.L	[r5], r5
 154                             		.loc 2 50 63 discriminator 1
 155 00ff A8 D4                   		mov.L	8[r5], r4
 156 0101 0B                      		bra	.L13
 157                             	.L12:
 158                             		.loc 2 50 63 is_stmt 0 discriminator 2
 159 0102 66 04                   		mov.L	#0, r4
 160                             	.L13:
 161                             		.loc 2 50 20 is_stmt 1 discriminator 4
 162 0104 ED A5 02                		mov.L	8[r10], r5
 163 0107 A0 5C                   		mov.L	r4, 4[r5]
  51:../kernel/tkernel/misc_calls.c **** 	pk_rsys->schedtskid = ( knl_schedtsk != NULL )? knl_schedtsk->tskid: 0;
 164                             		.loc 2 51 39 discriminator 4
 165 0109 FB 52 00 00 00 00       		mov.L	#_knl_schedtsk, r5
 166 010f EC 55                   		mov.L	[r5], r5
 167                             		.loc 2 51 69 discriminator 4
 168 0111 61 05                   		cmp	#0, r5
 169 0113 20 0D                   		beq	.L14
 170                             		.loc 2 51 62 discriminator 1
 171 0115 FB 52 00 00 00 00       		mov.L	#_knl_schedtsk, r5
 172 011b EC 55                   		mov.L	[r5], r5
 173                             		.loc 2 51 69 discriminator 1
 174 011d A8 D4                   		mov.L	8[r5], r4
 175 011f 0B                      		bra	.L15
 176                             	.L14:
 177                             		.loc 2 51 69 is_stmt 0 discriminator 2
 178 0120 66 04                   		mov.L	#0, r4
 179                             	.L15:
 180                             		.loc 2 51 22 is_stmt 1 discriminator 4
 181 0122 ED A5 02                		mov.L	8[r10], r5
 182 0125 A0 D4                   		mov.L	r4, 8[r5]
  52:../kernel/tkernel/misc_calls.c **** 
  53:../kernel/tkernel/misc_calls.c **** 	return E_OK;
 183                             		.loc 2 53 9 discriminator 4
 184 0127 66 05                   		mov.L	#0, r5
  54:../kernel/tkernel/misc_calls.c **** }
 185                             		.loc 2 54 1 discriminator 4
 186 0129 EF 51                   		mov.L	r5, r1
 187 012b 3F AA 04                		rtsd	#16, r10-r10
 188                             	.LFE19:
 190                             		.global	_tk_ref_ver
 192                             	_tk_ref_ver:
 193                             	.LFB20:
  55:../kernel/tkernel/misc_calls.c **** #endif /* USE_FUNC_TK_REF_SYS */
  56:../kernel/tkernel/misc_calls.c **** 
  57:../kernel/tkernel/misc_calls.c **** #ifdef USE_FUNC_TK_REF_VER
  58:../kernel/tkernel/misc_calls.c **** /*
  59:../kernel/tkernel/misc_calls.c ****  * Refer version information
  60:../kernel/tkernel/misc_calls.c ****  *	If there is no kernel version information,
  61:../kernel/tkernel/misc_calls.c ****  *	set 0 in each information. (Do NOT cause errors.)
  62:../kernel/tkernel/misc_calls.c ****  */
  63:../kernel/tkernel/misc_calls.c **** SYSCALL ER tk_ref_ver( T_RVER *pk_rver )
  64:../kernel/tkernel/misc_calls.c **** {
 194                             		.loc 2 64 1
 195 012e 7E AA                   		push.l	r10
 196                             	.LCFI4:
 197 0130 71 0A FC                		add	#-4, r0, r10
 198                             	.LCFI5:
 199 0133 EF A0                   		mov.L	r10, r0
 200 0135 E3 A1                   		mov.L	r1, [r10]
  65:../kernel/tkernel/misc_calls.c **** 	pk_rver->maker = (UH)VER_MAKER;	/* OS manufacturer */
 201                             		.loc 2 65 17
 202 0137 EC A5                   		mov.L	[r10], r5
 203 0139 F8 55 00                		mov.W	#0, [r5]
  66:../kernel/tkernel/misc_calls.c **** 	pk_rver->prid  = (UH)VER_PRID;	/* OS identification number */
 204                             		.loc 2 66 17
 205 013c EC A5                   		mov.L	[r10], r5
 206 013e 3D 51 00                		mov.W	#0, 2[r5]
  67:../kernel/tkernel/misc_calls.c **** 	pk_rver->spver = (UH)VER_SPVER;	/* Specification version */
 207                             		.loc 2 67 17
 208 0141 EC A5                   		mov.L	[r10], r5
 209 0143 F9 59 02 00 63          		mov.W	#0x6300, 4[r5]
  68:../kernel/tkernel/misc_calls.c **** 	pk_rver->prver = (UH)VER_PRVER;	/* OS product version */
 210                             		.loc 2 68 17
 211 0148 EC A5                   		mov.L	[r10], r5
 212 014a 3D 53 03                		mov.W	#3, 6[r5]
  69:../kernel/tkernel/misc_calls.c **** 	pk_rver->prno[0] = (UH)VER_PRNO1;	/* Product number */
 213                             		.loc 2 69 19
 214 014d EC A5                   		mov.L	[r10], r5
 215 014f 3D 54 00                		mov.W	#0, 8[r5]
  70:../kernel/tkernel/misc_calls.c **** 	pk_rver->prno[1] = (UH)VER_PRNO2;	/* Product number */
 216                             		.loc 2 70 19
 217 0152 EC A5                   		mov.L	[r10], r5
 218 0154 3D 55 00                		mov.W	#0, 10[r5]
  71:../kernel/tkernel/misc_calls.c **** 	pk_rver->prno[2] = (UH)VER_PRNO3;	/* Product number */
 219                             		.loc 2 71 19
 220 0157 EC A5                   		mov.L	[r10], r5
 221 0159 3D 56 00                		mov.W	#0, 12[r5]
  72:../kernel/tkernel/misc_calls.c **** 	pk_rver->prno[3] = (UH)VER_PRNO4;	/* Product number */
 222                             		.loc 2 72 19
 223 015c EC A5                   		mov.L	[r10], r5
 224 015e 3D 57 00                		mov.W	#0, 14[r5]
  73:../kernel/tkernel/misc_calls.c **** 
  74:../kernel/tkernel/misc_calls.c **** 	return E_OK;
 225                             		.loc 2 74 9
 226 0161 66 05                   		mov.L	#0, r5
  75:../kernel/tkernel/misc_calls.c **** }
 227                             		.loc 2 75 1
 228 0163 EF 51                   		mov.L	r5, r1
 229 0165 3F AA 02                		rtsd	#8, r10-r10
 230                             	.LFE20:
 306                             	.Letext0:
 307                             		.file 3 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/tk/typedef.h"
 308                             		.file 4 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/tk/syscall.h"
 309                             		.file 5 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\include/sys/queue.h"
 310                             		.file 6 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\knlinc/kernel.h"
 311                             		.file 7 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\tkernel\\timer.h"
 312                             		.file 8 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\tkernel\\winfo.h"
 313                             		.file 9 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\tkernel\\mutex.h"
 314                             		.file 10 "d:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_tbrx65n\\kernel\\sysdepend\\cpu\\core\\rxv2\\sysde
