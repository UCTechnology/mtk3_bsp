   1                             		.file	"app_main.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.global	_print_err
   6                             	_print_err:
   7                             	.LFB6:
   8                             		.file 1 "../app_program/app_main.c"
   1:../app_program/app_main.c **** /*
   2:../app_program/app_main.c ****  *----------------------------------------------------------------------
   3:../app_program/app_main.c ****  *    micro T-Kernel 3.0 BSP
   4:../app_program/app_main.c ****  *
   5:../app_program/app_main.c ****  *    Copyright (C) 2022 by Ken Sakamura.
   6:../app_program/app_main.c ****  *    This software is distributed under the T-License 2.2.
   7:../app_program/app_main.c ****  *----------------------------------------------------------------------
   8:../app_program/app_main.c ****  *
   9:../app_program/app_main.c ****  *    Released by TRON Forum(http://www.tron.org) at 2022/04.
  10:../app_program/app_main.c ****  *
  11:../app_program/app_main.c ****  *----------------------------------------------------------------------
  12:../app_program/app_main.c ****  */
  13:../app_program/app_main.c **** 
  14:../app_program/app_main.c **** #include <tk/tkernel.h>
  15:../app_program/app_main.c **** #include <tk/device.h>
  16:../app_program/app_main.c **** #include <tm/tmonitor.h>
  17:../app_program/app_main.c **** 
  18:../app_program/app_main.c **** /* ---------------------------------------------------------
  19:../app_program/app_main.c ****  * Sample User Program
  20:../app_program/app_main.c ****  * ---------------------------------------------------------
  21:../app_program/app_main.c ****  * 
  22:../app_program/app_main.c ****  * Entry routine for the user application.
  23:../app_program/app_main.c ****  * At this point, Initialize and start the user application.
  24:../app_program/app_main.c ****  *
  25:../app_program/app_main.c ****  * Entry routine is called from the initial task for Kernel,
  26:../app_program/app_main.c ****  * so system call for stopping the task should not be issued 
  27:../app_program/app_main.c ****  * from the contexts of entry routine.
  28:../app_program/app_main.c ****  * We recommend that:
  29:../app_program/app_main.c ****  * (1)'usermain()' only generates the user initial task.
  30:../app_program/app_main.c ****  * (2)initialize and start the user application by the user
  31:../app_program/app_main.c ****  * initial task.
  32:../app_program/app_main.c ****  */
  33:../app_program/app_main.c **** 
  34:../app_program/app_main.c **** #if USE_TMONITOR
  35:../app_program/app_main.c **** #define TM_PUTSTRING(a)	tm_putstring(a)
  36:../app_program/app_main.c **** 
  37:../app_program/app_main.c **** void print_err( UB* str, ER err)
  38:../app_program/app_main.c **** {
   9                             		.loc 1 38 1
  10 0000 7E AA                   		push.l	r10
  11                             	.LCFI0:
  12 0002 71 0A F8                		add	#-8, r0, r10
  13                             	.LCFI1:
  14 0005 71 A0 F8                		add	#-8, r10, r0
  15                             	.LCFI2:
  16 0008 E3 A1                   		mov.L	r1, [r10]
  17 000a E7 A2 01                		mov.L	r2, 4[r10]
  39:../app_program/app_main.c **** 	tm_printf(str, err);
  18                             		.loc 1 39 2
  19 000d ED A5 01                		mov.L	4[r10], r5
  20 0010 A0 0D                   		mov.L	r5, 4[r0]
  21 0012 EC A5                   		mov.L	[r10], r5
  22 0014 E3 05                   		mov.L	r5, [r0]
  23 0016 05 00 00 00             		bsr	_tm_printf
  40:../app_program/app_main.c **** }
  24                             		.loc 1 40 1
  25 001a 03                      		nop
  26 001b 3F AA 05                		rtsd	#20, r10-r10
  27                             	.LFE6:
  29                             		.section C,"a",@progbits
  30                             		.p2align 2
  31                             	.LC0:
  32 0000 53 74 61 72 74 20 54 61 		.string	"Start Task-1\n"
  32      73 6B 2D 31 0A 00 
  33                             	.LC1:
  34 000e 61 64 63 61 00          		.string	"adca"
  35                             	.LC2:
  36 0013 41 2F 44 20 3D 20 25 64 		.string	"A/D = %d\n"
  36      0A 00 
  37                             		.section P,"ax"
  38                             		.global	_tsk1
  40                             	_tsk1:
  41                             	.LFB7:
  41:../app_program/app_main.c **** 
  42:../app_program/app_main.c **** #else
  43:../app_program/app_main.c **** #define TM_PUTSTRING(a)
  44:../app_program/app_main.c **** 
  45:../app_program/app_main.c **** void print_err( UB* str, INT par) {}
  46:../app_program/app_main.c **** 
  47:../app_program/app_main.c **** #endif /* USE_TMONITOR */
  48:../app_program/app_main.c **** 
  49:../app_program/app_main.c **** 
  50:../app_program/app_main.c **** /* ----------------------------------------------------------
  51:../app_program/app_main.c ****  *
  52:../app_program/app_main.c ****  * Task-1 A/D
  53:../app_program/app_main.c ****  *
  54:../app_program/app_main.c ****  */
  55:../app_program/app_main.c **** void tsk1(INT stacd, void *exinf)
  56:../app_program/app_main.c **** {
  42                             		.loc 1 56 1
  43 001e 7E AA                   		push.l	r10
  44                             	.LCFI3:
  45 0020 71 0A E8                		add	#-24, r0, r10
  46                             	.LCFI4:
  47 0023 71 A0 F8                		add	#-8, r10, r0
  48                             	.LCFI5:
  49 0026 E7 A1 04                		mov.L	r1, 16[r10]
  50 0029 E7 A2 05                		mov.L	r2, 20[r10]
  57:../app_program/app_main.c **** 	ID	dd;
  58:../app_program/app_main.c **** 	ER	err;
  59:../app_program/app_main.c **** 	UW	data;
  60:../app_program/app_main.c **** 	SZ	asz;
  61:../app_program/app_main.c **** 
  62:../app_program/app_main.c **** 	TM_PUTSTRING((UB*)"Start Task-1\n");
  51                             		.loc 1 62 2
  52 002c FB 12 00 00 00 00       		mov.L	#.LC0, r1
  53 0032 05 00 00 00             		bsr	_tm_putstring
  63:../app_program/app_main.c **** 	dd = tk_opn_dev((UB*)"adca", TD_UPDATE);
  54                             		.loc 1 63 7
  55 0036 66 32                   		mov.L	#3, r2
  56 0038 FB 12 0E 00 00 00       		mov.L	#.LC1, r1
  57 003e 05 00 00 00             		bsr	_tk_opn_dev
  58 0042 E3 A1                   		mov.L	r1, [r10]
  59                             	.L3:
  64:../app_program/app_main.c **** 	while(1) {
  65:../app_program/app_main.c **** 		err = tk_srea_dev(dd, 0, &data, 1, &asz);
  60                             		.loc 1 65 9 discriminator 1
  61 0044 71 A5 08                		add	#8, r10, r5
  62 0047 71 A4 0C                		add	#12, r10, r4
  63 004a E3 04                   		mov.L	r4, [r0]
  64 004c 66 14                   		mov.L	#1, r4
  65 004e EF 53                   		mov.L	r5, r3
  66 0050 66 02                   		mov.L	#0, r2
  67 0052 EC A1                   		mov.L	[r10], r1
  68 0054 05 00 00 00             		bsr	_tk_srea_dev
  69 0058 E7 A1 01                		mov.L	r1, 4[r10]
  66:../app_program/app_main.c **** 		tm_printf((UB*)"A/D = %d\n", data);
  70                             		.loc 1 66 3 discriminator 1
  71 005b ED A5 02                		mov.L	8[r10], r5
  72 005e A0 0D                   		mov.L	r5, 4[r0]
  73 0060 F8 02 13 00 00 00       		mov.L	#.LC2, [r0]
  74 0066 05 00 00 00             		bsr	_tm_printf
  67:../app_program/app_main.c **** 		tk_dly_tsk(500);
  75                             		.loc 1 67 3 discriminator 1
  76 006a FB 1A F4 01             		mov.L	#0x1f4, r1
  77 006e 05 00 00 00             		bsr	_tk_dly_tsk
  65:../app_program/app_main.c **** 		tm_printf((UB*)"A/D = %d\n", data);
  78                             		.loc 1 65 7 discriminator 1
  79 0072 2E D2                   		bra	.L3
  80                             	.LFE7:
  82                             		.comm	_dd_i2c,4,4
  83                             		.global	_read_eeprom
  85                             	_read_eeprom:
  86                             	.LFB8:
  68:../app_program/app_main.c **** 	}
  69:../app_program/app_main.c **** 
  70:../app_program/app_main.c **** 	tk_exd_tsk();	/* Exit task */
  71:../app_program/app_main.c **** }
  72:../app_program/app_main.c **** 
  73:../app_program/app_main.c **** /* ---------------------------------------------------------
  74:../app_program/app_main.c ****  *
  75:../app_program/app_main.c ****  * Task-2 -- I2C
  76:../app_program/app_main.c ****  *
  77:../app_program/app_main.c ****  */
  78:../app_program/app_main.c **** 
  79:../app_program/app_main.c **** ID	dd_i2c;
  80:../app_program/app_main.c **** 
  81:../app_program/app_main.c **** /*-------------------------------------------------------------*/
  82:../app_program/app_main.c **** /* EEPROM R/W                                                  */
  83:../app_program/app_main.c **** /*-------------------------------------------------------------*/
  84:../app_program/app_main.c **** #define EEPROM_ADDR		0x53
  85:../app_program/app_main.c **** #define	EEPROM_SIZE		256
  86:../app_program/app_main.c **** #define	EEPROM_PAGE_SIZE		16
  87:../app_program/app_main.c **** 
  88:../app_program/app_main.c **** ER read_eeprom( ID dd_eeprom, W addr, void *buf, SZ size)
  89:../app_program/app_main.c **** {
  87                             		.loc 1 89 1
  88 0074 7E AA                   		push.l	r10
  89                             	.LCFI6:
  90 0076 71 0A E8                		add	#-24, r0, r10
  91                             	.LCFI7:
  92 0079 71 A0 FC                		add	#-4, r10, r0
  93                             	.LCFI8:
  94 007c E7 A1 02                		mov.L	r1, 8[r10]
  95 007f E7 A2 03                		mov.L	r2, 12[r10]
  96 0082 E7 A3 04                		mov.L	r3, 16[r10]
  97 0085 E7 A4 05                		mov.L	r4, 20[r10]
  90:../app_program/app_main.c **** 	static UB	data[EEPROM_SIZE];
  91:../app_program/app_main.c **** 	SZ		asz;
  92:../app_program/app_main.c **** 	ER		err;
  93:../app_program/app_main.c **** 
  94:../app_program/app_main.c **** 	if(addr < 0 || addr > EEPROM_ADDR) return E_PAR;
  98                             		.loc 1 94 4
  99 0088 ED A5 03                		mov.L	12[r10], r5
 100 008b 61 05                   		cmp	#0, r5
 101 008d 29 0A                   		blt	.L5
 102                             		.loc 1 94 14 discriminator 2
 103 008f ED A5 03                		mov.L	12[r10], r5
 104 0092 75 55 53                		cmp	#0x53, r5
 105 0095 2B 08                   		ble	.L6
 106                             	.L5:
 107                             		.loc 1 94 44 discriminator 3
 108 0097 FB 56 EF                		mov.L	#-17, r5
 109 009a 38 F0 00                		bra	.L16
 110                             	.L6:
  95:../app_program/app_main.c **** 	if((addr + size -1) >= EEPROM_SIZE ) return E_PAR;
 111                             		.loc 1 95 11
 112 009d ED A5 03                		mov.L	12[r10], r5
 113 00a0 06 89 A5 05             		add	20[r10].L, r5
 114                             		.loc 1 95 4
 115 00a4 76 05 00 01             		cmp	#0x100, r5
 116 00a8 2B 08                   		ble	.L8
 117                             		.loc 1 95 46 discriminator 1
 118 00aa FB 56 EF                		mov.L	#-17, r5
 119 00ad 38 DD 00                		bra	.L16
 120                             	.L8:
  96:../app_program/app_main.c **** 
  97:../app_program/app_main.c **** 	data[0] = addr;
 121                             		.loc 1 97 10
 122 00b0 ED A5 03                		mov.L	12[r10], r5
 123 00b3 CF 54                   		mov.B	r5, r4
 124 00b5 FB 52 00 00 00 00       		mov.L	#_data.2093, r5
 125 00bb C3 54                   		mov.B	r4, [r5]
  98:../app_program/app_main.c **** 	err = tk_swri_dev(dd_eeprom, EEPROM_ADDR, data, 1, &asz);
 126                             		.loc 1 98 8
 127 00bd 71 A5 04                		add	#4, r10, r5
 128 00c0 E3 05                   		mov.L	r5, [r0]
 129 00c2 66 14                   		mov.L	#1, r4
 130 00c4 FB 32 00 00 00 00       		mov.L	#_data.2093, r3
 131 00ca 75 42 53                		mov.L	#0x53, r2
 132 00cd ED A1 02                		mov.L	8[r10], r1
 133 00d0 05 00 00 00             		bsr	_tk_swri_dev
 134 00d4 E3 A1                   		mov.L	r1, [r10]
  99:../app_program/app_main.c **** 	if(err != E_OK) return err;
 135                             		.loc 1 99 4
 136 00d6 EC A5                   		mov.L	[r10], r5
 137 00d8 61 05                   		cmp	#0, r5
 138 00da 16                      		beq	.L9
 139                             		.loc 1 99 25 discriminator 1
 140 00db EC A5                   		mov.L	[r10], r5
 141 00dd 38 AD 00                		bra	.L16
 142                             	.L9:
 100:../app_program/app_main.c **** 	tk_dly_tsk(1);
 143                             		.loc 1 100 2
 144 00e0 66 11                   		mov.L	#1, r1
 145 00e2 05 00 00 00             		bsr	_tk_dly_tsk
 101:../app_program/app_main.c **** 
 102:../app_program/app_main.c **** 	while(size > 0) {
 146                             		.loc 1 102 7
 147 00e6 38 98 00                		bra	.L10
 148                             	.L15:
 103:../app_program/app_main.c **** 		if(size > EEPROM_PAGE_SIZE) {
 149                             		.loc 1 103 5
 150 00e9 ED A5 05                		mov.L	20[r10], r5
 151 00ec 75 55 10                		cmp	#16, r5
 152 00ef 2B 52                   		ble	.L11
 153                             	.LBB2:
 104:../app_program/app_main.c **** 			err = tk_srea_dev(dd_eeprom, EEPROM_ADDR, data, EEPROM_PAGE_SIZE, &asz);
 154                             		.loc 1 104 10
 155 00f1 71 A5 04                		add	#4, r10, r5
 156 00f4 E3 05                   		mov.L	r5, [r0]
 157 00f6 75 44 10                		mov.L	#16, r4
 158 00f9 FB 32 00 00 00 00       		mov.L	#_data.2093, r3
 159 00ff 75 42 53                		mov.L	#0x53, r2
 160 0102 ED A1 02                		mov.L	8[r10], r1
 161 0105 05 00 00 00             		bsr	_tk_srea_dev
 162 0109 E3 A1                   		mov.L	r1, [r10]
 105:../app_program/app_main.c **** 			if(err != E_OK) return err;
 163                             		.loc 1 105 6
 164 010b EC A5                   		mov.L	[r10], r5
 165 010d 61 05                   		cmp	#0, r5
 166 010f 15                      		beq	.L12
 167                             		.loc 1 105 27 discriminator 1
 168 0110 EC A5                   		mov.L	[r10], r5
 169 0112 2E 78                   		bra	.L16
 170                             	.L12:
 106:../app_program/app_main.c **** 			knl_memcpy(buf, data, EEPROM_PAGE_SIZE);
 171                             		.loc 1 106 4
 172 0114 75 43 10                		mov.L	#16, r3
 173 0117 FB 22 00 00 00 00       		mov.L	#_data.2093, r2
 174 011d ED A1 04                		mov.L	16[r10], r1
 175 0120 05 00 00 00             		bsr	_knl_memcpy
 107:../app_program/app_main.c **** 			size -= EEPROM_PAGE_SIZE; buf += EEPROM_PAGE_SIZE; addr += EEPROM_PAGE_SIZE;
 176                             		.loc 1 107 9
 177 0124 ED A5 05                		mov.L	20[r10], r5
 178 0127 71 55 F0                		add	#-16, r5
 179 012a E7 A5 05                		mov.L	r5, 20[r10]
 180                             		.loc 1 107 34
 181 012d ED A5 04                		mov.L	16[r10], r5
 182 0130 71 55 10                		add	#16, r5
 183 0133 E7 A5 04                		mov.L	r5, 16[r10]
 184                             		.loc 1 107 60
 185 0136 ED A5 03                		mov.L	12[r10], r5
 186 0139 71 55 10                		add	#16, r5
 187 013c E7 A5 03                		mov.L	r5, 12[r10]
 188                             	.LBE2:
 189 013f 2E 39                   		bra	.L13
 190                             	.L11:
 191                             	.LBB3:
 108:../app_program/app_main.c **** 		} else {
 109:../app_program/app_main.c **** 			err = tk_srea_dev(dd_eeprom, EEPROM_ADDR, data, size, &asz);
 192                             		.loc 1 109 10
 193 0141 71 A5 04                		add	#4, r10, r5
 194 0144 E3 05                   		mov.L	r5, [r0]
 195 0146 ED A4 05                		mov.L	20[r10], r4
 196 0149 FB 32 00 00 00 00       		mov.L	#_data.2093, r3
 197 014f 75 42 53                		mov.L	#0x53, r2
 198 0152 ED A1 02                		mov.L	8[r10], r1
 199 0155 05 00 00 00             		bsr	_tk_srea_dev
 200 0159 E3 A1                   		mov.L	r1, [r10]
 110:../app_program/app_main.c **** 			if(err != E_OK) return err;
 201                             		.loc 1 110 6
 202 015b EC A5                   		mov.L	[r10], r5
 203 015d 61 05                   		cmp	#0, r5
 204 015f 15                      		beq	.L14
 205                             		.loc 1 110 27 discriminator 1
 206 0160 EC A5                   		mov.L	[r10], r5
 207 0162 2E 28                   		bra	.L16
 208                             	.L14:
 111:../app_program/app_main.c **** 			knl_memcpy(buf, data, size);
 209                             		.loc 1 111 4
 210 0164 ED A3 05                		mov.L	20[r10], r3
 211 0167 FB 22 00 00 00 00       		mov.L	#_data.2093, r2
 212 016d ED A1 04                		mov.L	16[r10], r1
 213 0170 05 00 00 00             		bsr	_knl_memcpy
 112:../app_program/app_main.c **** 			size = 0;
 214                             		.loc 1 112 9
 215 0174 F9 A6 05 00             		mov.L	#0, 20[r10]
 216                             	.L13:
 217                             	.LBE3:
 113:../app_program/app_main.c **** 		}
 114:../app_program/app_main.c **** 		tk_dly_tsk(1);
 218                             		.loc 1 114 3
 219 0178 66 11                   		mov.L	#1, r1
 220 017a 05 00 00 00             		bsr	_tk_dly_tsk
 221                             	.L10:
 102:../app_program/app_main.c **** 		if(size > EEPROM_PAGE_SIZE) {
 222                             		.loc 1 102 7
 223 017e ED A5 05                		mov.L	20[r10], r5
 224 0181 61 05                   		cmp	#0, r5
 225 0183 2B 05 38 64 FF          		bgt	.L15
 115:../app_program/app_main.c **** 	}
 116:../app_program/app_main.c **** 
 117:../app_program/app_main.c **** 	return err;
 226                             		.loc 1 117 9
 227 0188 EC A5                   		mov.L	[r10], r5
 228                             		.balign 8,3,1
 229                             	.L16:
 118:../app_program/app_main.c **** }
 230                             		.loc 1 118 1 discriminator 1
 231 018a EF 51                   		mov.L	r5, r1
 232 018c 3F AA 08                		rtsd	#32, r10-r10
 233                             	.LFE8:
 235                             		.global	_write_eeprom
 237                             	_write_eeprom:
 238                             	.LFB9:
 119:../app_program/app_main.c **** 
 120:../app_program/app_main.c **** ER write_eeprom( ID dd_eeprom, W addr, void *buf, SZ size)
 121:../app_program/app_main.c **** {
 239                             		.loc 1 121 1
 240 018f 7E AA                   		push.l	r10
 241                             	.LCFI9:
 242 0191 71 0A E8                		add	#-24, r0, r10
 243                             	.LCFI10:
 244 0194 71 A0 FC                		add	#-4, r10, r0
 245                             	.LCFI11:
 246 0197 E7 A1 02                		mov.L	r1, 8[r10]
 247 019a E7 A2 03                		mov.L	r2, 12[r10]
 248 019d E7 A3 04                		mov.L	r3, 16[r10]
 249 01a0 E7 A4 05                		mov.L	r4, 20[r10]
 122:../app_program/app_main.c **** 	static UB	data[EEPROM_SIZE];
 123:../app_program/app_main.c **** 	SZ		asz;
 124:../app_program/app_main.c **** 	ER		err;
 125:../app_program/app_main.c **** 
 126:../app_program/app_main.c **** 	if(addr < 0 || addr > EEPROM_ADDR) return E_PAR;
 250                             		.loc 1 126 4
 251 01a3 ED A5 03                		mov.L	12[r10], r5
 252 01a6 61 05                   		cmp	#0, r5
 253 01a8 29 0A                   		blt	.L18
 254                             		.loc 1 126 14 discriminator 2
 255 01aa ED A5 03                		mov.L	12[r10], r5
 256 01ad 75 55 53                		cmp	#0x53, r5
 257 01b0 2B 08                   		ble	.L19
 258                             	.L18:
 259                             		.loc 1 126 44 discriminator 3
 260 01b2 FB 56 EF                		mov.L	#-17, r5
 261 01b5 38 CB 00                		bra	.L28
 262                             	.L19:
 127:../app_program/app_main.c **** 	if((addr + size -1) >= EEPROM_SIZE ) return E_PAR;
 263                             		.loc 1 127 11
 264 01b8 ED A5 03                		mov.L	12[r10], r5
 265 01bb 06 89 A5 05             		add	20[r10].L, r5
 266                             		.loc 1 127 4
 267 01bf 76 05 00 01             		cmp	#0x100, r5
 268 01c3 2A 05 38 AF 00          		ble	.L22
 269                             		.loc 1 127 46 discriminator 1
 270 01c8 FB 56 EF                		mov.L	#-17, r5
 271 01cb 38 B5 00                		bra	.L28
 272                             	.L27:
 128:../app_program/app_main.c **** 
 129:../app_program/app_main.c **** 	while(size > 0) {
 130:../app_program/app_main.c **** 		data[0] = addr;
 273                             		.loc 1 130 11
 274 01ce ED A5 03                		mov.L	12[r10], r5
 275 01d1 CF 54                   		mov.B	r5, r4
 276 01d3 FB 52 00 01 00 00       		mov.L	#_data.2108, r5
 277 01d9 C3 54                   		mov.B	r4, [r5]
 131:../app_program/app_main.c **** 		if(size > EEPROM_PAGE_SIZE) {
 278                             		.loc 1 131 5
 279 01db ED A5 05                		mov.L	20[r10], r5
 280 01de 75 55 10                		cmp	#16, r5
 281 01e1 2B 52                   		ble	.L23
 282                             	.LBB4:
 132:../app_program/app_main.c **** 			knl_memcpy(&data[1], buf, EEPROM_PAGE_SIZE);
 283                             		.loc 1 132 4
 284 01e3 75 43 10                		mov.L	#16, r3
 285 01e6 ED A2 04                		mov.L	16[r10], r2
 286 01e9 FB 12 01 01 00 00       		mov.L	#_data.2108+1, r1
 287 01ef 05 00 00 00             		bsr	_knl_memcpy
 133:../app_program/app_main.c **** 			err = tk_swri_dev(dd_eeprom, EEPROM_ADDR, data, EEPROM_PAGE_SIZE+1, &asz);
 288                             		.loc 1 133 10
 289 01f3 71 A5 04                		add	#4, r10, r5
 290 01f6 E3 05                   		mov.L	r5, [r0]
 291 01f8 75 44 11                		mov.L	#17, r4
 292 01fb FB 32 00 01 00 00       		mov.L	#_data.2108, r3
 293 0201 75 42 53                		mov.L	#0x53, r2
 294 0204 ED A1 02                		mov.L	8[r10], r1
 295 0207 05 00 00 00             		bsr	_tk_swri_dev
 296 020b E3 A1                   		mov.L	r1, [r10]
 134:../app_program/app_main.c **** 			if(err != E_OK) return err;
 297                             		.loc 1 134 6
 298 020d EC A5                   		mov.L	[r10], r5
 299 020f 61 05                   		cmp	#0, r5
 300 0211 15                      		beq	.L24
 301                             		.loc 1 134 27 discriminator 1
 302 0212 EC A5                   		mov.L	[r10], r5
 303 0214 2E 6C                   		bra	.L28
 304                             	.L24:
 135:../app_program/app_main.c **** 			size -= EEPROM_PAGE_SIZE; buf += EEPROM_PAGE_SIZE; addr += EEPROM_PAGE_SIZE;
 305                             		.loc 1 135 9
 306 0216 ED A5 05                		mov.L	20[r10], r5
 307 0219 71 55 F0                		add	#-16, r5
 308 021c E7 A5 05                		mov.L	r5, 20[r10]
 309                             		.loc 1 135 34
 310 021f ED A5 04                		mov.L	16[r10], r5
 311 0222 71 55 10                		add	#16, r5
 312 0225 E7 A5 04                		mov.L	r5, 16[r10]
 313                             		.loc 1 135 60
 314 0228 ED A5 03                		mov.L	12[r10], r5
 315 022b 71 55 10                		add	#16, r5
 316 022e E7 A5 03                		mov.L	r5, 12[r10]
 317                             	.LBE4:
 318 0231 2E 3D                   		bra	.L25
 319                             	.L23:
 320                             	.LBB5:
 136:../app_program/app_main.c **** 		} else {
 137:../app_program/app_main.c **** 			knl_memcpy(&data[1], buf, size);
 321                             		.loc 1 137 4
 322 0233 ED A3 05                		mov.L	20[r10], r3
 323 0236 ED A2 04                		mov.L	16[r10], r2
 324 0239 FB 12 01 01 00 00       		mov.L	#_data.2108+1, r1
 325 023f 05 00 00 00             		bsr	_knl_memcpy
 138:../app_program/app_main.c **** 			err = tk_swri_dev(dd_eeprom, EEPROM_ADDR, data, size+1, &asz);
 326                             		.loc 1 138 10
 327 0243 ED A5 05                		mov.L	20[r10], r5
 328 0246 62 15                   		add	#1, r5
 329 0248 71 A4 04                		add	#4, r10, r4
 330 024b E3 04                   		mov.L	r4, [r0]
 331 024d EF 54                   		mov.L	r5, r4
 332 024f FB 32 00 01 00 00       		mov.L	#_data.2108, r3
 333 0255 75 42 53                		mov.L	#0x53, r2
 334 0258 ED A1 02                		mov.L	8[r10], r1
 335 025b 05 00 00 00             		bsr	_tk_swri_dev
 336 025f E3 A1                   		mov.L	r1, [r10]
 139:../app_program/app_main.c **** 			if(err != E_OK) return err;
 337                             		.loc 1 139 6
 338 0261 EC A5                   		mov.L	[r10], r5
 339 0263 61 05                   		cmp	#0, r5
 340 0265 15                      		beq	.L26
 341                             		.loc 1 139 27 discriminator 1
 342 0266 EC A5                   		mov.L	[r10], r5
 343 0268 2E 18                   		bra	.L28
 344                             	.L26:
 140:../app_program/app_main.c **** 			size = 0;
 345                             		.loc 1 140 9
 346 026a F9 A6 05 00             		mov.L	#0, 20[r10]
 347                             	.L25:
 348                             	.LBE5:
 141:../app_program/app_main.c **** 		}
 142:../app_program/app_main.c **** 		tk_dly_tsk(1);
 349                             		.loc 1 142 3
 350 026e 66 11                   		mov.L	#1, r1
 351 0270 05 00 00 00             		bsr	_tk_dly_tsk
 352                             	.L22:
 129:../app_program/app_main.c **** 		data[0] = addr;
 353                             		.loc 1 129 7
 354 0274 ED A5 05                		mov.L	20[r10], r5
 355 0277 61 05                   		cmp	#0, r5
 356 0279 2B 05 38 53 FF          		bgt	.L27
 143:../app_program/app_main.c **** 	}
 144:../app_program/app_main.c **** 	return err;
 357                             		.loc 1 144 9
 358 027e EC A5                   		mov.L	[r10], r5
 359                             		.balign 8,3,1
 360                             	.L28:
 145:../app_program/app_main.c **** }
 361                             		.loc 1 145 1 discriminator 1
 362 0280 EF 51                   		mov.L	r5, r1
 363 0282 3F AA 08                		rtsd	#32, r10-r10
 364                             	.LFE9:
 366                             		.section C,"a",@progbits
 367 001d 00 00 00                		.p2align 2
 368                             	.LC3:
 369 0020 25 78 20 00             		.string	"%x "
 370                             	.LC4:
 371 0024 25 63 20 00             		.string	"%c "
 372                             		.section P,"ax"
 374                             	_test_eeprom:
 375                             	.LFB10:
 146:../app_program/app_main.c **** 
 147:../app_program/app_main.c **** LOCAL void test_eeprom(ID dd_i2c)
 148:../app_program/app_main.c **** {
 376                             		.loc 1 148 1
 377 0285 7E AA                   		push.l	r10
 378                             	.LCFI12:
 379 0287 71 0A D0                		add	#-48, r0, r10
 380                             	.LCFI13:
 381 028a 71 A0 F8                		add	#-8, r10, r0
 382                             	.LCFI14:
 383 028d E7 A1 0B                		mov.L	r1, 44[r10]
 149:../app_program/app_main.c **** 	UB	wd[10], rd[10];
 150:../app_program/app_main.c **** 	ER	err;
 151:../app_program/app_main.c **** 
 152:../app_program/app_main.c **** 	err = read_eeprom(dd_i2c, 0, rd, 5);
 384                             		.loc 1 152 8
 385 0290 71 A5 22                		add	#34, r10, r5
 386 0293 66 54                   		mov.L	#5, r4
 387 0295 EF 53                   		mov.L	r5, r3
 388 0297 66 02                   		mov.L	#0, r2
 389 0299 ED A1 0B                		mov.L	44[r10], r1
 390 029c 05 00 00 00             		bsr	_read_eeprom
 391 02a0 E7 A1 05                		mov.L	r1, 20[r10]
 392                             	.LBB6:
 153:../app_program/app_main.c **** 	for(INT i = 0; i < 5; i++) {
 393                             		.loc 1 153 10
 394 02a3 F8 A6 00                		mov.L	#0, [r10]
 395                             		.loc 1 153 2
 396 02a6 2E 1E                   		bra	.L30
 397                             	.L31:
 154:../app_program/app_main.c **** 		tm_printf((UB*)"%x ", rd[i]);
 398                             		.loc 1 154 27 discriminator 3
 399 02a8 71 A5 22                		add	#34, r10, r5
 400 02ab 06 88 A5                		add	[r10].L, r5
 401 02ae CC 55                   		mov.B	[r5], r5
 402                             		.loc 1 154 3 discriminator 3
 403 02b0 5B 55                   		movu.B	r5, r5
 404 02b2 A0 0D                   		mov.L	r5, 4[r0]
 405 02b4 F8 02 20 00 00 00       		mov.L	#.LC3, [r0]
 406 02ba 05 00 00 00             		bsr	_tm_printf
 153:../app_program/app_main.c **** 	for(INT i = 0; i < 5; i++) {
 407                             		.loc 1 153 25 discriminator 3
 408 02be EC A5                   		mov.L	[r10], r5
 409 02c0 62 15                   		add	#1, r5
 410 02c2 E3 A5                   		mov.L	r5, [r10]
 411                             	.L30:
 153:../app_program/app_main.c **** 	for(INT i = 0; i < 5; i++) {
 412                             		.loc 1 153 2 discriminator 1
 413 02c4 EC A5                   		mov.L	[r10], r5
 414 02c6 61 45                   		cmp	#4, r5
 415 02c8 2B E0                   		ble	.L31
 416                             	.LBE6:
 155:../app_program/app_main.c **** 	}
 156:../app_program/app_main.c **** 	tm_putchar('\n');
 417                             		.loc 1 156 2
 418 02ca 66 A1                   		mov.L	#10, r1
 419 02cc 05 00 00 00             		bsr	_tm_putchar
 420                             	.LBB7:
 157:../app_program/app_main.c **** 
 158:../app_program/app_main.c **** 	for(INT i = 0; i < 5; i++) {
 421                             		.loc 1 158 10
 422 02d0 F9 A6 01 00             		mov.L	#0, 4[r10]
 423                             		.loc 1 158 2
 424 02d4 2E 1B                   		bra	.L32
 425                             	.L33:
 159:../app_program/app_main.c **** 		wd[i] = 'a'+i;
 426                             		.loc 1 159 14 discriminator 3
 427 02d6 ED A5 01                		mov.L	4[r10], r5
 428 02d9 71 55 61                		add	#0x61, r5
 429 02dc CF 54                   		mov.B	r5, r4
 430                             		.loc 1 159 9 discriminator 3
 431 02de 71 A5 18                		add	#24, r10, r5
 432 02e1 06 89 A5 01             		add	4[r10].L, r5
 433 02e5 C3 54                   		mov.B	r4, [r5]
 158:../app_program/app_main.c **** 		wd[i] = 'a'+i;
 434                             		.loc 1 158 25 discriminator 3
 435 02e7 ED A5 01                		mov.L	4[r10], r5
 436 02ea 62 15                   		add	#1, r5
 437 02ec E7 A5 01                		mov.L	r5, 4[r10]
 438                             	.L32:
 158:../app_program/app_main.c **** 		wd[i] = 'a'+i;
 439                             		.loc 1 158 2 discriminator 1
 440 02ef ED A5 01                		mov.L	4[r10], r5
 441 02f2 61 45                   		cmp	#4, r5
 442 02f4 2B E2                   		ble	.L33
 443                             	.LBE7:
 160:../app_program/app_main.c **** 	}
 161:../app_program/app_main.c **** 	err = write_eeprom(dd_i2c, 0, wd, 5);
 444                             		.loc 1 161 8
 445 02f6 71 A5 18                		add	#24, r10, r5
 446 02f9 66 54                   		mov.L	#5, r4
 447 02fb EF 53                   		mov.L	r5, r3
 448 02fd 66 02                   		mov.L	#0, r2
 449 02ff ED A1 0B                		mov.L	44[r10], r1
 450 0302 05 00 00 00             		bsr	_write_eeprom
 451 0306 E7 A1 05                		mov.L	r1, 20[r10]
 162:../app_program/app_main.c **** 	err = read_eeprom(dd_i2c, 0, rd, 5);
 452                             		.loc 1 162 8
 453 0309 71 A5 22                		add	#34, r10, r5
 454 030c 66 54                   		mov.L	#5, r4
 455 030e EF 53                   		mov.L	r5, r3
 456 0310 66 02                   		mov.L	#0, r2
 457 0312 ED A1 0B                		mov.L	44[r10], r1
 458 0315 05 00 00 00             		bsr	_read_eeprom
 459 0319 E7 A1 05                		mov.L	r1, 20[r10]
 460                             	.LBB8:
 163:../app_program/app_main.c **** 	for(INT i = 0; i < 5; i++) {
 461                             		.loc 1 163 10
 462 031c F9 A6 02 00             		mov.L	#0, 8[r10]
 463                             		.loc 1 163 2
 464 0320 2E 21                   		bra	.L34
 465                             	.L35:
 164:../app_program/app_main.c **** 		tm_printf((UB*)"%c ", rd[i]);
 466                             		.loc 1 164 27 discriminator 3
 467 0322 71 A5 22                		add	#34, r10, r5
 468 0325 06 89 A5 02             		add	8[r10].L, r5
 469 0329 CC 55                   		mov.B	[r5], r5
 470                             		.loc 1 164 3 discriminator 3
 471 032b 5B 55                   		movu.B	r5, r5
 472 032d A0 0D                   		mov.L	r5, 4[r0]
 473 032f F8 02 24 00 00 00       		mov.L	#.LC4, [r0]
 474 0335 05 00 00 00             		bsr	_tm_printf
 163:../app_program/app_main.c **** 	for(INT i = 0; i < 5; i++) {
 475                             		.loc 1 163 25 discriminator 3
 476 0339 ED A5 02                		mov.L	8[r10], r5
 477 033c 62 15                   		add	#1, r5
 478 033e E7 A5 02                		mov.L	r5, 8[r10]
 479                             	.L34:
 163:../app_program/app_main.c **** 	for(INT i = 0; i < 5; i++) {
 480                             		.loc 1 163 2 discriminator 1
 481 0341 ED A5 02                		mov.L	8[r10], r5
 482 0344 61 45                   		cmp	#4, r5
 483 0346 2B DC                   		ble	.L35
 484                             	.LBE8:
 165:../app_program/app_main.c **** 	}
 166:../app_program/app_main.c **** 	tm_putchar('\n');
 485                             		.loc 1 166 2
 486 0348 66 A1                   		mov.L	#10, r1
 487 034a 05 00 00 00             		bsr	_tm_putchar
 488                             	.LBB9:
 167:../app_program/app_main.c **** 
 168:../app_program/app_main.c **** 	for(INT i = 0; i < 5; i++) {
 489                             		.loc 1 168 10
 490 034e F9 A6 03 00             		mov.L	#0, 12[r10]
 491                             		.loc 1 168 2
 492 0352 2E 1B                   		bra	.L36
 493                             	.L37:
 169:../app_program/app_main.c **** 		wd[i] = 'A'+i;
 494                             		.loc 1 169 14 discriminator 3
 495 0354 ED A5 03                		mov.L	12[r10], r5
 496 0357 71 55 41                		add	#0x41, r5
 497 035a CF 54                   		mov.B	r5, r4
 498                             		.loc 1 169 9 discriminator 3
 499 035c 71 A5 18                		add	#24, r10, r5
 500 035f 06 89 A5 03             		add	12[r10].L, r5
 501 0363 C3 54                   		mov.B	r4, [r5]
 168:../app_program/app_main.c **** 		wd[i] = 'A'+i;
 502                             		.loc 1 168 25 discriminator 3
 503 0365 ED A5 03                		mov.L	12[r10], r5
 504 0368 62 15                   		add	#1, r5
 505 036a E7 A5 03                		mov.L	r5, 12[r10]
 506                             	.L36:
 168:../app_program/app_main.c **** 		wd[i] = 'A'+i;
 507                             		.loc 1 168 2 discriminator 1
 508 036d ED A5 03                		mov.L	12[r10], r5
 509 0370 61 45                   		cmp	#4, r5
 510 0372 2B E2                   		ble	.L37
 511                             	.LBE9:
 170:../app_program/app_main.c **** 	}
 171:../app_program/app_main.c **** 	err = write_eeprom(dd_i2c, 0, wd, 5);
 512                             		.loc 1 171 8
 513 0374 71 A5 18                		add	#24, r10, r5
 514 0377 66 54                   		mov.L	#5, r4
 515 0379 EF 53                   		mov.L	r5, r3
 516 037b 66 02                   		mov.L	#0, r2
 517 037d ED A1 0B                		mov.L	44[r10], r1
 518 0380 05 00 00 00             		bsr	_write_eeprom
 519 0384 E7 A1 05                		mov.L	r1, 20[r10]
 172:../app_program/app_main.c **** 	err = read_eeprom(dd_i2c, 0, rd, 5);
 520                             		.loc 1 172 8
 521 0387 71 A5 22                		add	#34, r10, r5
 522 038a 66 54                   		mov.L	#5, r4
 523 038c EF 53                   		mov.L	r5, r3
 524 038e 66 02                   		mov.L	#0, r2
 525 0390 ED A1 0B                		mov.L	44[r10], r1
 526 0393 05 00 00 00             		bsr	_read_eeprom
 527 0397 E7 A1 05                		mov.L	r1, 20[r10]
 528                             	.LBB10:
 173:../app_program/app_main.c **** 	for(INT i = 0; i < 5; i++) {
 529                             		.loc 1 173 10
 530 039a F9 A6 04 00             		mov.L	#0, 16[r10]
 531                             		.loc 1 173 2
 532 039e 2E 21                   		bra	.L38
 533                             	.L39:
 174:../app_program/app_main.c **** 		tm_printf((UB*)"%c ", rd[i]);
 534                             		.loc 1 174 27 discriminator 3
 535 03a0 71 A5 22                		add	#34, r10, r5
 536 03a3 06 89 A5 04             		add	16[r10].L, r5
 537 03a7 CC 55                   		mov.B	[r5], r5
 538                             		.loc 1 174 3 discriminator 3
 539 03a9 5B 55                   		movu.B	r5, r5
 540 03ab A0 0D                   		mov.L	r5, 4[r0]
 541 03ad F8 02 24 00 00 00       		mov.L	#.LC4, [r0]
 542 03b3 05 00 00 00             		bsr	_tm_printf
 173:../app_program/app_main.c **** 	for(INT i = 0; i < 5; i++) {
 543                             		.loc 1 173 25 discriminator 3
 544 03b7 ED A5 04                		mov.L	16[r10], r5
 545 03ba 62 15                   		add	#1, r5
 546 03bc E7 A5 04                		mov.L	r5, 16[r10]
 547                             	.L38:
 173:../app_program/app_main.c **** 	for(INT i = 0; i < 5; i++) {
 548                             		.loc 1 173 2 discriminator 1
 549 03bf ED A5 04                		mov.L	16[r10], r5
 550 03c2 61 45                   		cmp	#4, r5
 551 03c4 2B DC                   		ble	.L39
 552                             	.LBE10:
 175:../app_program/app_main.c **** 	}
 176:../app_program/app_main.c **** 	tm_putchar('\n');
 553                             		.loc 1 176 2
 554 03c6 66 A1                   		mov.L	#10, r1
 555 03c8 05 00 00 00             		bsr	_tm_putchar
 177:../app_program/app_main.c **** }
 556                             		.loc 1 177 1
 557 03cc 03                      		nop
 558 03cd 3F AA 0F                		rtsd	#60, r10-r10
 559                             	.LFE10:
 561                             		.section C,"a",@progbits
 562                             		.p2align 2
 563                             	.LC5:
 564 0028 53 65 6E 73 6F 72 20 49 		.string	"Sensor Init OK\n"
 564      6E 69 74 20 4F 4B 0A 00 
 565                             	.LC6:
 566 0038 52 65 74 72 79 0A 00    		.string	"Retry\n"
 567                             	.LC7:
 568 003f 53 65 6E 73 6F 72 20 49 		.string	"Sensor Init ERROR %d\n"
 568      6E 69 74 20 45 52 52 4F 
 568      52 20 25 64 0A 00 
 569                             	.LC8:
 570 0055 53 65 6E 73 6F 72 20 52 		.string	"Sensor Read error %d\n"
 570      65 61 64 20 65 72 72 6F 
 570      72 20 25 64 0A 00 
 571                             	.LC9:
 572 006b 52 69 67 68 74 0A 00    		.string	"Right\n"
 573                             	.LC10:
 574 0072 4C 65 66 74 0A 00       		.string	"Left\n"
 575                             	.LC11:
 576 0078 55 70 0A 00             		.string	"Up\n"
 577                             	.LC12:
 578 007c 44 6F 77 6E 0A 00       		.string	"Down\n"
 579                             	.LC13:
 580 0082 46 6F 72 77 61 72 64 0A 		.string	"Forward\n"
 580      00 
 581                             	.LC14:
 582 008b 42 61 6C 63 6B 77 61 72 		.string	"Balckward\n"
 582      64 0A 00 
 583                             	.LC15:
 584 0096 43 6C 6F 63 6B 77 69 73 		.string	"Clockwise\n"
 584      65 0A 00 
 585                             	.LC16:
 586 00a1 41 6E 74 69 2D 43 6F 63 		.string	"Anti-Cockwise\n"
 586      6B 77 69 73 65 0A 00 
 587                             		.section P,"ax"
 589                             	_test_i2c:
 590                             	.LFB11:
 178:../app_program/app_main.c **** 
 179:../app_program/app_main.c **** /*--------------------------------------------------------------*/
 180:../app_program/app_main.c **** /* Gesture Sensor						*/
 181:../app_program/app_main.c **** /*--------------------------------------------------------------*/
 182:../app_program/app_main.c **** #include "gesture.h"
 183:../app_program/app_main.c **** 
 184:../app_program/app_main.c **** LOCAL void test_i2c(ID dd_i2c)
 185:../app_program/app_main.c **** {
 591                             		.loc 1 185 1
 592 03d0 7E AA                   		push.l	r10
 593                             	.LCFI15:
 594 03d2 71 0A F4                		add	#-12, r0, r10
 595                             	.LCFI16:
 596 03d5 71 A0 F8                		add	#-8, r10, r0
 597                             	.LCFI17:
 598 03d8 E7 A1 02                		mov.L	r1, 8[r10]
 186:../app_program/app_main.c **** 	UW	val;
 187:../app_program/app_main.c **** 	ER	err;
 188:../app_program/app_main.c **** 
 189:../app_program/app_main.c **** 
 190:../app_program/app_main.c **** 	err = gesture_sensor_init(dd_i2c);
 599                             		.loc 1 190 8
 600 03db ED A1 02                		mov.L	8[r10], r1
 601 03de 05 00 00 00             		bsr	_gesture_sensor_init
 602 03e2 E3 A1                   		mov.L	r1, [r10]
 191:../app_program/app_main.c **** 	if(err >= E_OK) tm_printf((UB*)"Sensor Init OK\n");
 603                             		.loc 1 191 4
 604 03e4 EC A5                   		mov.L	[r10], r5
 605 03e6 61 05                   		cmp	#0, r5
 606 03e8 29 0E                   		blt	.L41
 607                             		.loc 1 191 18 discriminator 1
 608 03ea F8 02 28 00 00 00       		mov.L	#.LC5, [r0]
 609 03f0 05 00 00 00             		bsr	_tm_printf
 610 03f4 2E 29                   		bra	.L52
 611                             	.L41:
 192:../app_program/app_main.c **** 	else {
 193:../app_program/app_main.c **** 		tm_printf((UB*)"Retry\n");
 612                             		.loc 1 193 3
 613 03f6 F8 02 38 00 00 00       		mov.L	#.LC6, [r0]
 614 03fc 05 00 00 00             		bsr	_tm_printf
 194:../app_program/app_main.c **** 		err = gesture_sensor_init(dd_i2c);
 615                             		.loc 1 194 9
 616 0400 ED A1 02                		mov.L	8[r10], r1
 617 0403 05 00 00 00             		bsr	_gesture_sensor_init
 618 0407 E3 A1                   		mov.L	r1, [r10]
 195:../app_program/app_main.c **** 		if(err < E_OK) tm_printf((UB*)"Sensor Init ERROR %d\n", err);
 619                             		.loc 1 195 5
 620 0409 EC A5                   		mov.L	[r10], r5
 621 040b 61 05                   		cmp	#0, r5
 622 040d 28 10                   		bge	.L52
 623                             		.loc 1 195 18 discriminator 1
 624 040f EC A5                   		mov.L	[r10], r5
 625 0411 A0 0D                   		mov.L	r5, 4[r0]
 626 0413 F8 02 3F 00 00 00       		mov.L	#.LC7, [r0]
 627 0419 05 00 00 00             		bsr	_tm_printf
 628                             		.balign 8,3,2
 629                             	.L52:
 196:../app_program/app_main.c **** 	}
 197:../app_program/app_main.c **** 
 198:../app_program/app_main.c **** 	while(1) {
 199:../app_program/app_main.c **** 		// Gesture sensor
 200:../app_program/app_main.c **** 		err = gesture_sensor_get(dd_i2c, &val);
 630                             		.loc 1 200 9
 631 041d 71 A5 04                		add	#4, r10, r5
 632 0420 EF 52                   		mov.L	r5, r2
 633 0422 ED A1 02                		mov.L	8[r10], r1
 634 0425 05 00 00 00             		bsr	_gesture_sensor_get
 635 0429 E3 A1                   		mov.L	r1, [r10]
 201:../app_program/app_main.c **** 		if(err<E_OK) tm_printf((UB*)"Sensor Read error %d\n", err);
 636                             		.loc 1 201 5
 637 042b EC A5                   		mov.L	[r10], r5
 638 042d 61 05                   		cmp	#0, r5
 639 042f 28 10                   		bge	.L43
 640                             		.loc 1 201 16 discriminator 1
 641 0431 EC A5                   		mov.L	[r10], r5
 642 0433 A0 0D                   		mov.L	r5, 4[r0]
 643 0435 F8 02 55 00 00 00       		mov.L	#.LC8, [r0]
 644 043b 05 00 00 00             		bsr	_tm_printf
 645                             	.L43:
 202:../app_program/app_main.c **** 
 203:../app_program/app_main.c **** 		if(val & GES_RIGHT_FLAG ) {
 646                             		.loc 1 203 10
 647 043f ED A5 01                		mov.L	4[r10], r5
 648 0442 64 15                   		and	#1, r5
 649                             		.loc 1 203 5
 650 0444 61 05                   		cmp	#0, r5
 651 0446 20 0E                   		beq	.L44
 204:../app_program/app_main.c **** 			tm_printf((UB*)"Right\n");
 652                             		.loc 1 204 4
 653 0448 F8 02 6B 00 00 00       		mov.L	#.LC9, [r0]
 654 044e 05 00 00 00             		bsr	_tm_printf
 655 0452 2E 3F                   		bra	.L45
 656                             	.L44:
 205:../app_program/app_main.c **** 		} else if(val & GES_LEFT_FLAG) {
 657                             		.loc 1 205 17
 658 0454 ED A5 01                		mov.L	4[r10], r5
 659 0457 64 25                   		and	#2, r5
 660                             		.loc 1 205 12
 661 0459 61 05                   		cmp	#0, r5
 662 045b 20 0E                   		beq	.L46
 206:../app_program/app_main.c **** 			tm_printf((UB*)"Left\n");
 663                             		.loc 1 206 4
 664 045d F8 02 72 00 00 00       		mov.L	#.LC10, [r0]
 665 0463 05 00 00 00             		bsr	_tm_printf
 666 0467 2E 2A                   		bra	.L45
 667                             	.L46:
 207:../app_program/app_main.c **** 		} else if(val & GES_UP_FLAG) {
 668                             		.loc 1 207 17
 669 0469 ED A5 01                		mov.L	4[r10], r5
 670 046c 64 45                   		and	#4, r5
 671                             		.loc 1 207 12
 672 046e 61 05                   		cmp	#0, r5
 673 0470 20 0E                   		beq	.L47
 208:../app_program/app_main.c **** 			tm_printf((UB*)"Up\n");
 674                             		.loc 1 208 4
 675 0472 F8 02 78 00 00 00       		mov.L	#.LC11, [r0]
 676 0478 05 00 00 00             		bsr	_tm_printf
 677 047c 2E 15                   		bra	.L45
 678                             	.L47:
 209:../app_program/app_main.c **** 		} else if(val & GES_DOWN_FLAG) {
 679                             		.loc 1 209 17
 680 047e ED A5 01                		mov.L	4[r10], r5
 681 0481 64 85                   		and	#8, r5
 682                             		.loc 1 209 12
 683 0483 61 05                   		cmp	#0, r5
 684 0485 20 0C                   		beq	.L45
 210:../app_program/app_main.c **** 			tm_printf((UB*)"Down\n");
 685                             		.loc 1 210 4
 686 0487 F8 02 7C 00 00 00       		mov.L	#.LC12, [r0]
 687 048d 05 00 00 00             		bsr	_tm_printf
 688                             		.balign 8,3,1
 689                             	.L45:
 211:../app_program/app_main.c **** 		}
 212:../app_program/app_main.c **** 
 213:../app_program/app_main.c **** 		if(val & GES_FORWARD_FLAG) {
 690                             		.loc 1 213 10
 691 0491 ED A5 01                		mov.L	4[r10], r5
 692 0494 75 25 10                		and	#16, r5
 693                             		.loc 1 213 5
 694 0497 61 05                   		cmp	#0, r5
 695 0499 20 0E                   		beq	.L48
 214:../app_program/app_main.c **** 			tm_printf((UB*)"Forward\n");
 696                             		.loc 1 214 4
 697 049b F8 02 82 00 00 00       		mov.L	#.LC13, [r0]
 698 04a1 05 00 00 00             		bsr	_tm_printf
 699 04a5 2E 16                   		bra	.L49
 700                             	.L48:
 215:../app_program/app_main.c **** 		} else if(val & GES_BACKWARD_FLAG) {
 701                             		.loc 1 215 17
 702 04a7 ED A5 01                		mov.L	4[r10], r5
 703 04aa 75 25 20                		and	#32, r5
 704                             		.loc 1 215 12
 705 04ad 61 05                   		cmp	#0, r5
 706 04af 20 0C                   		beq	.L49
 216:../app_program/app_main.c **** 			tm_printf((UB*)"Balckward\n");
 707                             		.loc 1 216 4
 708 04b1 F8 02 8B 00 00 00       		mov.L	#.LC14, [r0]
 709 04b7 05 00 00 00             		bsr	_tm_printf
 710                             	.L49:
 217:../app_program/app_main.c **** 		}
 218:../app_program/app_main.c **** 		if(val & GES_CLOCKWISE_FLAG) {
 711                             		.loc 1 218 10
 712 04bb ED A5 01                		mov.L	4[r10], r5
 713 04be 75 25 40                		and	#0x40, r5
 714                             		.loc 1 218 5
 715 04c1 61 05                   		cmp	#0, r5
 716 04c3 20 0E                   		beq	.L50
 219:../app_program/app_main.c **** 			tm_printf((UB*)"Clockwise\n");
 717                             		.loc 1 219 4
 718 04c5 F8 02 96 00 00 00       		mov.L	#.LC15, [r0]
 719 04cb 05 00 00 00             		bsr	_tm_printf
 720 04cf 2E 17                   		bra	.L51
 721                             	.L50:
 220:../app_program/app_main.c **** 		} else if(val & GES_COUNT_CLOCKWISE_FLAG) {
 722                             		.loc 1 220 17
 723 04d1 ED A5 01                		mov.L	4[r10], r5
 724 04d4 76 25 80 00             		and	#0x80, r5
 725                             		.loc 1 220 12
 726 04d8 61 05                   		cmp	#0, r5
 727 04da 20 0C                   		beq	.L51
 221:../app_program/app_main.c **** 			tm_printf((UB*)"Anti-Cockwise\n");
 728                             		.loc 1 221 4
 729 04dc F8 02 A1 00 00 00       		mov.L	#.LC16, [r0]
 730 04e2 05 00 00 00             		bsr	_tm_printf
 731                             	.L51:
 222:../app_program/app_main.c **** 		}
 223:../app_program/app_main.c **** 		tk_dly_tsk(500);
 732                             		.loc 1 223 3
 733 04e6 FB 1A F4 01             		mov.L	#0x1f4, r1
 734 04ea 05 00 00 00             		bsr	_tk_dly_tsk
 200:../app_program/app_main.c **** 		if(err<E_OK) tm_printf((UB*)"Sensor Read error %d\n", err);
 735                             		.loc 1 200 7
 736 04ee 38 2F FF                		bra	.L52
 737                             	.LFE11:
 739                             		.section C,"a",@progbits
 740                             		.p2align 2
 741                             	.LC17:
 742 00b0 53 74 61 72 74 20 54 61 		.string	"Start Task-2\n"
 742      73 6B 2D 32 0A 00 
 743                             	.LC18:
 744 00be 69 69 63 61 00          		.string	"iica"
 745                             	.LC19:
 746 00c3 4F 70 65 6E 20 45 72 72 		.string	"Open Error %d\n"
 746      6F 72 20 25 64 0A 00 
 747                             		.section P,"ax"
 748                             		.global	_tsk2
 750                             	_tsk2:
 751                             	.LFB12:
 224:../app_program/app_main.c **** 	}
 225:../app_program/app_main.c **** }
 226:../app_program/app_main.c **** 
 227:../app_program/app_main.c **** void tsk2(INT stacd, void *exinf)
 228:../app_program/app_main.c **** {
 752                             		.loc 1 228 1
 753 04f1 7E AA                   		push.l	r10
 754                             	.LCFI18:
 755 04f3 71 0A F8                		add	#-8, r0, r10
 756                             	.LCFI19:
 757 04f6 71 A0 F8                		add	#-8, r10, r0
 758                             	.LCFI20:
 759 04f9 E3 A1                   		mov.L	r1, [r10]
 760 04fb E7 A2 01                		mov.L	r2, 4[r10]
 229:../app_program/app_main.c **** 	TM_PUTSTRING((UB*)"Start Task-2\n");
 761                             		.loc 1 229 2
 762 04fe FB 12 B0 00 00 00       		mov.L	#.LC17, r1
 763 0504 05 00 00 00             		bsr	_tm_putstring
 230:../app_program/app_main.c **** 
 231:../app_program/app_main.c **** 	dd_i2c = tk_opn_dev((UB*)"iica", TD_UPDATE);
 764                             		.loc 1 231 11
 765 0508 66 32                   		mov.L	#3, r2
 766 050a FB 12 BE 00 00 00       		mov.L	#.LC18, r1
 767 0510 05 00 00 00             		bsr	_tk_opn_dev
 768 0514 EF 14                   		mov.L	r1, r4
 769                             		.loc 1 231 9
 770 0516 FB 52 00 00 00 00       		mov.L	#_dd_i2c, r5
 771 051c E3 54                   		mov.L	r4, [r5]
 232:../app_program/app_main.c **** 	if(dd_i2c<E_OK) tm_printf((UB*)"Open Error %d\n", dd_i2c);
 772                             		.loc 1 232 11
 773 051e FB 52 00 00 00 00       		mov.L	#_dd_i2c, r5
 774 0524 EC 55                   		mov.L	[r5], r5
 775                             		.loc 1 232 4
 776 0526 61 05                   		cmp	#0, r5
 777 0528 28 16                   		bge	.L54
 778                             		.loc 1 232 18 discriminator 1
 779 052a FB 52 00 00 00 00       		mov.L	#_dd_i2c, r5
 780 0530 EC 55                   		mov.L	[r5], r5
 781 0532 A0 0D                   		mov.L	r5, 4[r0]
 782 0534 F8 02 C3 00 00 00       		mov.L	#.LC19, [r0]
 783 053a 05 00 00 00             		bsr	_tm_printf
 784                             	.L54:
 233:../app_program/app_main.c **** 
 234:../app_program/app_main.c **** 	test_eeprom(dd_i2c);
 785                             		.loc 1 234 2
 786 053e FB 52 00 00 00 00       		mov.L	#_dd_i2c, r5
 787 0544 EC 55                   		mov.L	[r5], r5
 788 0546 EF 51                   		mov.L	r5, r1
 789 0548 39 3D FD                		bsr	_test_eeprom
 235:../app_program/app_main.c **** 	test_i2c(dd_i2c);
 790                             		.loc 1 235 2
 791 054b FB 52 00 00 00 00       		mov.L	#_dd_i2c, r5
 792 0551 EC 55                   		mov.L	[r5], r5
 793 0553 EF 51                   		mov.L	r5, r1
 794 0555 39 7B FE                		bsr	_test_i2c
 236:../app_program/app_main.c **** 
 237:../app_program/app_main.c **** 	tk_exd_tsk();	/* Exit Task */
 795                             		.loc 1 237 2
 796 0558 05 00 00 00             		bsr	_tk_exd_tsk
 238:../app_program/app_main.c **** }
 797                             		.loc 1 238 1
 798 055c 03                      		nop
 799 055d 3F AA 05                		rtsd	#20, r10-r10
 800                             	.LFE12:
 802                             		.global	_ctsk1
 803                             		.section C,"a",@progbits
 804 00d2 00 00                   		.p2align 2
 805                             		.balign 4
 808                             	_ctsk1:
 809 00d4 00 00 00 00             		.long	0
 810 00d8 01 03 00 00             		.long	0x301
 811 00dc 00 00 00 00             		.long	_tsk1
 812 00e0 0A 00 00 00             		.long	10
 813 00e4 00 04 00 00             		.long	0x400
 814 00e8 00 00 00 00             		.long	0
 815                             		.global	_ctsk2
 816                             		.balign 4
 819                             	_ctsk2:
 820 00ec 00 00 00 00             		.long	0
 821 00f0 01 03 00 00             		.long	0x301
 822 00f4 00 00 00 00             		.long	_tsk2
 823 00f8 0B 00 00 00             		.long	11
 824 00fc 00 04 00 00             		.long	0x400
 825 0100 00 00 00 00             		.long	0
 826                             	.LC20:
 827 0104 53 74 61 72 74 20 55 73 		.string	"Start User-main program.\n"
 827      65 72 2D 6D 61 69 6E 20 
 827      70 72 6F 67 72 61 6D 2E 
 827      0A 00 
 828                             	.LC21:
 829 011e 4D 61 6B 65 20 43 6F 64 		.string	"Make Code: %04x  Product ID: %04x\n"
 829      65 3A 20 25 30 34 78 20 
 829      20 50 72 6F 64 75 63 74 
 829      20 49 44 3A 20 25 30 34 
 829      78 0A 00 
 830                             	.LC22:
 831 0141 50 72 6F 64 75 63 74 20 		.string	"Product Ver. %04x\nProduct Num. %04x %04x %04x %04x\n"
 831      56 65 72 2E 20 25 30 34 
 831      78 0A 50 72 6F 64 75 63 
 831      74 20 4E 75 6D 2E 20 25 
 831      30 34 78 20 25 30 34 78 
 832 0175 00 00 00                		.section P,"ax"
 833                             		.global	_usermain
 835                             	_usermain:
 836                             	.LFB13:
 239:../app_program/app_main.c **** 
 240:../app_program/app_main.c **** const T_CTSK	ctsk1	= {0, (TA_HLNG | TA_RNG3), &tsk1, 10, 1024, 0};
 241:../app_program/app_main.c **** const T_CTSK	ctsk2	= {0, (TA_HLNG | TA_RNG3), &tsk2, 11, 1024, 0};
 242:../app_program/app_main.c **** 
 243:../app_program/app_main.c **** /* ----------------------------------------------------------
 244:../app_program/app_main.c ****  *
 245:../app_program/app_main.c ****  * User-Main Definition (Run on initial task)
 246:../app_program/app_main.c ****  *
 247:../app_program/app_main.c ****  */
 248:../app_program/app_main.c **** 
 249:../app_program/app_main.c **** EXPORT INT usermain( void )
 250:../app_program/app_main.c **** {
 837                             		.loc 1 250 1
 838 0560 7E AA                   		push.l	r10
 839                             	.LCFI21:
 840 0562 71 0A E8                		add	#-24, r0, r10
 841                             	.LCFI22:
 842 0565 71 A0 E8                		add	#-24, r10, r0
 843                             	.LCFI23:
 251:../app_program/app_main.c **** 	T_RVER	rver;
 252:../app_program/app_main.c **** 	ID	id1, id2;
 253:../app_program/app_main.c **** 
 254:../app_program/app_main.c **** 	TM_PUTSTRING((UB*)"Start User-main program.\n");
 844                             		.loc 1 254 2
 845 0568 FB 12 04 01 00 00       		mov.L	#.LC20, r1
 846 056e 05 00 00 00             		bsr	_tm_putstring
 255:../app_program/app_main.c **** 
 256:../app_program/app_main.c **** 	tk_ref_ver(&rver);		/* Get the OS Version. */
 847                             		.loc 1 256 2
 848 0572 71 A5 08                		add	#8, r10, r5
 849 0575 EF 51                   		mov.L	r5, r1
 850 0577 05 00 00 00             		bsr	_tk_ref_ver
 257:../app_program/app_main.c **** 
 258:../app_program/app_main.c **** #if USE_TMONITOR
 259:../app_program/app_main.c **** 	tm_printf((UB*)"Make Code: %04x  Product ID: %04x\n", rver.maker, rver.prid);
 851                             		.loc 1 259 60
 852 057b DD A5 04                		mov.W	8[r10], r5
 853                             		.loc 1 259 2
 854 057e 5F 55                   		movu.W	r5, r5
 855                             		.loc 1 259 72
 856 0580 DD A4 05                		mov.W	10[r10], r4
 857                             		.loc 1 259 2
 858 0583 5F 44                   		movu.W	r4, r4
 859 0585 A0 84                   		mov.L	r4, 8[r0]
 860 0587 A0 0D                   		mov.L	r5, 4[r0]
 861 0589 F8 02 1E 01 00 00       		mov.L	#.LC21, [r0]
 862 058f 05 00 00 00             		bsr	_tm_printf
 260:../app_program/app_main.c **** 	tm_printf((UB*)"Product Ver. %04x\nProduct Num. %04x %04x %04x %04x\n", 
 261:../app_program/app_main.c **** 			rver.prver, rver.prno[0],rver.prno[1],rver.prno[2],rver.prno[3]);
 863                             		.loc 1 261 8
 864 0593 DD A5 07                		mov.W	14[r10], r5
 260:../app_program/app_main.c **** 	tm_printf((UB*)"Product Ver. %04x\nProduct Num. %04x %04x %04x %04x\n", 
 865                             		.loc 1 260 2
 866 0596 5F 55                   		movu.W	r5, r5
 867                             		.loc 1 261 25
 868 0598 DD A4 08                		mov.W	16[r10], r4
 260:../app_program/app_main.c **** 	tm_printf((UB*)"Product Ver. %04x\nProduct Num. %04x %04x %04x %04x\n", 
 869                             		.loc 1 260 2
 870 059b 5F 44                   		movu.W	r4, r4
 871                             		.loc 1 261 38
 872 059d DD A3 09                		mov.W	18[r10], r3
 260:../app_program/app_main.c **** 	tm_printf((UB*)"Product Ver. %04x\nProduct Num. %04x %04x %04x %04x\n", 
 873                             		.loc 1 260 2
 874 05a0 5F 33                   		movu.W	r3, r3
 875                             		.loc 1 261 51
 876 05a2 DD A2 0A                		mov.W	20[r10], r2
 260:../app_program/app_main.c **** 	tm_printf((UB*)"Product Ver. %04x\nProduct Num. %04x %04x %04x %04x\n", 
 877                             		.loc 1 260 2
 878 05a5 5F 22                   		movu.W	r2, r2
 879                             		.loc 1 261 64
 880 05a7 DD A1 0B                		mov.W	22[r10], r1
 260:../app_program/app_main.c **** 	tm_printf((UB*)"Product Ver. %04x\nProduct Num. %04x %04x %04x %04x\n", 
 881                             		.loc 1 260 2
 882 05aa 5F 11                   		movu.W	r1, r1
 883 05ac A1 09                   		mov.L	r1, 20[r0]
 884 05ae A1 02                   		mov.L	r2, 16[r0]
 885 05b0 A0 8B                   		mov.L	r3, 12[r0]
 886 05b2 A0 84                   		mov.L	r4, 8[r0]
 887 05b4 A0 0D                   		mov.L	r5, 4[r0]
 888 05b6 F8 02 41 01 00 00       		mov.L	#.LC22, [r0]
 889 05bc 05 00 00 00             		bsr	_tm_printf
 262:../app_program/app_main.c **** #endif
 263:../app_program/app_main.c **** 
 264:../app_program/app_main.c **** 	id1 = tk_cre_tsk(&ctsk1);
 890                             		.loc 1 264 8
 891 05c0 FB 12 00 00 00 00       		mov.L	#_ctsk1, r1
 892 05c6 05 00 00 00             		bsr	_tk_cre_tsk
 893 05ca E3 A1                   		mov.L	r1, [r10]
 265:../app_program/app_main.c **** //	tk_sta_tsk(id1, 0);
 266:../app_program/app_main.c **** 
 267:../app_program/app_main.c **** 	id2 = tk_cre_tsk(&ctsk2);
 894                             		.loc 1 267 8
 895 05cc FB 12 00 00 00 00       		mov.L	#_ctsk2, r1
 896 05d2 05 00 00 00             		bsr	_tk_cre_tsk
 897 05d6 E7 A1 01                		mov.L	r1, 4[r10]
 268:../app_program/app_main.c **** 	tk_sta_tsk(id2, 0);
 898                             		.loc 1 268 2
 899 05d9 66 02                   		mov.L	#0, r2
 900 05db ED A1 01                		mov.L	4[r10], r1
 901 05de 05 00 00 00             		bsr	_tk_sta_tsk
 269:../app_program/app_main.c **** 
 270:../app_program/app_main.c **** 	tk_slp_tsk(TMO_FEVR);
 902                             		.loc 1 270 2
 903 05e2 FB 16 FF                		mov.L	#-1, r1
 904 05e5 05 00 00 00             		bsr	_tk_slp_tsk
 271:../app_program/app_main.c **** 
 272:../app_program/app_main.c **** 	return 0;
 905                             		.loc 1 272 9
 906 05e9 66 05                   		mov.L	#0, r5
 273:../app_program/app_main.c **** }
 907                             		.loc 1 273 1
 908 05eb EF 51                   		mov.L	r5, r1
 909 05ed 3F AA 0D                		rtsd	#52, r10-r10
 910                             	.LFE13:
 912                             		.local	_data.2093
 913                             		.comm	_data.2093,256,1
 914                             		.local	_data.2108
 915                             		.comm	_data.2108,256,1
 1126                             	.Letext0:
 1127                             		.file 2 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\include/tk/typedef.h"
 1128                             		.file 3 "D:\\tkernel_dev\\mtk3_bsp\\dev_bsp_b2_rskrx65n\\include/tk/syscall.h"
